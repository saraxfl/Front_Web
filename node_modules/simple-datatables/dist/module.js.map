{"version":3,"file":"module.js","sources":["../src/helpers.ts","../node_modules/diff-dom/dist/module.js","../src/virtual_dom.ts","../node_modules/dayjs/dayjs.min.js","../node_modules/dayjs/plugin/customParseFormat.js","../src/date.ts","../src/read_data.ts","../src/rows.ts","../src/columns.ts","../src/column_settings.ts","../src/templates.ts","../src/config.ts","../src/virtual_pager_dom.ts","../src/datatable.ts","../src/convert/csv.ts","../src/convert/json.ts","../src/export/csv.ts","../src/export/json.ts","../src/export/sql.ts","../src/export/txt.ts","../src/editing/config.ts","../src/editing/editor.ts","../src/column_filter/config.ts","../src/column_filter/column_filter.ts"],"sourcesContent":["import {\n    cellDataType,\n    cellType,\n    columnSettingsType,\n    inputCellType,\n    nodeType,\n    textNodeType\n} from \"./types\"\n\n/**\n * Check is item is object\n */\nexport const isObject = (val: (string | number | boolean | object | null | undefined )) => Object.prototype.toString.call(val) === \"[object Object]\"\n\n/**\n * Check for valid JSON string\n */\nexport const isJson = (str: string) => {\n    let t = !1\n    try {\n        t = JSON.parse(str)\n    } catch {\n        return !1\n    }\n    return !(null === t || (!Array.isArray(t) && !isObject(t))) && t\n}\n\n/**\n * Create DOM element node\n */\nexport const createElement = (nodeName: string, attrs?: { [key: string]: string}) => {\n    const dom = document.createElement(nodeName)\n    if (attrs && \"object\" == typeof attrs) {\n        for (const attr in attrs) {\n            if (\"html\" === attr) {\n                dom.innerHTML = attrs[attr]\n            } else {\n                dom.setAttribute(attr, attrs[attr])\n            }\n        }\n    }\n    return dom\n}\n\nexport const objToText = (obj: nodeType) => {\n    if ([\"#text\", \"#comment\"].includes(obj.nodeName)) {\n        return (obj as textNodeType).data\n    }\n    if (obj.childNodes) {\n        return obj.childNodes.map((childNode: nodeType) => objToText(childNode)).join(\"\")\n    }\n    return \"\"\n}\n\nexport const cellToText = (obj: inputCellType | cellDataType | null | undefined): string => {\n    if (obj === null || obj === undefined) {\n        return \"\"\n    } else if (obj.hasOwnProperty(\"text\") || obj.hasOwnProperty(\"data\")) {\n        const cell = obj as cellType\n        return cell.text ?? cellToText(cell.data)\n    } else if (obj.hasOwnProperty(\"nodeName\")) {\n        return objToText(obj as nodeType)\n    }\n    return String(obj)\n}\n\n\nexport const escapeText = function(text: string) {\n    return text\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n}\n\n\nexport const visibleToColumnIndex = function(visibleIndex: number, columns: columnSettingsType[]) {\n    let counter = 0\n    let columnIndex = 0\n    while (counter < (visibleIndex+1)) {\n        const columnSettings = columns[columnIndex]\n        if (!columnSettings.hidden) {\n            counter += 1\n        }\n        columnIndex += 1\n    }\n    return columnIndex-1\n}\n\nexport const columnToVisibleIndex = function(columnIndex: number, columns: columnSettingsType[]) {\n    let visibleIndex = columnIndex\n    let counter = 0\n    while (counter < columnIndex) {\n        const columnSettings = columns[counter]\n        if (columnSettings.hidden) {\n            visibleIndex -= 1\n        }\n        counter++\n    }\n    return visibleIndex\n}\n\n/**\n * Converts a [NamedNodeMap](https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap) into a normal object.\n *\n * @param map The `NamedNodeMap` to convert\n */\nexport const namedNodeMapToObject = function(map: NamedNodeMap) {\n    const obj = {}\n    if (map) {\n        for (const attr of map) {\n            obj[attr.name] = attr.value\n        }\n    }\n    return obj\n}\n\n/**\n * Convert class names to a CSS selector. Multiple classes should be separated by spaces.\n * Examples:\n *  - \"my-class\" -> \".my-class\"\n *  - \"my-class second-class\" -> \".my-class.second-class\"\n *\n * @param classNames The class names to convert. Can contain multiple classes separated by spaces.\n */\nexport const classNamesToSelector = (classNames: string) => {\n    if (!classNames) {\n        return null\n    }\n    return classNames.trim().split(\" \").map(className => `.${className}`).join(\"\")\n}\n\n/**\n * Check if the element contains all the classes. Multiple classes should be separated by spaces.\n *\n * @param element The element that will be checked\n * @param classes The classes that must be present in the element. Can contain multiple classes separated by spaces.\n */\nexport const containsClass = (element: Element, classes: string) => {\n    const hasMissingClass = classes?.split(\" \").some(className => !element.classList.contains(className))\n    return !hasMissingClass\n}\n\n/**\n * Join two strings with spaces. Null values are ignored.\n * Examples:\n *  - joinWithSpaces(\"a\", \"b\") -> \"a b\"\n *  - joinWithSpaces(\"a\", null) -> \"a\"\n *  - joinWithSpaces(null, \"b\") -> \"b\"\n *  - joinWithSpaces(\"a\", \"b c\") -> \"a b c\"\n *\n * @param first The first string to join\n * @param second The second string to join\n */\nexport const joinWithSpaces = (first: string | null | undefined, second: string | null | undefined) => {\n    if (first) {\n        if (second) {\n            return `${first} ${second}`\n        }\n        return first\n    } else if (second) {\n        return second\n    }\n    return \"\"\n}\n\n// Source: https://www.freecodecamp.org/news/javascript-debounce-example/\n\nexport const debounce = function(func: () => void, timeout = 300) {\n    let timer: number\n    return (..._args: any[]) => {\n        clearTimeout(timer)\n        timer = window.setTimeout(() => func(), timeout)\n    }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\n        var arguments$1 = arguments;\n\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments$1[i];\r\n            for (var p in s) { if (Object.prototype.hasOwnProperty.call(s, p)) { t[p] = s[p]; } }\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) { for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) { ar = Array.prototype.slice.call(from, 0, i); }\r\n            ar[i] = from[i];\r\n        }\r\n    } }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar Diff = /** @class */ (function () {\n    function Diff(options) {\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        Object.entries(options).forEach(function (_a) {\n            var key = _a[0], value = _a[1];\n            return (_this[key] = value);\n        });\n    }\n    Diff.prototype.toString = function () {\n        return JSON.stringify(this);\n    };\n    Diff.prototype.setValue = function (aKey, aValue) {\n        this[aKey] = aValue;\n        return this;\n    };\n    return Diff;\n}());\n/**\n * Checks if an element is of a certain type using direct property checking or DOM instanceof\n *\n * @param element The element to check\n * @param elementTypeNames The element type names to check against\n * @param simplifiedCheck If true, uses simplified checking based on nodeName/nodeType\n * @returns boolean indicating if the element matches any of the specified types\n */\nfunction checkElementType(element, simplifiedCheck) {\n    var arguments$1 = arguments;\n\n    if (simplifiedCheck === void 0) { simplifiedCheck = false; }\n    var elementTypeNames = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        elementTypeNames[_i - 2] = arguments$1[_i];\n    }\n    if (typeof element === \"undefined\" || element === null) {\n        return false;\n    }\n    // Simplified check for primitive virtual DOMs without ownerDocument\n    if (simplifiedCheck) {\n        var simplifiedResult = elementTypeNames.some(function (elementTypeName) {\n            // Special case for basic element types\n            if (elementTypeName === \"Element\") {\n                // Enhanced check that handles both virtual DOM objects and real DOM elements\n                return (element.nodeType === 1 ||\n                    (typeof element.nodeName === \"string\" &&\n                        element.nodeName !== \"#text\" &&\n                        element.nodeName !== \"#comment\") ||\n                    // Additional check for real DOM elements that might not have nodeType\n                    (element.tagName && typeof element.tagName === \"string\") ||\n                    // Check if it has DOM element-like properties (fallback)\n                    (element.setAttribute &&\n                        typeof element.setAttribute === \"function\"));\n            }\n            if (elementTypeName === \"Text\") {\n                return element.nodeType === 3 || element.nodeName === \"#text\";\n            }\n            if (elementTypeName === \"Comment\") {\n                return element.nodeType === 8 || element.nodeName === \"#comment\";\n            }\n            // For HTML element types, check nodeName or tagName\n            if (elementTypeName.startsWith(\"HTML\") &&\n                elementTypeName.endsWith(\"Element\")) {\n                var tagName = elementTypeName.slice(4, -7).toLowerCase();\n                return ((element.nodeName &&\n                    element.nodeName.toLowerCase() === tagName) ||\n                    (element.tagName &&\n                        element.tagName.toLowerCase() === tagName));\n            }\n            return false;\n        });\n        // If simplified check succeeds, return true\n        if (simplifiedResult) {\n            return true;\n        }\n        // Fallback to DOM-based check if simplified check fails and element has ownerDocument\n        if (element.ownerDocument) {\n            return elementTypeNames.some(function (elementTypeName) {\n                var _a, _b;\n                return typeof ((_b = (_a = element === null || element === void 0 ? void 0 : element.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) === null || _b === void 0 ? void 0 : _b[elementTypeName]) === \"function\" &&\n                    element instanceof\n                        element.ownerDocument.defaultView[elementTypeName];\n            });\n        }\n        return false;\n    }\n    // DOM-based check\n    return elementTypeNames.some(function (elementTypeName) {\n        var _a, _b;\n        // We need to check if the specified type is defined\n        // because otherwise instanceof throws an exception.\n        return typeof ((_b = (_a = element === null || element === void 0 ? void 0 : element.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) === null || _b === void 0 ? void 0 : _b[elementTypeName]) ===\n            \"function\" &&\n            element instanceof\n                element.ownerDocument.defaultView[elementTypeName];\n    });\n}\n\nfunction objToNode(objNode, insideSvg, options) {\n    var node;\n    if (objNode.nodeName === \"#text\") {\n        node = options.document.createTextNode(objNode.data);\n    }\n    else if (objNode.nodeName === \"#comment\") {\n        node = options.document.createComment(objNode.data);\n    }\n    else {\n        if (insideSvg) {\n            node = options.document.createElementNS(\"http://www.w3.org/2000/svg\", objNode.nodeName);\n            if (objNode.nodeName === \"foreignObject\") {\n                insideSvg = false;\n            }\n        }\n        else if (objNode.nodeName.toLowerCase() === \"svg\") {\n            node = options.document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n            insideSvg = true;\n        }\n        else {\n            node = options.document.createElement(objNode.nodeName);\n        }\n        if (objNode.attributes) {\n            Object.entries(objNode.attributes).forEach(function (_a) {\n                var key = _a[0], value = _a[1];\n                return node.setAttribute(key, value);\n            });\n        }\n        if (objNode.childNodes) {\n            node = node;\n            objNode.childNodes.forEach(function (childNode) {\n                return node.appendChild(objToNode(childNode, insideSvg, options));\n            });\n        }\n        if (options.valueDiffing) {\n            if (objNode.value &&\n                checkElementType(node, options.simplifiedElementCheck, \"HTMLButtonElement\", \"HTMLDataElement\", \"HTMLInputElement\", \"HTMLLIElement\", \"HTMLMeterElement\", \"HTMLOptionElement\", \"HTMLProgressElement\", \"HTMLParamElement\")) {\n                node.value = objNode.value;\n            }\n            if (objNode.checked &&\n                checkElementType(node, options.simplifiedElementCheck, \"HTMLInputElement\")) {\n                node.checked = objNode.checked;\n            }\n            if (objNode.selected &&\n                checkElementType(node, options.simplifiedElementCheck, \"HTMLOptionElement\")) {\n                node.selected = objNode.selected;\n            }\n        }\n    }\n    return node;\n}\n\n// ===== Apply a diff =====\nvar getFromRoute = function (node, route) {\n    route = route.slice();\n    while (route.length > 0) {\n        var c = route.splice(0, 1)[0];\n        node = node.childNodes[c];\n    }\n    return node;\n};\nfunction applyDiff(tree, diff, options) {\n    var action = diff[options._const.action];\n    var route = diff[options._const.route];\n    var node;\n    if (![options._const.addElement, options._const.addTextElement].includes(action)) {\n        // For adding nodes, we calculate the route later on. It's different because it includes the position of the newly added item.\n        node = getFromRoute(tree, route);\n    }\n    var newNode;\n    var reference;\n    var nodeArray;\n    // pre-diff hook\n    var info = {\n        diff: diff,\n        node: node\n    };\n    if (options.preDiffApply(info)) {\n        return true;\n    }\n    switch (action) {\n        case options._const.addAttribute:\n            if (!node ||\n                !checkElementType(node, options.simplifiedElementCheck, \"Element\")) {\n                return false;\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.value]);\n            break;\n        case options._const.modifyAttribute:\n            if (!node ||\n                !checkElementType(node, options.simplifiedElementCheck, \"Element\")) {\n                return false;\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.newValue]);\n            if (checkElementType(node, options.simplifiedElementCheck, \"HTMLInputElement\") &&\n                diff[options._const.name] === \"value\") {\n                node.value = diff[options._const.newValue];\n            }\n            break;\n        case options._const.removeAttribute:\n            if (!node ||\n                !checkElementType(node, options.simplifiedElementCheck, \"Element\")) {\n                return false;\n            }\n            node.removeAttribute(diff[options._const.name]);\n            break;\n        case options._const.modifyTextElement:\n            if (!node ||\n                !checkElementType(node, options.simplifiedElementCheck, \"Text\")) {\n                return false;\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue]);\n            if (checkElementType(node.parentNode, options.simplifiedElementCheck, \"HTMLTextAreaElement\")) {\n                node.parentNode.value = diff[options._const.newValue];\n            }\n            break;\n        case options._const.modifyValue:\n            if (!node || typeof node.value === \"undefined\") {\n                return false;\n            }\n            node.value = diff[options._const.newValue];\n            break;\n        case options._const.modifyComment:\n            if (!node ||\n                !checkElementType(node, options.simplifiedElementCheck, \"Comment\")) {\n                return false;\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue]);\n            break;\n        case options._const.modifyChecked:\n            if (!node || typeof node.checked === \"undefined\") {\n                return false;\n            }\n            node.checked = diff[options._const.newValue];\n            break;\n        case options._const.modifySelected:\n            if (!node || typeof node.selected === \"undefined\") {\n                return false;\n            }\n            node.selected = diff[options._const.newValue];\n            break;\n        case options._const.replaceElement: {\n            var insideSvg = diff[options._const.newValue].nodeName.toLowerCase() === \"svg\" ||\n                node.parentNode.namespaceURI === \"http://www.w3.org/2000/svg\";\n            node.parentNode.replaceChild(objToNode(diff[options._const.newValue], insideSvg, options), node);\n            break;\n        }\n        case options._const.relocateGroup:\n            nodeArray = __spreadArray([], new Array(diff[options._const.groupLength]), true).map(function () {\n                return node.removeChild(node.childNodes[diff[options._const.from]]);\n            });\n            nodeArray.forEach(function (childNode, index) {\n                if (index === 0) {\n                    reference =\n                        node.childNodes[diff[options._const.to]];\n                }\n                node.insertBefore(childNode, reference || null);\n            });\n            break;\n        case options._const.removeElement:\n            node.parentNode.removeChild(node);\n            break;\n        case options._const.addElement: {\n            var parentRoute = route.slice();\n            var c = parentRoute.splice(parentRoute.length - 1, 1)[0];\n            node = getFromRoute(tree, parentRoute);\n            if (!checkElementType(node, options.simplifiedElementCheck, \"Element\")) {\n                return false;\n            }\n            node.insertBefore(objToNode(diff[options._const.element], node.namespaceURI === \"http://www.w3.org/2000/svg\", options), node.childNodes[c] || null);\n            break;\n        }\n        case options._const.removeTextElement: {\n            if (!node || node.nodeType !== 3) {\n                return false;\n            }\n            var parentNode = node.parentNode;\n            parentNode.removeChild(node);\n            if (checkElementType(parentNode, options.simplifiedElementCheck, \"HTMLTextAreaElement\")) {\n                parentNode.value = \"\";\n            }\n            break;\n        }\n        case options._const.addTextElement: {\n            var parentRoute = route.slice();\n            var c = parentRoute.splice(parentRoute.length - 1, 1)[0];\n            newNode = options.document.createTextNode(diff[options._const.value]);\n            node = getFromRoute(tree, parentRoute);\n            if (!node.childNodes) {\n                return false;\n            }\n            node.insertBefore(newNode, node.childNodes[c] || null);\n            if (checkElementType(node.parentNode, options.simplifiedElementCheck, \"HTMLTextAreaElement\")) {\n                node.parentNode.value = diff[options._const.value];\n            }\n            break;\n        }\n        default:\n            console.log(\"unknown action\");\n    }\n    // if a new node was created, we might be interested in its\n    // post diff hook\n    options.postDiffApply({\n        diff: info.diff,\n        node: info.node,\n        newNode: newNode\n    });\n    return true;\n}\nfunction applyDOM(tree, diffs, options) {\n    return diffs.every(function (diff) {\n        return applyDiff(tree, diff, options);\n    });\n}\n\n// ===== Undo a diff =====\nfunction swap(obj, p1, p2) {\n    var tmp = obj[p1];\n    obj[p1] = obj[p2];\n    obj[p2] = tmp;\n}\nfunction undoDiff(tree, diff, options) {\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            diff[options._const.action] = options._const.removeAttribute;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyAttribute:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.removeAttribute:\n            diff[options._const.action] = options._const.addAttribute;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyTextElement:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyValue:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyComment:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyChecked:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifySelected:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.replaceElement:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.relocateGroup:\n            swap(diff, options._const.from, options._const.to);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.removeElement:\n            diff[options._const.action] = options._const.addElement;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.addElement:\n            diff[options._const.action] = options._const.removeElement;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.removeTextElement:\n            diff[options._const.action] = options._const.addTextElement;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.addTextElement:\n            diff[options._const.action] = options._const.removeTextElement;\n            applyDiff(tree, diff, options);\n            break;\n        default:\n            console.log(\"unknown action\");\n    }\n}\nfunction undoDOM(tree, diffs, options) {\n    diffs = diffs.slice();\n    diffs.reverse();\n    diffs.forEach(function (diff) {\n        undoDiff(tree, diff, options);\n    });\n}\n\nvar elementDescriptors = function (el) {\n    var output = [];\n    output.push(el.nodeName);\n    if (el.nodeName !== \"#text\" && el.nodeName !== \"#comment\") {\n        el = el;\n        if (el.attributes) {\n            if (el.attributes[\"class\"]) {\n                output.push(\"\".concat(el.nodeName, \".\").concat(el.attributes[\"class\"].replace(/ /g, \".\")));\n            }\n            if (el.attributes.id) {\n                output.push(\"\".concat(el.nodeName, \"#\").concat(el.attributes.id));\n            }\n        }\n    }\n    return output;\n};\nvar findUniqueDescriptors = function (li) {\n    var uniqueDescriptors = {};\n    var duplicateDescriptors = {};\n    li.forEach(function (node) {\n        elementDescriptors(node).forEach(function (descriptor) {\n            var inUnique = descriptor in uniqueDescriptors;\n            var inDupes = descriptor in duplicateDescriptors;\n            if (!inUnique && !inDupes) {\n                uniqueDescriptors[descriptor] = true;\n            }\n            else if (inUnique) {\n                delete uniqueDescriptors[descriptor];\n                duplicateDescriptors[descriptor] = true;\n            }\n        });\n    });\n    return uniqueDescriptors;\n};\nvar uniqueInBoth = function (l1, l2) {\n    var l1Unique = findUniqueDescriptors(l1);\n    var l2Unique = findUniqueDescriptors(l2);\n    var inBoth = {};\n    Object.keys(l1Unique).forEach(function (key) {\n        if (l2Unique[key]) {\n            inBoth[key] = true;\n        }\n    });\n    return inBoth;\n};\nvar removeDone = function (tree) {\n    delete tree.outerDone;\n    delete tree.innerDone;\n    delete tree.valueDone;\n    if (tree.childNodes) {\n        return tree.childNodes.every(removeDone);\n    }\n    else {\n        return true;\n    }\n};\nvar cleanNode = function (diffNode) {\n    if (Object.prototype.hasOwnProperty.call(diffNode, \"data\")) {\n        var textNode = {\n            nodeName: diffNode.nodeName === \"#text\" ? \"#text\" : \"#comment\",\n            data: diffNode.data\n        };\n        return textNode;\n    }\n    else {\n        var elementNode = {\n            nodeName: diffNode.nodeName\n        };\n        diffNode = diffNode;\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"attributes\")) {\n            elementNode.attributes = __assign({}, diffNode.attributes);\n        }\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"checked\")) {\n            elementNode.checked = diffNode.checked;\n        }\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"value\")) {\n            elementNode.value = diffNode.value;\n        }\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"selected\")) {\n            elementNode.selected = diffNode.selected;\n        }\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"childNodes\")) {\n            elementNode.childNodes = diffNode.childNodes.map(function (diffChildNode) {\n                return cleanNode(diffChildNode);\n            });\n        }\n        return elementNode;\n    }\n};\nvar isEqual = function (e1, e2) {\n    if (![\"nodeName\", \"value\", \"checked\", \"selected\", \"data\"].every(function (element) {\n        if (e1[element] !== e2[element]) {\n            return false;\n        }\n        return true;\n    })) {\n        return false;\n    }\n    if (Object.prototype.hasOwnProperty.call(e1, \"data\")) {\n        // Comment or Text\n        return true;\n    }\n    e1 = e1;\n    e2 = e2;\n    if (Boolean(e1.attributes) !== Boolean(e2.attributes)) {\n        return false;\n    }\n    if (Boolean(e1.childNodes) !== Boolean(e2.childNodes)) {\n        return false;\n    }\n    if (e1.attributes) {\n        var e1Attributes = Object.keys(e1.attributes);\n        var e2Attributes = Object.keys(e2.attributes);\n        if (e1Attributes.length !== e2Attributes.length) {\n            return false;\n        }\n        if (!e1Attributes.every(function (attribute) {\n            if (e1.attributes[attribute] !==\n                e2.attributes[attribute]) {\n                return false;\n            }\n            return true;\n        })) {\n            return false;\n        }\n    }\n    if (e1.childNodes) {\n        if (e1.childNodes.length !== e2.childNodes.length) {\n            return false;\n        }\n        if (!e1.childNodes.every(function (childNode, index) {\n            return isEqual(childNode, e2.childNodes[index]);\n        })) {\n            return false;\n        }\n    }\n    return true;\n};\nvar roughlyEqual = function (e1, e2, uniqueDescriptors, sameSiblings, preventRecursion) {\n    if (preventRecursion === void 0) { preventRecursion = false; }\n    if (!e1 || !e2) {\n        return false;\n    }\n    if (e1.nodeName !== e2.nodeName) {\n        return false;\n    }\n    if ([\"#text\", \"#comment\"].includes(e1.nodeName)) {\n        // Note that we initially don't care what the text content of a node is,\n        // the mere fact that it's the same tag and \"has text\" means it's roughly\n        // equal, and then we can find out the true text difference later.\n        return preventRecursion\n            ? true\n            : e1.data === e2.data;\n    }\n    e1 = e1;\n    e2 = e2;\n    if (e1.nodeName in uniqueDescriptors) {\n        return true;\n    }\n    if (e1.attributes && e2.attributes) {\n        if (e1.attributes.id) {\n            if (e1.attributes.id !== e2.attributes.id) {\n                return false;\n            }\n            else {\n                var idDescriptor = \"\".concat(e1.nodeName, \"#\").concat(e1.attributes.id);\n                if (idDescriptor in uniqueDescriptors) {\n                    return true;\n                }\n            }\n        }\n        if (e1.attributes[\"class\"] &&\n            e1.attributes[\"class\"] === e2.attributes[\"class\"]) {\n            var classDescriptor = \"\".concat(e1.nodeName, \".\").concat(e1.attributes[\"class\"].replace(/ /g, \".\"));\n            if (classDescriptor in uniqueDescriptors) {\n                return true;\n            }\n        }\n    }\n    if (sameSiblings) {\n        return true;\n    }\n    var nodeList1 = e1.childNodes ? e1.childNodes.slice().reverse() : [];\n    var nodeList2 = e2.childNodes ? e2.childNodes.slice().reverse() : [];\n    if (nodeList1.length !== nodeList2.length) {\n        return false;\n    }\n    if (preventRecursion) {\n        return nodeList1.every(function (element, index) {\n            return element.nodeName === nodeList2[index].nodeName;\n        });\n    }\n    else {\n        // note: we only allow one level of recursion at any depth. If 'preventRecursion'\n        // was not set, we must explicitly force it to true for child iterations.\n        var childUniqueDescriptors_1 = uniqueInBoth(nodeList1, nodeList2);\n        return nodeList1.every(function (element, index) {\n            return roughlyEqual(element, nodeList2[index], childUniqueDescriptors_1, true, true);\n        });\n    }\n};\n/**\n * based on https://en.wikibooks.org/wiki/Algorithm_implementation/Strings/Longest_common_substring#JavaScript\n */\nvar findCommonSubsets = function (c1, c2, marked1, marked2) {\n    var lcsSize = 0;\n    var index = [];\n    var c1Length = c1.length;\n    var c2Length = c2.length;\n    var // set up the matching table\n    matches = __spreadArray([], new Array(c1Length + 1), true).map(function () { return []; });\n    var uniqueDescriptors = uniqueInBoth(c1, c2);\n    var // If all of the elements are the same tag, id and class, then we can\n    // consider them roughly the same even if they have a different number of\n    // children. This will reduce removing and re-adding similar elements.\n    subsetsSame = c1Length === c2Length;\n    if (subsetsSame) {\n        c1.some(function (element, i) {\n            var c1Desc = elementDescriptors(element);\n            var c2Desc = elementDescriptors(c2[i]);\n            if (c1Desc.length !== c2Desc.length) {\n                subsetsSame = false;\n                return true;\n            }\n            c1Desc.some(function (description, i) {\n                if (description !== c2Desc[i]) {\n                    subsetsSame = false;\n                    return true;\n                }\n            });\n            if (!subsetsSame) {\n                return true;\n            }\n        });\n    }\n    // fill the matches with distance values\n    for (var c1Index = 0; c1Index < c1Length; c1Index++) {\n        var c1Element = c1[c1Index];\n        for (var c2Index = 0; c2Index < c2Length; c2Index++) {\n            var c2Element = c2[c2Index];\n            if (!marked1[c1Index] &&\n                !marked2[c2Index] &&\n                roughlyEqual(c1Element, c2Element, uniqueDescriptors, subsetsSame)) {\n                matches[c1Index + 1][c2Index + 1] = matches[c1Index][c2Index]\n                    ? matches[c1Index][c2Index] + 1\n                    : 1;\n                if (matches[c1Index + 1][c2Index + 1] >= lcsSize) {\n                    lcsSize = matches[c1Index + 1][c2Index + 1];\n                    index = [c1Index + 1, c2Index + 1];\n                }\n            }\n            else {\n                matches[c1Index + 1][c2Index + 1] = 0;\n            }\n        }\n    }\n    if (lcsSize === 0) {\n        return false;\n    }\n    return {\n        oldValue: index[0] - lcsSize,\n        newValue: index[1] - lcsSize,\n        length: lcsSize\n    };\n};\nvar makeBooleanArray = function (n, v) {\n    return __spreadArray([], new Array(n), true).map(function () { return v; });\n};\n/**\n * Generate arrays that indicate which node belongs to which subset,\n * or whether it's actually an orphan node, existing in only one\n * of the two trees, rather than somewhere in both.\n *\n * So if t1 = <img><canvas><br>, t2 = <canvas><br><img>.\n * The longest subset is \"<canvas><br>\" (length 2), so it will group 0.\n * The second longest is \"<img>\" (length 1), so it will be group 1.\n * gaps1 will therefore be [1,0,0] and gaps2 [0,0,1].\n *\n * If an element is not part of any group, it will stay being 'true', which\n * is the initial value. For example:\n * t1 = <img><p></p><br><canvas>, t2 = <b></b><br><canvas><img>\n *\n * The \"<p></p>\" and \"<b></b>\" do only show up in one of the two and will\n * therefore be marked by \"true\". The remaining parts are parts of the\n * groups 0 and 1:\n * gaps1 = [1, true, 0, 0], gaps2 = [true, 0, 0, 1]\n *\n */\nvar getGapInformation = function (t1, t2, stable) {\n    var gaps1 = t1.childNodes\n        ? makeBooleanArray(t1.childNodes.length, true)\n        : [];\n    var gaps2 = t2.childNodes\n        ? makeBooleanArray(t2.childNodes.length, true)\n        : [];\n    var group = 0;\n    // give elements from the same subset the same group number\n    stable.forEach(function (subset) {\n        var endOld = subset.oldValue + subset.length;\n        var endNew = subset.newValue + subset.length;\n        for (var j = subset.oldValue; j < endOld; j += 1) {\n            gaps1[j] = group;\n        }\n        for (var j = subset.newValue; j < endNew; j += 1) {\n            gaps2[j] = group;\n        }\n        group += 1;\n    });\n    return {\n        gaps1: gaps1,\n        gaps2: gaps2\n    };\n};\n/**\n * Find all matching subsets, based on immediate child differences only.\n */\nvar markBoth = function (marked1, marked2, subset, i) {\n    marked1[subset.oldValue + i] = true;\n    marked2[subset.newValue + i] = true;\n};\nvar markSubTrees = function (oldTree, newTree) {\n    // note: the child lists are views, and so update as we update old/newTree\n    var oldChildren = oldTree.childNodes ? oldTree.childNodes : [];\n    var newChildren = newTree.childNodes ? newTree.childNodes : [];\n    var marked1 = makeBooleanArray(oldChildren.length, false);\n    var marked2 = makeBooleanArray(newChildren.length, false);\n    var subsets = [];\n    var returnIndex = function () {\n        return arguments[1];\n    };\n    var foundAllSubsets = false;\n    var _loop_1 = function () {\n        var subset = findCommonSubsets(oldChildren, newChildren, marked1, marked2);\n        if (subset) {\n            subsets.push(subset);\n            var subsetArray = __spreadArray([], new Array(subset.length), true).map(returnIndex);\n            subsetArray.forEach(function (item) {\n                return markBoth(marked1, marked2, subset, item);\n            });\n        }\n        else {\n            foundAllSubsets = true;\n        }\n    };\n    while (!foundAllSubsets) {\n        _loop_1();\n    }\n    oldTree.subsets = subsets;\n    oldTree.subsetsAge = 100;\n    return subsets;\n};\nvar DiffTracker = /** @class */ (function () {\n    function DiffTracker() {\n        this.list = [];\n    }\n    DiffTracker.prototype.add = function (diffs) {\n        var _a;\n        (_a = this.list).push.apply(_a, diffs);\n    };\n    DiffTracker.prototype.forEach = function (fn) {\n        this.list.forEach(function (li) { return fn(li); });\n    };\n    return DiffTracker;\n}());\n\n// ===== Apply a virtual diff =====\nfunction getFromVirtualRoute(tree, route) {\n    var node = tree;\n    var parentNode;\n    var nodeIndex;\n    route = route.slice();\n    while (route.length > 0) {\n        nodeIndex = route.splice(0, 1)[0];\n        parentNode = node;\n        node = node.childNodes ? node.childNodes[nodeIndex] : undefined;\n    }\n    return {\n        node: node,\n        parentNode: parentNode,\n        nodeIndex: nodeIndex\n    };\n}\nfunction applyVirtualDiff(tree, diff, options) {\n    var _a;\n    var node, parentNode, nodeIndex;\n    if (![options._const.addElement, options._const.addTextElement].includes(diff[options._const.action])) {\n        // For adding nodes, we calculate the route later on. It's different because it includes the position of the newly added item.\n        var routeInfo = getFromVirtualRoute(tree, diff[options._const.route]);\n        node = routeInfo.node;\n        parentNode = routeInfo.parentNode;\n        nodeIndex = routeInfo.nodeIndex;\n    }\n    var newSubsets = [];\n    // pre-diff hook\n    var info = {\n        diff: diff,\n        node: node\n    };\n    if (options.preVirtualDiffApply(info)) {\n        return true;\n    }\n    var newNode;\n    var nodeArray;\n    var route;\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            if (!node.attributes) {\n                node.attributes = {};\n            }\n            node.attributes[diff[options._const.name]] =\n                diff[options._const.value];\n            if (diff[options._const.name] === \"checked\") {\n                node.checked = true;\n            }\n            else if (diff[options._const.name] === \"selected\") {\n                node.selected = true;\n            }\n            else if (node.nodeName === \"INPUT\" &&\n                diff[options._const.name] === \"value\") {\n                node.value = diff[options._const.value];\n            }\n            break;\n        case options._const.modifyAttribute:\n            node.attributes[diff[options._const.name]] =\n                diff[options._const.newValue];\n            break;\n        case options._const.removeAttribute:\n            delete node.attributes[diff[options._const.name]];\n            if (Object.keys(node.attributes).length === 0) {\n                delete node.attributes;\n            }\n            if (diff[options._const.name] === \"checked\") {\n                node.checked = false;\n            }\n            else if (diff[options._const.name] === \"selected\") {\n                delete node.selected;\n            }\n            else if (node.nodeName === \"INPUT\" &&\n                diff[options._const.name] === \"value\") {\n                delete node.value;\n            }\n            break;\n        case options._const.modifyTextElement:\n            node.data = diff[options._const.newValue];\n            if (parentNode.nodeName === \"TEXTAREA\") {\n                parentNode.value = diff[options._const.newValue];\n            }\n            break;\n        case options._const.modifyValue:\n            node.value = diff[options._const.newValue];\n            break;\n        case options._const.modifyComment:\n            node.data = diff[options._const.newValue];\n            break;\n        case options._const.modifyChecked:\n            node.checked = diff[options._const.newValue];\n            break;\n        case options._const.modifySelected:\n            node.selected = diff[options._const.newValue];\n            break;\n        case options._const.replaceElement:\n            newNode = cleanNode(diff[options._const.newValue]);\n            parentNode.childNodes[nodeIndex] = newNode;\n            break;\n        case options._const.relocateGroup:\n            nodeArray = node.childNodes\n                .splice(diff[options._const.from], diff[options._const.groupLength])\n                .reverse();\n            nodeArray.forEach(function (movedNode) {\n                return node.childNodes.splice(diff[options._const.to], 0, movedNode);\n            });\n            if (node.subsets) {\n                node.subsets.forEach(function (map) {\n                    if (diff[options._const.from] < diff[options._const.to] &&\n                        map.oldValue <= diff[options._const.to] &&\n                        map.oldValue > diff[options._const.from]) {\n                        map.oldValue -= diff[options._const.groupLength];\n                        var splitLength = map.oldValue + map.length - diff[options._const.to];\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] +\n                                    diff[options._const.groupLength],\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            });\n                            map.length -= splitLength;\n                        }\n                    }\n                    else if (diff[options._const.from] > diff[options._const.to] &&\n                        map.oldValue > diff[options._const.to] &&\n                        map.oldValue < diff[options._const.from]) {\n                        map.oldValue += diff[options._const.groupLength];\n                        var splitLength = map.oldValue + map.length - diff[options._const.to];\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] +\n                                    diff[options._const.groupLength],\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            });\n                            map.length -= splitLength;\n                        }\n                    }\n                    else if (map.oldValue === diff[options._const.from]) {\n                        map.oldValue = diff[options._const.to];\n                    }\n                });\n            }\n            break;\n        case options._const.removeElement:\n            parentNode.childNodes.splice(nodeIndex, 1);\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(function (map) {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1;\n                    }\n                    else if (map.oldValue === nodeIndex) {\n                        map[\"delete\"] = true;\n                    }\n                    else if (map.oldValue < nodeIndex &&\n                        map.oldValue + map.length > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--;\n                        }\n                        else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            });\n                            map.length = nodeIndex - map.oldValue;\n                        }\n                    }\n                });\n            }\n            node = parentNode;\n            break;\n        case options._const.addElement: {\n            route = diff[options._const.route].slice();\n            var c_1 = route.splice(route.length - 1, 1)[0];\n            node = (_a = getFromVirtualRoute(tree, route)) === null || _a === void 0 ? void 0 : _a.node;\n            newNode = cleanNode(diff[options._const.element]);\n            if (!node.childNodes) {\n                node.childNodes = [];\n            }\n            if (c_1 >= node.childNodes.length) {\n                node.childNodes.push(newNode);\n            }\n            else {\n                node.childNodes.splice(c_1, 0, newNode);\n            }\n            if (node.subsets) {\n                node.subsets.forEach(function (map) {\n                    if (map.oldValue >= c_1) {\n                        map.oldValue += 1;\n                    }\n                    else if (map.oldValue < c_1 &&\n                        map.oldValue + map.length > c_1) {\n                        var splitLength = map.oldValue + map.length - c_1;\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c_1 + 1,\n                            length: splitLength\n                        });\n                        map.length -= splitLength;\n                    }\n                });\n            }\n            break;\n        }\n        case options._const.removeTextElement:\n            parentNode.childNodes.splice(nodeIndex, 1);\n            if (parentNode.nodeName === \"TEXTAREA\") {\n                delete parentNode.value;\n            }\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(function (map) {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1;\n                    }\n                    else if (map.oldValue === nodeIndex) {\n                        map[\"delete\"] = true;\n                    }\n                    else if (map.oldValue < nodeIndex &&\n                        map.oldValue + map.length > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--;\n                        }\n                        else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            });\n                            map.length = nodeIndex - map.oldValue;\n                        }\n                    }\n                });\n            }\n            node = parentNode;\n            break;\n        case options._const.addTextElement: {\n            route = diff[options._const.route].slice();\n            var c_2 = route.splice(route.length - 1, 1)[0];\n            newNode = {\n                nodeName: \"#text\",\n                data: diff[options._const.value]\n            };\n            node = getFromVirtualRoute(tree, route).node;\n            if (!node.childNodes) {\n                node.childNodes = [];\n            }\n            if (c_2 >= node.childNodes.length) {\n                node.childNodes.push(newNode);\n            }\n            else {\n                node.childNodes.splice(c_2, 0, newNode);\n            }\n            if (node.nodeName === \"TEXTAREA\") {\n                node.value = diff[options._const.newValue];\n            }\n            if (node.subsets) {\n                node.subsets.forEach(function (map) {\n                    if (map.oldValue >= c_2) {\n                        map.oldValue += 1;\n                    }\n                    if (map.oldValue < c_2 && map.oldValue + map.length > c_2) {\n                        var splitLength = map.oldValue + map.length - c_2;\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c_2 + 1,\n                            length: splitLength\n                        });\n                        map.length -= splitLength;\n                    }\n                });\n            }\n            break;\n        }\n        default:\n            console.log(\"unknown action\");\n    }\n    if (node.subsets) {\n        node.subsets = node.subsets.filter(function (map) { return !map[\"delete\"] && map.oldValue !== map.newValue; });\n        if (newSubsets.length) {\n            node.subsets = node.subsets.concat(newSubsets);\n        }\n    }\n    options.postVirtualDiffApply({\n        node: info.node,\n        diff: info.diff,\n        newNode: newNode\n    });\n    return;\n}\nfunction applyVirtual(tree, diffs, options) {\n    diffs.forEach(function (diff) {\n        applyVirtualDiff(tree, diff, options);\n    });\n    return true;\n}\n\nfunction nodeToObj(aNode, options) {\n    if (options === void 0) { options = {\n        valueDiffing: true,\n        simplifiedElementCheck: true\n    }; }\n    var objNode = {\n        nodeName: aNode.nodeName\n    };\n    if (checkElementType(aNode, options.simplifiedElementCheck, \"Text\", \"Comment\")) {\n        objNode.data = aNode.data;\n    }\n    else {\n        if (aNode.attributes && aNode.attributes.length > 0) {\n            objNode.attributes = {};\n            var nodeArray = Array.prototype.slice.call(aNode.attributes);\n            nodeArray.forEach(function (attribute) {\n                return (objNode.attributes[attribute.name] = attribute.value);\n            });\n        }\n        if (aNode.childNodes && aNode.childNodes.length > 0) {\n            objNode.childNodes = [];\n            var nodeArray = Array.prototype.slice.call(aNode.childNodes);\n            nodeArray.forEach(function (childNode) {\n                return objNode.childNodes.push(nodeToObj(childNode, options));\n            });\n        }\n        if (options.valueDiffing) {\n            if (checkElementType(aNode, options.simplifiedElementCheck, \"HTMLTextAreaElement\")) {\n                objNode.value = aNode.value;\n            }\n            if (checkElementType(aNode, options.simplifiedElementCheck, \"HTMLInputElement\") &&\n                [\"radio\", \"checkbox\"].includes(aNode.type.toLowerCase()) &&\n                aNode.checked !== undefined) {\n                objNode.checked = aNode.checked;\n            }\n            else if (checkElementType(aNode, options.simplifiedElementCheck, \"HTMLButtonElement\", \"HTMLDataElement\", \"HTMLInputElement\", \"HTMLLIElement\", \"HTMLMeterElement\", \"HTMLOptionElement\", \"HTMLProgressElement\", \"HTMLParamElement\")) {\n                objNode.value = aNode.value;\n            }\n            if (checkElementType(aNode, options.simplifiedElementCheck, \"HTMLOptionElement\")) {\n                objNode.selected = aNode.selected;\n            }\n        }\n    }\n    return objNode;\n}\n\n// from html-parse-stringify (MIT)\nvar tagRE = /<\\s*\\/*[a-zA-Z:_][a-zA-Z0-9:_\\-.]*\\s*(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\"/>])*\\/*\\s*>|<!--(?:.|\\n|\\r)*?-->/g;\nvar attrRE = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\"[^\"]*\"|'[^']*')/g;\nfunction unescape(string) {\n    return string\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&amp;/g, \"&\");\n}\n// create optimized lookup object for\n// void elements as listed here:\n// https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\nvar lookup = {\n    area: true,\n    base: true,\n    br: true,\n    col: true,\n    embed: true,\n    hr: true,\n    img: true,\n    input: true,\n    keygen: true,\n    link: true,\n    menuItem: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n};\nvar parseTag = function (tag, caseSensitive) {\n    var res = {\n        nodeName: \"\",\n        attributes: {}\n    };\n    var voidElement = false;\n    var type = \"tag\";\n    var tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/);\n    if (tagMatch) {\n        res.nodeName =\n            caseSensitive || tagMatch[1] === \"svg\"\n                ? tagMatch[1]\n                : tagMatch[1].toUpperCase();\n        if (lookup[tagMatch[1]] || tag.charAt(tag.length - 2) === \"/\") {\n            voidElement = true;\n        }\n        // handle comment tag\n        if (res.nodeName.startsWith(\"!--\")) {\n            var endIndex = tag.indexOf(\"-->\");\n            return {\n                type: \"comment\",\n                node: {\n                    nodeName: \"#comment\",\n                    data: endIndex !== -1 ? tag.slice(4, endIndex) : \"\"\n                },\n                voidElement: voidElement\n            };\n        }\n    }\n    var reg = new RegExp(attrRE);\n    var result = null;\n    var done = false;\n    while (!done) {\n        result = reg.exec(tag);\n        if (result === null) {\n            done = true;\n        }\n        else if (result[0].trim()) {\n            if (result[1]) {\n                var attr = result[1].trim();\n                var arr = [attr, \"\"];\n                if (attr.indexOf(\"=\") > -1)\n                    { arr = attr.split(\"=\"); }\n                res.attributes[arr[0]] = arr[1];\n                reg.lastIndex--;\n            }\n            else if (result[2])\n                { res.attributes[result[2]] = result[3]\n                    .trim()\n                    .substring(1, result[3].length - 1); }\n        }\n    }\n    return {\n        type: type,\n        node: res,\n        voidElement: voidElement\n    };\n};\nvar stringToObj = function (html, options) {\n    if (options === void 0) { options = {\n        valueDiffing: true,\n        caseSensitive: false\n    }; }\n    var result = [];\n    var current;\n    var level = -1;\n    var arr = [];\n    var inComponent = false, insideSvg = false;\n    // handle text at top level\n    if (html.indexOf(\"<\") !== 0) {\n        var end = html.indexOf(\"<\");\n        result.push({\n            nodeName: \"#text\",\n            data: end === -1 ? html : html.substring(0, end)\n        });\n    }\n    html.replace(tagRE, function (tag, index) {\n        var isOpen = tag.charAt(1) !== \"/\";\n        var isComment = tag.startsWith(\"<!--\");\n        var start = index + tag.length;\n        var nextChar = html.charAt(start);\n        if (isComment) {\n            var comment = parseTag(tag, options.caseSensitive).node;\n            // if we're at root, push new base node\n            if (level < 0) {\n                result.push(comment);\n                return \"\";\n            }\n            var parent_1 = arr[level];\n            if (parent_1 && comment.nodeName) {\n                if (!parent_1.node.childNodes) {\n                    parent_1.node.childNodes = [];\n                }\n                parent_1.node.childNodes.push(comment);\n            }\n            return \"\";\n        }\n        if (isOpen) {\n            current = parseTag(tag, options.caseSensitive || insideSvg);\n            if (current.node.nodeName === \"svg\") {\n                insideSvg = true;\n            }\n            level++;\n            if (!current.voidElement &&\n                !inComponent &&\n                nextChar &&\n                nextChar !== \"<\") {\n                if (!current.node.childNodes) {\n                    current.node.childNodes = [];\n                }\n                var data = unescape(html.slice(start, html.indexOf(\"<\", start)));\n                current.node.childNodes.push({\n                    nodeName: \"#text\",\n                    data: data\n                });\n                if (options.valueDiffing &&\n                    current.node.nodeName === \"TEXTAREA\") {\n                    current.node.value = data;\n                }\n            }\n            // if we're at root, push new base node\n            if (level === 0 && current.node.nodeName) {\n                result.push(current.node);\n            }\n            var parent_2 = arr[level - 1];\n            if (parent_2 && current.node.nodeName) {\n                if (!parent_2.node.childNodes) {\n                    parent_2.node.childNodes = [];\n                }\n                parent_2.node.childNodes.push(current.node);\n            }\n            arr[level] = current;\n        }\n        if (!isOpen || current.voidElement) {\n            if (level > -1 &&\n                (current.voidElement ||\n                    (options.caseSensitive &&\n                        current.node.nodeName === tag.slice(2, -1)) ||\n                    (!options.caseSensitive &&\n                        current.node.nodeName.toUpperCase() ===\n                            tag.slice(2, -1).toUpperCase()))) {\n                level--;\n                // move current up a level to match the end tag\n                if (level > -1) {\n                    if (current.node.nodeName === \"svg\") {\n                        insideSvg = false;\n                    }\n                    current = arr[level];\n                }\n            }\n            if (nextChar !== \"<\" && nextChar) {\n                // trailing text node\n                // if we're at the root, push a base text node. otherwise add as\n                // a child to the current node.\n                var childNodes = level === -1 ? result : arr[level].node.childNodes || [];\n                // calculate correct end of the data slice in case there's\n                // no tag after the text node.\n                var end = html.indexOf(\"<\", start);\n                var data = unescape(html.slice(start, end === -1 ? undefined : end));\n                childNodes.push({\n                    nodeName: \"#text\",\n                    data: data\n                });\n            }\n        }\n        return \"\";\n    });\n    return result[0];\n};\n\n// ===== Create a diff =====\nvar DiffFinder = /** @class */ (function () {\n    function DiffFinder(t1Node, t2Node, options) {\n        this.options = options;\n        this.t1 = (typeof Element !== \"undefined\" &&\n            checkElementType(t1Node, this.options.simplifiedElementCheck, \"Element\")\n            ? nodeToObj(t1Node, this.options)\n            : typeof t1Node === \"string\"\n                ? stringToObj(t1Node, this.options)\n                : JSON.parse(JSON.stringify(t1Node)));\n        this.t2 = (typeof Element !== \"undefined\" &&\n            checkElementType(t2Node, this.options.simplifiedElementCheck, \"Element\")\n            ? nodeToObj(t2Node, this.options)\n            : typeof t2Node === \"string\"\n                ? stringToObj(t2Node, this.options)\n                : JSON.parse(JSON.stringify(t2Node)));\n        this.diffcount = 0;\n        this.foundAll = false;\n        if (this.debug) {\n            this.t1Orig =\n                typeof Element !== \"undefined\" &&\n                    checkElementType(t1Node, this.options.simplifiedElementCheck, \"Element\")\n                    ? nodeToObj(t1Node, this.options)\n                    : typeof t1Node === \"string\"\n                        ? stringToObj(t1Node, this.options)\n                        : JSON.parse(JSON.stringify(t1Node));\n            this.t2Orig =\n                typeof Element !== \"undefined\" &&\n                    checkElementType(t2Node, this.options.simplifiedElementCheck, \"Element\")\n                    ? nodeToObj(t2Node, this.options)\n                    : typeof t2Node === \"string\"\n                        ? stringToObj(t2Node, this.options)\n                        : JSON.parse(JSON.stringify(t2Node));\n        }\n        this.tracker = new DiffTracker();\n    }\n    DiffFinder.prototype.init = function () {\n        return this.findDiffs(this.t1, this.t2);\n    };\n    DiffFinder.prototype.findDiffs = function (t1, t2) {\n        var diffs;\n        do {\n            if (this.options.debug) {\n                this.diffcount += 1;\n                if (this.diffcount > this.options.diffcap) {\n                    throw new Error(\"surpassed diffcap:\".concat(JSON.stringify(this.t1Orig), \" -> \").concat(JSON.stringify(this.t2Orig)));\n                }\n            }\n            diffs = this.findNextDiff(t1, t2, []);\n            if (diffs.length === 0) {\n                // Last check if the elements really are the same now.\n                // If not, remove all info about being done and start over.\n                // Sometimes a node can be marked as done, but the creation of subsequent diffs means that it has to be changed again.\n                if (!isEqual(t1, t2)) {\n                    if (this.foundAll) {\n                        console.error(\"Could not find remaining diffs!\");\n                    }\n                    else {\n                        this.foundAll = true;\n                        removeDone(t1);\n                        diffs = this.findNextDiff(t1, t2, []);\n                    }\n                }\n            }\n            if (diffs.length > 0) {\n                this.foundAll = false;\n                this.tracker.add(diffs);\n                applyVirtual(t1, diffs, this.options);\n            }\n        } while (diffs.length > 0);\n        return this.tracker.list;\n    };\n    DiffFinder.prototype.findNextDiff = function (t1, t2, route) {\n        var diffs;\n        var fdiffs;\n        if (this.options.maxDepth && route.length > this.options.maxDepth) {\n            return [];\n        }\n        // outer differences?\n        if (!t1.outerDone) {\n            diffs = this.findOuterDiff(t1, t2, route);\n            if (this.options.filterOuterDiff) {\n                fdiffs = this.options.filterOuterDiff(t1, t2, diffs);\n                if (fdiffs)\n                    { diffs = fdiffs; }\n            }\n            if (diffs.length > 0) {\n                t1.outerDone = true;\n                return diffs;\n            }\n            else {\n                t1.outerDone = true;\n            }\n        }\n        if (Object.prototype.hasOwnProperty.call(t1, \"data\")) {\n            // Comment or Text\n            return [];\n        }\n        t1 = t1;\n        t2 = t2;\n        // inner differences?\n        if (!t1.innerDone) {\n            diffs = this.findInnerDiff(t1, t2, route);\n            if (diffs.length > 0) {\n                return diffs;\n            }\n            else {\n                t1.innerDone = true;\n            }\n        }\n        if (this.options.valueDiffing && !t1.valueDone) {\n            // value differences?\n            diffs = this.findValueDiff(t1, t2, route);\n            if (diffs.length > 0) {\n                t1.valueDone = true;\n                return diffs;\n            }\n            else {\n                t1.valueDone = true;\n            }\n        }\n        // no differences\n        return [];\n    };\n    DiffFinder.prototype.findOuterDiff = function (t1, t2, route) {\n        var diffs = [];\n        var attr;\n        var attr1;\n        var attr2;\n        var attrLength;\n        var pos;\n        var i;\n        if (t1.nodeName !== t2.nodeName) {\n            if (!route.length) {\n                throw new Error(\"Top level nodes have to be of the same kind.\");\n            }\n            return [\n                new Diff()\n                    .setValue(this.options._const.action, this.options._const.replaceElement)\n                    .setValue(this.options._const.oldValue, cleanNode(t1))\n                    .setValue(this.options._const.newValue, cleanNode(t2))\n                    .setValue(this.options._const.route, route) ];\n        }\n        if (route.length &&\n            this.options.diffcap <\n                Math.abs((t1.childNodes || []).length - (t2.childNodes || []).length)) {\n            return [\n                new Diff()\n                    .setValue(this.options._const.action, this.options._const.replaceElement)\n                    .setValue(this.options._const.oldValue, cleanNode(t1))\n                    .setValue(this.options._const.newValue, cleanNode(t2))\n                    .setValue(this.options._const.route, route) ];\n        }\n        if (Object.prototype.hasOwnProperty.call(t1, \"data\") &&\n            t1.data !== t2.data) {\n            // Comment or text node.\n            if (t1.nodeName === \"#text\") {\n                return [\n                    new Diff()\n                        .setValue(this.options._const.action, this.options._const.modifyTextElement)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.oldValue, t1.data)\n                        .setValue(this.options._const.newValue, t2.data) ];\n            }\n            else {\n                return [\n                    new Diff()\n                        .setValue(this.options._const.action, this.options._const.modifyComment)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.oldValue, t1.data)\n                        .setValue(this.options._const.newValue, t2.data) ];\n            }\n        }\n        t1 = t1;\n        t2 = t2;\n        attr1 = t1.attributes ? Object.keys(t1.attributes).sort() : [];\n        attr2 = t2.attributes ? Object.keys(t2.attributes).sort() : [];\n        attrLength = attr1.length;\n        for (i = 0; i < attrLength; i++) {\n            attr = attr1[i];\n            pos = attr2.indexOf(attr);\n            if (pos === -1) {\n                diffs.push(new Diff()\n                    .setValue(this.options._const.action, this.options._const.removeAttribute)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.name, attr)\n                    .setValue(this.options._const.value, t1.attributes[attr]));\n            }\n            else {\n                attr2.splice(pos, 1);\n                if (t1.attributes[attr] !== t2.attributes[attr]) {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.modifyAttribute)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.name, attr)\n                        .setValue(this.options._const.oldValue, t1.attributes[attr])\n                        .setValue(this.options._const.newValue, t2.attributes[attr]));\n                }\n            }\n        }\n        attrLength = attr2.length;\n        for (i = 0; i < attrLength; i++) {\n            attr = attr2[i];\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.addAttribute)\n                .setValue(this.options._const.route, route)\n                .setValue(this.options._const.name, attr)\n                .setValue(this.options._const.value, t2.attributes[attr]));\n        }\n        return diffs;\n    };\n    DiffFinder.prototype.findInnerDiff = function (t1, t2, route) {\n        var t1ChildNodes = t1.childNodes ? t1.childNodes.slice() : [];\n        var t2ChildNodes = t2.childNodes ? t2.childNodes.slice() : [];\n        var last = Math.max(t1ChildNodes.length, t2ChildNodes.length);\n        var childNodesLengthDifference = Math.abs(t1ChildNodes.length - t2ChildNodes.length);\n        var diffs = [];\n        var index = 0;\n        if (!this.options.maxChildCount || last < this.options.maxChildCount) {\n            var cachedSubtrees = Boolean(t1.subsets && t1.subsetsAge--);\n            var subtrees = cachedSubtrees\n                ? t1.subsets\n                : t1.childNodes && t2.childNodes\n                    ? markSubTrees(t1, t2)\n                    : [];\n            if (subtrees.length > 0) {\n                /* One or more groups have been identified among the childnodes of t1\n                 * and t2.\n                 */\n                diffs = this.attemptGroupRelocation(t1, t2, subtrees, route, cachedSubtrees);\n                if (diffs.length > 0) {\n                    return diffs;\n                }\n            }\n        }\n        /* 0 or 1 groups of similar child nodes have been found\n         * for t1 and t2. 1 If there is 1, it could be a sign that the\n         * contents are the same. When the number of groups is below 2,\n         * t1 and t2 are made to have the same length and each of the\n         * pairs of child nodes are diffed.\n         */\n        for (var i = 0; i < last; i += 1) {\n            var e1 = t1ChildNodes[i];\n            var e2 = t2ChildNodes[i];\n            if (childNodesLengthDifference) {\n                /* t1 and t2 have different amounts of childNodes. Add\n                 * and remove as necessary to obtain the same length */\n                if (e1 && !e2) {\n                    if (e1.nodeName === \"#text\") {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e1.data));\n                        index -= 1;\n                    }\n                    else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, cleanNode(e1)));\n                        index -= 1;\n                    }\n                }\n                else if (e2 && !e1) {\n                    if (e2.nodeName === \"#text\") {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.addTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e2.data));\n                    }\n                    else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.addElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, cleanNode(e2)));\n                    }\n                }\n            }\n            /* We are now guaranteed that childNodes e1 and e2 exist,\n             * and that they can be diffed.\n             */\n            /* Diffs in child nodes should not affect the parent node,\n             * so we let these diffs be submitted together with other\n             * diffs.\n             */\n            if (e1 && e2) {\n                if (!this.options.maxChildCount ||\n                    last < this.options.maxChildCount) {\n                    diffs = diffs.concat(this.findNextDiff(e1, e2, route.concat(index)));\n                }\n                else if (!isEqual(e1, e2)) {\n                    if (t1ChildNodes.length > t2ChildNodes.length) {\n                        if (e1.nodeName === \"#text\") {\n                            diffs.push(new Diff()\n                                .setValue(this.options._const.action, this.options._const.removeTextElement)\n                                .setValue(this.options._const.route, route.concat(index))\n                                .setValue(this.options._const.value, e1.data));\n                        }\n                        else {\n                            diffs.push(new Diff()\n                                .setValue(this.options._const.action, this.options._const.removeElement)\n                                .setValue(this.options._const.element, cleanNode(e1))\n                                .setValue(this.options._const.route, route.concat(index)));\n                        }\n                        t1ChildNodes.splice(i, 1);\n                        i -= 1;\n                        index -= 1;\n                        childNodesLengthDifference -= 1;\n                    }\n                    else if (t1ChildNodes.length < t2ChildNodes.length) {\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.addElement)\n                                .setValue(this.options._const.element, cleanNode(e2))\n                                .setValue(this.options._const.route, route.concat(index)) ]);\n                        t1ChildNodes.splice(i, 0, cleanNode(e2));\n                        childNodesLengthDifference -= 1;\n                    }\n                    else {\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.replaceElement)\n                                .setValue(this.options._const.oldValue, cleanNode(e1))\n                                .setValue(this.options._const.newValue, cleanNode(e2))\n                                .setValue(this.options._const.route, route.concat(index)) ]);\n                    }\n                }\n            }\n            index += 1;\n        }\n        t1.innerDone = true;\n        return diffs;\n    };\n    DiffFinder.prototype.attemptGroupRelocation = function (t1, t2, subtrees, route, cachedSubtrees) {\n        /* Either t1.childNodes and t2.childNodes have the same length, or\n         * there are at least two groups of similar elements can be found.\n         * attempts are made at equalizing t1 with t2. First all initial\n         * elements with no group affiliation (gaps=true) are removed (if\n         * only in t1) or added (if only in t2). Then the creation of a group\n         * relocation diff is attempted.\n         */\n        var gapInformation = getGapInformation(t1, t2, subtrees);\n        var gaps1 = gapInformation.gaps1;\n        var gaps2 = gapInformation.gaps2;\n        var t1ChildNodes = t1.childNodes.slice();\n        var t2ChildNodes = t2.childNodes.slice();\n        var shortest = Math.min(gaps1.length, gaps2.length);\n        var destinationDifferent;\n        var toGroup;\n        var group;\n        var node;\n        var similarNode;\n        var diffs = [];\n        for (var index2 = 0, index1 = 0; index2 < shortest; index1 += 1, index2 += 1) {\n            if (cachedSubtrees &&\n                (gaps1[index2] === true || gaps2[index2] === true)) ;\n            else if (gaps1[index1] === true) {\n                node = t1ChildNodes[index1];\n                if (node.nodeName === \"#text\") {\n                    if (t2ChildNodes[index2].nodeName === \"#text\") {\n                        if (node.data !==\n                            t2ChildNodes[index2].data) {\n                            // Check whether a text node with the same value follows later on.\n                            var testI = index1;\n                            while (t1ChildNodes.length > testI + 1 &&\n                                t1ChildNodes[testI + 1].nodeName === \"#text\") {\n                                testI += 1;\n                                if (t2ChildNodes[index2]\n                                    .data ===\n                                    t1ChildNodes[testI]\n                                        .data) {\n                                    similarNode = true;\n                                    break;\n                                }\n                            }\n                            if (!similarNode) {\n                                diffs.push(new Diff()\n                                    .setValue(this.options._const.action, this.options._const\n                                    .modifyTextElement)\n                                    .setValue(this.options._const.route, route.concat(index1))\n                                    .setValue(this.options._const.oldValue, node.data)\n                                    .setValue(this.options._const.newValue, t2ChildNodes[index2].data));\n                            }\n                        }\n                    }\n                    else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeTextElement)\n                            .setValue(this.options._const.route, route.concat(index1))\n                            .setValue(this.options._const.value, node.data));\n                        gaps1.splice(index1, 1);\n                        t1ChildNodes.splice(index1, 1);\n                        shortest = Math.min(gaps1.length, gaps2.length);\n                        index1 -= 1;\n                        index2 -= 1;\n                    }\n                }\n                else if (gaps2[index2] === true) {\n                    // both gaps1[index1] and gaps2[index2]  are true.\n                    // We replace one element with another.\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.replaceElement)\n                        .setValue(this.options._const.oldValue, cleanNode(node))\n                        .setValue(this.options._const.newValue, cleanNode(t2ChildNodes[index2]))\n                        .setValue(this.options._const.route, route.concat(index1)));\n                    // t1ChildNodes at position index1 is not up-to-date, but that does not matter as\n                    // index1 will increase +1\n                }\n                else {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.removeElement)\n                        .setValue(this.options._const.route, route.concat(index1))\n                        .setValue(this.options._const.element, cleanNode(node)));\n                    gaps1.splice(index1, 1);\n                    t1ChildNodes.splice(index1, 1);\n                    shortest = Math.min(gaps1.length, gaps2.length);\n                    index1 -= 1;\n                    index2 -= 1;\n                }\n            }\n            else if (gaps2[index2] === true) {\n                node = t2ChildNodes[index2];\n                if (node.nodeName === \"#text\") {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.addTextElement)\n                        .setValue(this.options._const.route, route.concat(index1))\n                        .setValue(this.options._const.value, node.data));\n                    gaps1.splice(index1, 0, true);\n                    t1ChildNodes.splice(index1, 0, {\n                        nodeName: \"#text\",\n                        data: node.data\n                    });\n                    shortest = Math.min(gaps1.length, gaps2.length);\n                    //index1 += 1\n                }\n                else {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.addElement)\n                        .setValue(this.options._const.route, route.concat(index1))\n                        .setValue(this.options._const.element, cleanNode(node)));\n                    gaps1.splice(index1, 0, true);\n                    t1ChildNodes.splice(index1, 0, cleanNode(node));\n                    shortest = Math.min(gaps1.length, gaps2.length);\n                    //index1 += 1\n                }\n            }\n            else if (gaps1[index1] !== gaps2[index2]) {\n                if (diffs.length > 0) {\n                    return diffs;\n                }\n                // group relocation\n                group = subtrees[gaps1[index1]];\n                toGroup = Math.min(group.newValue, t1ChildNodes.length - group.length);\n                if (toGroup !== group.oldValue && toGroup > -1) {\n                    // Check whether destination nodes are different than originating ones.\n                    destinationDifferent = false;\n                    for (var j = 0; j < group.length; j += 1) {\n                        if (!roughlyEqual(t1ChildNodes[toGroup + j], t1ChildNodes[group.oldValue + j], {}, false, true)) {\n                            destinationDifferent = true;\n                        }\n                    }\n                    if (destinationDifferent) {\n                        return [\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.relocateGroup)\n                                .setValue(this.options._const.groupLength, group.length)\n                                .setValue(this.options._const.from, group.oldValue)\n                                .setValue(this.options._const.to, toGroup)\n                                .setValue(this.options._const.route, route) ];\n                    }\n                }\n            }\n        }\n        return diffs;\n    };\n    DiffFinder.prototype.findValueDiff = function (t1, t2, route) {\n        // Differences of value. Only useful if the value/selection/checked value\n        // differs from what is represented in the DOM. For example in the case\n        // of filled out forms, etc.\n        var diffs = [];\n        if (t1.selected !== t2.selected) {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifySelected)\n                .setValue(this.options._const.oldValue, t1.selected)\n                .setValue(this.options._const.newValue, t2.selected)\n                .setValue(this.options._const.route, route));\n        }\n        if ((t1.value || t2.value) &&\n            t1.value !== t2.value &&\n            t1.nodeName !== \"OPTION\") {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifyValue)\n                .setValue(this.options._const.oldValue, t1.value || \"\")\n                .setValue(this.options._const.newValue, t2.value || \"\")\n                .setValue(this.options._const.route, route));\n        }\n        if (t1.checked !== t2.checked) {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifyChecked)\n                .setValue(this.options._const.oldValue, t1.checked)\n                .setValue(this.options._const.newValue, t2.checked)\n                .setValue(this.options._const.route, route));\n        }\n        return diffs;\n    };\n    return DiffFinder;\n}());\n\nvar DEFAULT_OPTIONS = {\n    debug: false,\n    diffcap: 10,\n    maxDepth: false,\n    maxChildCount: 50,\n    valueDiffing: true,\n    simplifiedElementCheck: false,\n    // syntax: textDiff: function (node, currentValue, expectedValue, newValue)\n    textDiff: function (node, currentValue, expectedValue, newValue) {\n        node.data = newValue;\n        return;\n    },\n    // empty functions were benchmarked as running faster than both\n    // `f && f()` and `if (f) { f(); }`\n    preVirtualDiffApply: function () { },\n    postVirtualDiffApply: function () { },\n    preDiffApply: function () { },\n    postDiffApply: function () { },\n    filterOuterDiff: null,\n    compress: false,\n    _const: false,\n    document: typeof window !== \"undefined\" && window.document\n        ? window.document\n        : false,\n    components: []\n};\nvar DiffDOM = /** @class */ (function () {\n    function DiffDOM(options) {\n        if (options === void 0) { options = {}; }\n        // IE11 doesn't have Object.assign and buble doesn't translate object spreaders\n        // by default, so this is the safest way of doing it currently.\n        Object.entries(DEFAULT_OPTIONS).forEach(function (_a) {\n            var key = _a[0], value = _a[1];\n            if (!Object.prototype.hasOwnProperty.call(options, key)) {\n                options[key] = value;\n            }\n        });\n        if (!options._const) {\n            var varNames = [\n                \"addAttribute\",\n                \"modifyAttribute\",\n                \"removeAttribute\",\n                \"modifyTextElement\",\n                \"relocateGroup\",\n                \"removeElement\",\n                \"addElement\",\n                \"removeTextElement\",\n                \"addTextElement\",\n                \"replaceElement\",\n                \"modifyValue\",\n                \"modifyChecked\",\n                \"modifySelected\",\n                \"modifyComment\",\n                \"action\",\n                \"route\",\n                \"oldValue\",\n                \"newValue\",\n                \"element\",\n                \"group\",\n                \"groupLength\",\n                \"from\",\n                \"to\",\n                \"name\",\n                \"value\",\n                \"data\",\n                \"attributes\",\n                \"nodeName\",\n                \"childNodes\",\n                \"checked\",\n                \"selected\" ];\n            var constNames_1 = {};\n            if (options.compress) {\n                varNames.forEach(function (varName, index) { return (constNames_1[varName] = index); });\n            }\n            else {\n                varNames.forEach(function (varName) { return (constNames_1[varName] = varName); });\n            }\n            options._const = constNames_1;\n        }\n        this.options = options;\n    }\n    DiffDOM.prototype.apply = function (tree, diffs) {\n        return applyDOM(tree, diffs, this.options);\n    };\n    DiffDOM.prototype.undo = function (tree, diffs) {\n        return undoDOM(tree, diffs, this.options);\n    };\n    DiffDOM.prototype.diff = function (t1Node, t2Node) {\n        var finder = new DiffFinder(t1Node, t2Node, this.options);\n        return finder.init();\n    };\n    return DiffDOM;\n}());\n\n/**\n * Use TraceLogger to figure out function calls inside\n * JS objects by wrapping an object with a TraceLogger\n * instance.\n *\n * Pretty-prints the call trace (using unicode box code)\n * when tracelogger.toString() is called.\n */\n/**\n * Wrap an object by calling new TraceLogger(obj)\n *\n * If you're familiar with Python decorators, this\n * does roughly the same thing, adding pre/post\n * call hook logging calls so that you can see\n * what's going on.\n */\nvar TraceLogger = /** @class */ (function () {\n    function TraceLogger(obj) {\n        if (obj === void 0) { obj = {}; }\n        var _this = this;\n        this.pad = \"│   \";\n        this.padding = \"\";\n        this.tick = 1;\n        this.messages = [];\n        var wrapkey = function (obj, key) {\n            // trace this function\n            var oldfn = obj[key];\n            obj[key] = function () {\n                var arguments$1 = arguments;\n\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments$1[_i];\n                }\n                _this.fin(key, Array.prototype.slice.call(args));\n                var result = oldfn.apply(obj, args);\n                _this.fout(key, result);\n                return result;\n            };\n        };\n        // can't use Object.keys for prototype walking\n        for (var key in obj) {\n            if (typeof obj[key] === \"function\") {\n                wrapkey(obj, key);\n            }\n        }\n        this.log(\"┌ TRACELOG START\");\n    }\n    // called when entering a function\n    TraceLogger.prototype.fin = function (fn, args) {\n        this.padding += this.pad;\n        this.log(\"\\u251C\\u2500> entering \".concat(fn), args);\n    };\n    // called when exiting a function\n    TraceLogger.prototype.fout = function (fn, result) {\n        this.log(\"│<──┘ generated return value\", result);\n        this.padding = this.padding.substring(0, this.padding.length - this.pad.length);\n    };\n    // log message formatting\n    TraceLogger.prototype.format = function (s, tick) {\n        var nf = function (t) {\n            var tStr = \"\".concat(t);\n            while (tStr.length < 4) {\n                tStr = \"0\".concat(t);\n            }\n            return tStr;\n        };\n        return \"\".concat(nf(tick), \"> \").concat(this.padding).concat(s);\n    };\n    // log a trace message\n    TraceLogger.prototype.log = function () {\n        var arguments$1 = arguments;\n\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments$1[_i];\n        }\n        var stringCollapse = function (v) {\n            if (!v) {\n                return \"<falsey>\";\n            }\n            if (typeof v === \"string\") {\n                return v;\n            }\n            // Use simplified check for HTMLElement since this is outside the main diff process\n            if (checkElementType(v, true, \"HTMLElement\")) {\n                return v.outerHTML || \"<empty>\";\n            }\n            if (v instanceof Array) {\n                return \"[\".concat(v.map(stringCollapse).join(\",\"), \"]\");\n            }\n            return v.toString() || v.valueOf() || \"<unknown>\";\n        };\n        var s = args.map(stringCollapse).join(\", \");\n        this.messages.push(this.format(s, this.tick++));\n    };\n    // turn the log into a structured string with\n    // unicode box codes to make it a sensible trace.\n    TraceLogger.prototype.toString = function () {\n        var cap = \"×   \";\n        var terminator = \"└───\";\n        while (terminator.length <= this.padding.length + this.pad.length) {\n            terminator += cap;\n        }\n        var _ = this.padding;\n        this.padding = \"\";\n        terminator = this.format(terminator, this.tick);\n        this.padding = _;\n        return \"\".concat(this.messages.join(\"\\n\"), \"\\n\").concat(terminator);\n    };\n    return TraceLogger;\n}());\n\nexport { DiffDOM, TraceLogger, nodeToObj, stringToObj };\n//# sourceMappingURL=module.js.map\n","import {stringToObj} from \"diff-dom\"\n\nimport {cellType, columnsStateType, columnSettingsType, DataTableOptions, headerCellType, elementNodeType, textNodeType, renderOptions, rowType} from \"./types\"\nimport {cellToText, joinWithSpaces} from \"./helpers\"\n\n\nexport const headingsToVirtualHeaderRowDOM = (\n    headings,\n    columnSettings,\n    columnsState: columnsStateType,\n    {\n        classes,\n        format,\n        hiddenHeader,\n        sortable,\n        scrollY,\n        type\n    }: DataTableOptions,\n    {\n        noColumnWidths,\n        unhideHeader\n    }: renderOptions\n) => ({\n    nodeName: \"TR\",\n\n    childNodes: headings.map(\n        (heading: headerCellType, index: number) : elementNodeType | void => {\n            const column = columnSettings[index] || ({\n                type,\n                format,\n                sortable: true,\n                searchable: true\n            } as columnSettingsType)\n            if (column.hidden || heading.attributes?.[\"data-colspan-placeholder\"] === \"true\") {\n                return\n            }\n            const attributes : { [key: string]: string } = heading.attributes ? {...heading.attributes} : {}\n            if (column.sortable && sortable && (!scrollY.length || unhideHeader)) {\n                if (column.filter) {\n                    attributes[\"data-filterable\"] = \"true\"\n                } else {\n                    attributes[\"data-sortable\"] = \"true\"\n                }\n            }\n\n            if (column.headerClass) {\n                attributes.class = joinWithSpaces(attributes.class, column.headerClass)\n            }\n            if (columnsState.sort && columnsState.sort.column === index) {\n                const directionClass = columnsState.sort.dir === \"asc\" ? classes.ascending : classes.descending\n                attributes.class = joinWithSpaces(attributes.class, directionClass)\n                attributes[\"aria-sort\"] = columnsState.sort.dir === \"asc\" ? \"ascending\" : \"descending\"\n            } else if (columnsState.filters[index]) {\n                attributes.class = joinWithSpaces(attributes.class, classes.filterActive)\n            }\n\n            if (columnsState.widths[index] && !noColumnWidths) {\n                const style = `width: ${columnsState.widths[index]}%;`\n                attributes.style = joinWithSpaces(attributes.style, style)\n            }\n            if (scrollY.length && !unhideHeader) {\n                const style = \"padding-bottom: 0;padding-top: 0;border: 0;\"\n                attributes.style = joinWithSpaces(attributes.style, style)\n            }\n\n            const headerNodes : elementNodeType[] = heading.type === \"html\" ?\n                heading.data as elementNodeType[] :\n                [\n                    {\n                        nodeName: \"#text\",\n                        data: heading.text ?? String(heading.data)\n                    }\n                ] as textNodeType[]\n            return {\n                nodeName: \"TH\",\n                attributes,\n                childNodes:\n                    ((hiddenHeader || scrollY.length) && !unhideHeader) ?\n                        [\n                            {\n                                nodeName: \"#text\",\n                                data: \"\"\n                            }\n                        ] :\n                        !column.sortable || !sortable ?\n                            headerNodes :\n                            [\n                                {\n                                    nodeName: \"BUTTON\",\n                                    attributes: {\n                                        class: column.filter ? classes.filter : classes.sorter\n                                    },\n                                    childNodes: headerNodes\n                                }\n                            ]\n            }\n        }\n    ).filter((column: (elementNodeType | void)) => column)\n})\n\nexport const dataToVirtualDOM = (tableAttributes: { [key: string]: string}, headings: headerCellType[], rows: rowType[], columnSettings: columnSettingsType[], columnsState: columnsStateType, rowCursor: (number | false), {\n    classes,\n    hiddenHeader,\n    header,\n    footer,\n    format,\n    sortable,\n    scrollY,\n    type,\n    rowRender,\n    tabIndex\n}: DataTableOptions, {\n    noColumnWidths,\n    unhideHeader,\n    renderHeader\n}: renderOptions, footers: elementNodeType[], captions: elementNodeType[]) => {\n    const table: elementNodeType = {\n        nodeName: \"TABLE\",\n        attributes: {...tableAttributes},\n        childNodes: [\n            {\n                nodeName: \"TBODY\",\n                childNodes: rows.map(\n                    ({row, index}) => {\n                        const tr: elementNodeType = {\n                            nodeName: \"TR\",\n                            attributes: {\n                                ...row.attributes,\n                                ...{\n                                    \"data-index\": String(index)\n                                }\n                            },\n                            childNodes: row.cells.map(\n                                (cell: cellType, cIndex: number) => {\n                                    const column = columnSettings[cIndex] || ({\n                                        type,\n                                        format,\n                                        sortable: true,\n                                        searchable: true\n                                    } as columnSettingsType)\n                                    if (column.hidden || cell.attributes?.[\"data-colspan-placeholder\"] === \"true\") {\n                                        return\n                                    }\n\n                                    // Handle rowspan placeholders - don't render them as TD elements\n                                    if (cell.attributes?.[\"data-rowspan-placeholder\"] === \"true\") {\n                                        return\n                                    }\n                                    const td: elementNodeType = {\n                                        nodeName: \"TD\",\n                                        attributes: cell.attributes ? {...cell.attributes} : {},\n                                        childNodes: column.type === \"html\" ?\n                                            cell.data :\n                                            [\n                                                {\n                                                    nodeName: \"#text\",\n                                                    data: cellToText(cell)\n                                                }\n                                            ]\n                                    } as elementNodeType\n                                    if (!header && !footer && columnsState.widths[cIndex] && !noColumnWidths) {\n                                        td.attributes.style = joinWithSpaces(td.attributes.style, `width: ${columnsState.widths[cIndex]}%;`)\n                                    }\n                                    if (column.cellClass) {\n                                        td.attributes.class = joinWithSpaces(td.attributes.class, column.cellClass)\n                                    }\n                                    if (column.render) {\n                                        const renderedCell : (string | elementNodeType | void) = column.render(cell.data, td, index, cIndex)\n                                        if (renderedCell) {\n                                            if (typeof renderedCell === \"string\") {\n                                                // Convenience method to make it work similarly to what it did up to version 5.\n                                                const node = stringToObj(`<td>${renderedCell}</td>`)\n\n                                                if (node.childNodes.length !== 1 || ![\"#text\", \"#comment\"].includes(node.childNodes[0].nodeName)) {\n                                                    td.childNodes = node.childNodes\n                                                } else {\n                                                    (td.childNodes[0] as textNodeType).data = renderedCell\n                                                }\n\n                                            } else {\n                                                return renderedCell\n                                            }\n                                        }\n\n                                    }\n                                    return td\n                                }\n                            ).filter((column: (elementNodeType | void)) => column)\n                        }\n                        if (index === rowCursor) {\n                            tr.attributes.class = joinWithSpaces(tr.attributes.class, classes.cursor)\n                        }\n                        if (rowRender) {\n                            const renderedRow : (elementNodeType | void) = rowRender(row, tr, index)\n                            if (renderedRow) {\n                                if (typeof renderedRow === \"string\") {\n                                    // Convenience method to make it work similarly to what it did up to version 5.\n                                    const node = stringToObj(`<tr>${renderedRow}</tr>`)\n                                    if (node.childNodes && (node.childNodes.length !== 1 || ![\"#text\", \"#comment\"].includes(node.childNodes[0].nodeName))) {\n                                        tr.childNodes = node.childNodes\n                                    } else {\n                                        (tr.childNodes[0] as textNodeType).data = renderedRow\n                                    }\n\n                                } else {\n                                    return renderedRow\n                                }\n                            }\n                        }\n                        return tr\n                    }\n                )\n            } as elementNodeType\n        ]\n    }\n\n    table.attributes.class = joinWithSpaces(table.attributes.class, classes.table)\n\n    if (header || footer || renderHeader) {\n        const headerRow: elementNodeType = headingsToVirtualHeaderRowDOM(headings, columnSettings, columnsState, {classes,\n            hiddenHeader,\n            sortable,\n            scrollY}, {noColumnWidths,\n            unhideHeader})\n\n        if (header || renderHeader) {\n            const thead: elementNodeType = {\n                nodeName: \"THEAD\",\n                childNodes: [headerRow]\n            }\n            if ((scrollY.length || hiddenHeader) && !unhideHeader) {\n                thead.attributes = {\n                    style: \"height: 0px;\"\n                }\n            }\n            table.childNodes.unshift(thead)\n        }\n        if (footer) {\n            const footerRow = header ? structuredClone(headerRow) : headerRow\n            const tfoot: elementNodeType = {\n                nodeName: \"TFOOT\",\n                childNodes: [footerRow]\n            }\n            if ((scrollY.length || hiddenHeader) && !unhideHeader) {\n                tfoot.attributes = {style: \"height: 0px;\"}\n            }\n            table.childNodes.push(tfoot)\n        }\n    }\n\n    footers.forEach(foot => table.childNodes.push(foot))\n    captions.forEach(caption => table.childNodes.push(caption))\n\n    if (tabIndex !== false) {\n        table.attributes.tabindex = String(tabIndex)\n    }\n\n    return table\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_customParseFormat=t()}(this,(function(){\"use strict\";var e={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},t=/(\\[[^[]*\\])|([-_:/.,()\\s]+)|(A|a|Q|YYYY|YY?|ww?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\\d/,r=/\\d\\d/,i=/\\d\\d?/,o=/\\d*[^-_:/,()\\s\\d]+/,s={},a=function(e){return(e=+e)+(e>68?1900:2e3)};var f=function(e){return function(t){this[e]=+t}},h=[/[+-]\\d\\d:?(\\d\\d)?|Z/,function(e){(this.zone||(this.zone={})).offset=function(e){if(!e)return 0;if(\"Z\"===e)return 0;var t=e.match(/([+-]|\\d\\d)/g),n=60*t[1]+(+t[2]||0);return 0===n?0:\"+\"===t[0]?-n:n}(e)}],u=function(e){var t=s[e];return t&&(t.indexOf?t:t.s.concat(t.f))},d=function(e,t){var n,r=s.meridiem;if(r){for(var i=1;i<=24;i+=1)if(e.indexOf(r(i,0,t))>-1){n=i>12;break}}else n=e===(t?\"pm\":\"PM\");return n},c={A:[o,function(e){this.afternoon=d(e,!1)}],a:[o,function(e){this.afternoon=d(e,!0)}],Q:[n,function(e){this.month=3*(e-1)+1}],S:[n,function(e){this.milliseconds=100*+e}],SS:[r,function(e){this.milliseconds=10*+e}],SSS:[/\\d{3}/,function(e){this.milliseconds=+e}],s:[i,f(\"seconds\")],ss:[i,f(\"seconds\")],m:[i,f(\"minutes\")],mm:[i,f(\"minutes\")],H:[i,f(\"hours\")],h:[i,f(\"hours\")],HH:[i,f(\"hours\")],hh:[i,f(\"hours\")],D:[i,f(\"day\")],DD:[r,f(\"day\")],Do:[o,function(e){var t=s.ordinal,n=e.match(/\\d+/);if(this.day=n[0],t)for(var r=1;r<=31;r+=1)t(r).replace(/\\[|\\]/g,\"\")===e&&(this.day=r)}],w:[i,f(\"week\")],ww:[r,f(\"week\")],M:[i,f(\"month\")],MM:[r,f(\"month\")],MMM:[o,function(e){var t=u(\"months\"),n=(u(\"monthsShort\")||t.map((function(e){return e.slice(0,3)}))).indexOf(e)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[o,function(e){var t=u(\"months\").indexOf(e)+1;if(t<1)throw new Error;this.month=t%12||t}],Y:[/[+-]?\\d+/,f(\"year\")],YY:[r,function(e){this.year=a(e)}],YYYY:[/\\d{4}/,f(\"year\")],Z:h,ZZ:h};function l(n){var r,i;r=n,i=s&&s.formats;for(var o=(n=r.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var o=r&&r.toUpperCase();return n||i[r]||e[r]||i[o].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,n){return t||n.slice(1)}))}))).match(t),a=o.length,f=0;f<a;f+=1){var h=o[f],u=c[h],d=u&&u[0],l=u&&u[1];o[f]=l?{regex:d,parser:l}:h.replace(/^\\[|\\]$/g,\"\")}return function(e){for(var t={},n=0,r=0;n<a;n+=1){var i=o[n];if(\"string\"==typeof i)r+=i.length;else{var s=i.regex,f=i.parser,h=e.slice(r),u=s.exec(h)[0];f.call(t,u),e=e.replace(u,\"\")}}return function(e){var t=e.afternoon;if(void 0!==t){var n=e.hours;t?n<12&&(e.hours+=12):12===n&&(e.hours=0),delete e.afternoon}}(t),t}}return function(e,t,n){n.p.customParseFormat=!0,e&&e.parseTwoDigitYear&&(a=e.parseTwoDigitYear);var r=t.prototype,i=r.parse;r.parse=function(e){var t=e.date,r=e.utc,o=e.args;this.$u=r;var a=o[1];if(\"string\"==typeof a){var f=!0===o[2],h=!0===o[3],u=f||h,d=o[2];h&&(d=o[2]),s=this.$locale(),!f&&d&&(s=n.Ls[d]),this.$d=function(e,t,n,r){try{if([\"x\",\"X\"].indexOf(t)>-1)return new Date((\"X\"===t?1e3:1)*e);var i=l(t)(e),o=i.year,s=i.month,a=i.day,f=i.hours,h=i.minutes,u=i.seconds,d=i.milliseconds,c=i.zone,m=i.week,M=new Date,Y=a||(o||s?1:M.getDate()),p=o||M.getFullYear(),v=0;o&&!s||(v=s>0?s-1:M.getMonth());var D,w=f||0,g=h||0,y=u||0,L=d||0;return c?new Date(Date.UTC(p,v,Y,w,g,y,L+60*c.offset*1e3)):n?new Date(Date.UTC(p,v,Y,w,g,y,L)):(D=new Date(p,v,Y,w,g,y,L),m&&(D=r(D).week(m).toDate()),D)}catch(e){return new Date(\"\")}}(t,a,r,n),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),u&&t!=this.format(a)&&(this.$d=new Date(\"\")),s={}}else if(a instanceof Array)for(var c=a.length,m=1;m<=c;m+=1){o[1]=a[m-1];var M=n.apply(this,o);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}m===c&&(this.$d=new Date(\"\"))}else i.call(this,e)}}}));","import dayjs from \"dayjs\"\nimport customParseFormat from \"dayjs/plugin/customParseFormat\"\n\ndayjs.extend(customParseFormat)\n\n/**\n * Use dayjs to parse cell contents for sorting\n */\nexport const parseDate = (content: string, format: string) => {\n    let date: number | string\n\n    // Converting to YYYYMMDD ensures we can accurately sort the column numerically\n\n    if (format) {\n        switch (format) {\n        case \"ISO_8601\":\n            // ISO8601 is already lexiographically sorted, so we can just sort it as a string.\n            date = content\n            break\n        case \"RFC_2822\":\n            date = dayjs(content.slice(5), \"DD MMM YYYY HH:mm:ss ZZ\").unix()\n            break\n        case \"MYSQL\":\n            date = dayjs(content, \"YYYY-MM-DD hh:mm:ss\").unix()\n            break\n        case \"UNIX\":\n            date = dayjs(content).unix()\n            break\n        // User defined format using the data-format attribute or columns[n].format option\n        default:\n            date = dayjs(content, format, true).valueOf()\n            break\n        }\n    }\n    return date\n}\n","import {nodeToObj, stringToObj} from \"diff-dom\"\nimport {parseDate} from \"./date\"\nimport {namedNodeMapToObject, objToText} from \"./helpers\"\nimport {\n    cellDataType,\n    cellType,\n    columnSettingsType,\n    DataOption,\n    dataRowType,\n    headerCellType,\n    inputCellType,\n    inputHeaderCellType,\n    inputRowType,\n    nodeType\n} from \"./types\"\n\nexport const readDataCell = (cell: inputCellType, columnSettings : columnSettingsType) : cellType => {\n    let cellData : cellType\n    let inputData: cellDataType\n    let attributes: { [key: string]: string } | undefined\n\n    // Check if cell is already a cellType object with data property\n    if (cell?.constructor === Object && Object.prototype.hasOwnProperty.call(cell, \"data\") && !Object.keys(cell).find(key => !([\"text\", \"order\", \"data\", \"attributes\"].includes(key)))) {\n        const cellObj = cell as cellType\n        inputData = cellObj.data\n        attributes = cellObj.attributes\n        // If text and order are already set, return as-is\n        if (cellObj.text !== undefined && cellObj.order !== undefined) {\n            return cellObj\n        }\n        cellData = {\n            data: cellObj.data,\n            text: cellObj.text,\n            order: cellObj.order,\n            attributes: cellObj.attributes\n        }\n    } else {\n        inputData = cell\n        cellData = {\n            data: cell\n        }\n    }\n    // Only process if text/order are not already set\n    if (cellData.text === undefined || cellData.order === undefined) {\n        switch (columnSettings.type) {\n        case \"string\":\n            if (!(typeof inputData === \"string\")) {\n                cellData.text = cellData.text ?? String(cellData.data)\n                cellData.order = cellData.order ?? cellData.text\n            }\n            break\n        case \"date\":\n            if (columnSettings.format) {\n                cellData.order = cellData.order ?? parseDate(String(cellData.data), columnSettings.format)\n            }\n            break\n        case \"number\":\n            cellData.text = cellData.text ?? String(cellData.data as number)\n            cellData.data = parseFloat(cellData.data as string)\n            cellData.order = cellData.order ?? cellData.data\n            break\n        case \"html\": {\n            const node = Array.isArray(cellData.data) ?\n                {nodeName: \"TD\",\n                    childNodes: (cellData.data as nodeType[])} : // If it is an array, we assume it is an array of nodeType\n                stringToObj(`<td>${String(cellData.data)}</td>`)\n            cellData.data = node.childNodes || []\n            const text = objToText(node)\n            cellData.text = cellData.text ?? text\n            cellData.order = cellData.order ?? text\n            break\n        }\n        case \"boolean\":\n            if (typeof cellData.data === \"string\") {\n                cellData.data = cellData.data.toLowerCase().trim()\n            }\n            cellData.data = ![\"false\", false, null, undefined, 0].includes(cellData.data as (string | number | boolean | null | undefined))\n            cellData.order = cellData.order ?? (cellData.data ? 1 : 0)\n            cellData.text = cellData.text ?? String(cellData.data)\n            break\n        case \"other\":\n            cellData.text = cellData.text ?? \"\"\n            cellData.order = cellData.order ?? 0\n            break\n        default:\n            cellData.text = cellData.text ?? JSON.stringify(cellData.data)\n            break\n        }\n    }\n\n    // Preserve attributes if they were provided\n    if (attributes) {\n        cellData.attributes = attributes\n    }\n\n    return cellData\n}\n\nconst readDOMDataCell = (cell: HTMLElement, columnSettings : columnSettingsType) : cellType => {\n    let cellData : cellType\n    switch (columnSettings.type) {\n    case \"string\":\n        cellData = {\n            data: cell.innerText\n        }\n        break\n    case \"date\": {\n        const data = cell.innerText\n        cellData = {\n            data,\n            order: parseDate(data, columnSettings.format)\n        }\n        break\n    }\n    case \"number\": {\n        const data = parseFloat(cell.innerText)\n        cellData = {\n            data,\n            order: data,\n            text: cell.innerText\n        }\n        break\n    }\n    case \"boolean\": {\n        const data = ![\"false\", \"0\", \"null\", \"undefined\"].includes(cell.innerText.toLowerCase().trim())\n        cellData = {\n            data,\n            text: data ? \"1\" : \"0\",\n            order: data ? 1 : 0\n        }\n        break\n    }\n    default: { // \"html\", \"other\"\n        const node = nodeToObj(cell, {valueDiffing: false})\n        cellData = {\n            data: node.childNodes || [],\n            text: cell.innerText,\n            order: cell.innerText\n        }\n        break\n    }\n    }\n\n    // Save cell attributes to reference when rendering\n    cellData.attributes = namedNodeMapToObject(cell.attributes)\n\n    return cellData\n}\n\n\nexport const readHeaderCell = (cell: inputHeaderCellType) : headerCellType => {\n    if (\n        cell instanceof Object &&\n        cell.constructor === Object &&\n        cell.hasOwnProperty(\"data\")\n    ) {\n        // If it's already a headerCellType object, ensure text and type are set if data is a string\n        const headerCell = cell as headerCellType\n        if (typeof headerCell.data === \"string\") {\n            if (!headerCell.text) {\n                headerCell.text = headerCell.data\n            }\n            if (!headerCell.type) {\n                headerCell.type = \"string\"\n            }\n        }\n        return headerCell\n    }\n    const cellData : headerCellType = {\n        data: cell\n    }\n    if (typeof cell === \"string\") {\n        if (cell.length) {\n            const node = stringToObj(`<th>${cell}</th>`)\n            if (node.childNodes && (node.childNodes.length !== 1 || node.childNodes[0].nodeName !== \"#text\")) {\n                cellData.data = node.childNodes\n                cellData.type = \"html\"\n                const text = objToText(node)\n                cellData.text = text\n            }\n        }\n\n    } else if ([null, undefined].includes(cell)) {\n        cellData.text = \"\"\n    } else {\n        cellData.text = JSON.stringify(cell)\n    }\n    return cellData\n}\n\nexport const readDOMHeaderCell = (cell: HTMLElement) : headerCellType => {\n    const node = nodeToObj(cell, {valueDiffing: false})\n    let cellData: headerCellType\n    if (node.childNodes && (node.childNodes.length !== 1 || node.childNodes[0].nodeName !== \"#text\")) {\n        cellData = {\n            data: node.childNodes,\n            type: \"html\",\n            text: objToText(node)\n        }\n    } else {\n        cellData = {\n            data: cell.innerText,\n            type: \"string\"\n        }\n    }\n\n    // Save header cell attributes to reference when rendering\n    cellData.attributes = node.attributes\n\n    return cellData\n\n}\n\nexport const readTableData = (dataOption: DataOption, dom: (HTMLTableElement | undefined)=undefined, columnSettings, defaultType, defaultFormat) => {\n\n    const data = {\n        data: [] as dataRowType[],\n        headings: [] as headerCellType[]\n    }\n    if (dataOption.headings) {\n        // Process headings and handle colspan\n        const processedHeadings: headerCellType[] = []\n        dataOption.headings.forEach((heading: inputHeaderCellType) => {\n            const headerCell = readHeaderCell(heading)\n            const colspan = parseInt(headerCell.attributes?.colspan || \"1\", 10)\n\n            processedHeadings.push(headerCell)\n\n            // Add placeholder headings for colspan > 1\n            for (let i = 1; i < colspan; i++) {\n                processedHeadings.push({\n                    data: \"\",\n                    text: \"\",\n                    attributes: {\n                        \"data-colspan-placeholder\": \"true\"\n                    }\n                })\n            }\n        })\n        data.headings = processedHeadings\n    } else if (dom?.tHead) {\n        // Collect all headings accounting for colspan\n        const headings: headerCellType[] = []\n        Array.from(dom.tHead.querySelectorAll(\"th\")).forEach(th => {\n            const colspan = parseInt(th.getAttribute(\"colspan\") || \"1\", 10)\n\n            // Add the actual heading with colspan data\n            const heading = readDOMHeaderCell(th)\n            headings.push(heading)\n\n            // Add placeholder headings for colspan > 1\n            for (let i = 1; i < colspan; i++) {\n                headings.push({\n                    data: \"\",\n                    text: \"\",\n                    attributes: {\n                        \"data-colspan-placeholder\": \"true\"\n                    }\n                })\n            }\n        })\n\n        data.headings = headings\n\n        // Process column settings for all columns including colspan placeholders\n        let columnIndex = 0\n        Array.from(dom.tHead.querySelectorAll(\"th\")).forEach(th => {\n            const colspan = parseInt(th.getAttribute(\"colspan\") || \"1\", 10)\n\n            for (let i = 0; i < colspan; i++) {\n                if (!columnSettings[columnIndex]) {\n                    columnSettings[columnIndex] = {\n                        type: defaultType,\n                        format: defaultFormat,\n                        searchable: true,\n                        sortable: true\n                    }\n                }\n                const settings = columnSettings[columnIndex]\n\n                // Only apply settings from the actual th element to the first column of the colspan\n                if (i === 0) {\n                    if (th.dataset.sortable?.trim().toLowerCase() === \"false\" || th.dataset.sort?.trim().toLowerCase() === \"false\") {\n                        settings.sortable = false\n                    }\n                    if (th.dataset.searchable?.trim().toLowerCase() === \"false\") {\n                        settings.searchable = false\n                    }\n                    if (th.dataset.hidden?.trim().toLowerCase() === \"true\" || th.getAttribute(\"hidden\")?.trim().toLowerCase() === \"true\") {\n                        settings.hidden = true\n                    }\n                    if (th.dataset.type && [\"number\", \"string\", \"html\", \"date\", \"boolean\", \"other\"].includes(th.dataset.type)) {\n                        settings.type = th.dataset.type\n                        if (settings.type === \"date\" && th.dataset.format) {\n                            settings.format = th.dataset.format\n                        }\n                    }\n                }\n                columnIndex++\n            }\n        })\n    } else if (dataOption.data?.length) {\n        const firstRow = dataOption.data[0]\n        const firstRowCells = Array.isArray(firstRow) ? firstRow : firstRow.cells\n        data.headings = firstRowCells.map((_cell: inputCellType) => readHeaderCell(\"\"))\n    } else if (dom?.tBodies.length) {\n        data.headings = Array.from(dom.tBodies[0].rows[0].cells).map((_cell: HTMLElement) => readHeaderCell(\"\"))\n    }\n    for (let i=0; i<data.headings.length; i++) {\n        // Make sure that there are settings for all columns\n        if (!columnSettings[i]) {\n            columnSettings[i] = {\n                type: defaultType,\n                format: defaultFormat,\n                sortable: true,\n                searchable: true\n            }\n        }\n    }\n    if (dataOption.data) {\n        const headings = data.headings.map((heading: headerCellType) => heading.data ? String(heading.data) : heading.text)\n\n        // Track rowspan carryover: columnIndex -> {remainingRows, cellData}\n        const rowspanCarryover: Map<number, {remainingRows: number, cellData: cellType}> = new Map()\n\n        data.data = dataOption.data.map((row: inputRowType | inputCellType[], _rowIndex: number) => {\n            let attributes: { [key: string]: string }\n            let cells: inputCellType[]\n            if (Array.isArray(row)) {\n                attributes = {}\n                cells = row\n            } else if (row.hasOwnProperty(\"cells\") && Object.keys(row).every(key => [\"cells\", \"attributes\"].includes(key))) {\n                attributes = row.attributes\n                cells = row.cells\n            } else {\n                attributes = {}\n                cells = []\n                Object.entries(row).forEach(([heading, cell]) => {\n                    const index = headings.indexOf(heading)\n                    if (index > -1) {\n                        cells[index] = cell\n                    }\n                })\n            }\n\n            // Process cells and handle colspan and rowspan\n            const processedCells: cellType[] = []\n            let cellIndex = 0\n            let inputCellIndex = 0\n\n            while (cellIndex < data.headings.length) {\n                // Check if this column is occupied by a rowspan from a previous row\n                if (rowspanCarryover.has(cellIndex)) {\n                    const carryover = rowspanCarryover.get(cellIndex)\n                    // Add placeholder for rowspan\n                    processedCells.push({\n                        data: \"\",\n                        text: \"\",\n                        order: \"\",\n                        attributes: {\n                            \"data-rowspan-placeholder\": \"true\"\n                        }\n                    })\n\n                    // Decrement remaining rows\n                    carryover.remainingRows--\n                    if (carryover.remainingRows <= 0) {\n                        rowspanCarryover.delete(cellIndex)\n                    }\n\n                    cellIndex++\n                } else if (inputCellIndex < cells.length) {\n                    // Process the next input cell\n                    const cell = cells[inputCellIndex]\n                    const cellData = readDataCell(cell, columnSettings[cellIndex])\n                    const colspan = parseInt(cellData.attributes?.colspan || \"1\", 10)\n                    const rowspan = parseInt(cellData.attributes?.rowspan || \"1\", 10)\n\n                    processedCells.push(cellData)\n\n                    // Track rowspan for future rows\n                    if (rowspan > 1) {\n                        rowspanCarryover.set(cellIndex, {\n                            remainingRows: rowspan - 1,\n                            cellData\n                        })\n                    }\n\n                    cellIndex++\n                    inputCellIndex++\n\n                    // Add placeholder cells for colspan > 1\n                    for (let i = 1; i < colspan; i++) {\n                        processedCells.push({\n                            data: \"\",\n                            text: \"\",\n                            order: \"\",\n                            attributes: {\n                                \"data-colspan-placeholder\": \"true\"\n                            }\n                        })\n                        cellIndex++\n                    }\n                } else {\n                    // This shouldn't happen if data is well-formed, but handle it gracefully\n                    break\n                }\n            }\n\n            return {\n                attributes,\n                cells: processedCells\n            } as dataRowType\n        })\n    } else if (dom?.tBodies?.length) {\n        // Track rowspan carryover: columnIndex -> {remainingRows, cellData}\n        const rowspanCarryover: Map<number, {remainingRows: number, cellData: cellType}> = new Map()\n\n        data.data = Array.from(dom.tBodies[0].rows).map(\n            row => {\n                const cells: cellType[] = []\n                let cellIndex = 0\n                let domCellIndex = 0\n                const domCells = Array.from(row.cells)\n\n                while (cellIndex < data.headings.length) {\n                    // Check if this column is occupied by a rowspan from a previous row\n                    if (rowspanCarryover.has(cellIndex)) {\n                        const carryover = rowspanCarryover.get(cellIndex)\n                        // Add placeholder for rowspan\n                        cells.push({\n                            data: \"\",\n                            text: \"\",\n                            order: \"\",\n                            attributes: {\n                                \"data-rowspan-placeholder\": \"true\"\n                            }\n                        })\n\n                        // Decrement remaining rows\n                        carryover.remainingRows--\n                        if (carryover.remainingRows <= 0) {\n                            rowspanCarryover.delete(cellIndex)\n                        }\n\n                        cellIndex++\n                    } else if (domCellIndex < domCells.length) {\n                        // Process the next DOM cell\n                        const cell = domCells[domCellIndex]\n                        const colspan = parseInt(cell.getAttribute(\"colspan\") || \"1\", 10)\n                        const rowspan = parseInt(cell.getAttribute(\"rowspan\") || \"1\", 10)\n\n                        // Add the actual cell with colspan and rowspan data\n                        const cellData = cell.dataset.content ?\n                            readDataCell(cell.dataset.content, columnSettings[cellIndex]) :\n                            readDOMDataCell(cell, columnSettings[cellIndex])\n                        if (cell.dataset.order) {\n                            cellData.order = isNaN(parseFloat(cell.dataset.order)) ? cell.dataset.order : parseFloat(cell.dataset.order)\n                        }\n                        cells.push(cellData)\n\n                        // Track rowspan for future rows\n                        if (rowspan > 1) {\n                            rowspanCarryover.set(cellIndex, {\n                                remainingRows: rowspan - 1,\n                                cellData\n                            })\n                        }\n\n                        cellIndex++\n                        domCellIndex++\n\n                        // Add placeholder cells for colspan > 1\n                        for (let i = 1; i < colspan; i++) {\n                            cells.push({\n                                data: \"\",\n                                text: \"\",\n                                order: \"\",\n                                attributes: {\n                                    \"data-colspan-placeholder\": \"true\"\n                                }\n                            })\n                            cellIndex++\n                        }\n                    } else {\n                        // This shouldn't happen if DOM is well-formed, but handle it gracefully\n                        break\n                    }\n                }\n\n                return {\n                    attributes: namedNodeMapToObject(row.attributes),\n                    cells\n                } as dataRowType\n            }\n        )\n    }\n\n    if (data.data.length && data.data[0].cells.length !== data.headings.length) {\n        throw new Error(\n            \"Data heading length mismatch.\"\n        )\n    }\n    return data\n}\n","import {readDataCell} from \"./read_data\"\nimport {DataTable} from \"./datatable\"\nimport {cellType, dataRowType, inputCellType} from \"./types\"\nimport {cellToText, classNamesToSelector} from \"./helpers\"\n\n/**\n * Rows API\n */\nexport class Rows {\n    cursor: (false | number)\n\n    dt: DataTable\n\n    constructor(dt: DataTable) {\n        this.dt = dt\n\n        this.cursor = false\n    }\n\n    setCursor(index: (false | number) = false) {\n        if (index === this.cursor) {\n            return\n        }\n        const oldCursor = this.cursor\n        this.cursor = index\n        this.dt._renderTable()\n        if (index !== false && this.dt.options.scrollY) {\n            const cursorSelector = classNamesToSelector(this.dt.options.classes.cursor)\n            const cursorDOM = this.dt.dom.querySelector(`tr${cursorSelector}`)\n            if (cursorDOM) {\n                cursorDOM.scrollIntoView({block: \"nearest\"})\n            }\n        }\n        this.dt.emit(\"datatable.cursormove\", this.cursor, oldCursor)\n    }\n\n    /**\n     * Add new row\n     */\n    add(data: cellType[]) {\n        if (!Array.isArray(data) || data.length < 1) {\n            return\n        }\n\n        const row: dataRowType = {\n            cells: data.map((cell: cellType, index: number) => {\n                const columnSettings = this.dt.columns.settings[index]\n                return readDataCell(cell, columnSettings)\n            })\n        }\n        this.dt.data.data.push(row)\n        this.dt.hasRows = true\n        this.dt.update(true)\n    }\n\n    /**\n     * Remove row(s)\n     */\n    remove(select: number | number[]) {\n        if (Array.isArray(select)) {\n            this.dt.data.data = this.dt.data.data.filter((_row: dataRowType, index: number) => !select.includes(index))\n            // We may have emptied the table\n            if ( !this.dt.data.data.length ) {\n                this.dt.hasRows = false\n            }\n            this.dt.update(true)\n        } else {\n            return this.remove([select])\n        }\n    }\n\n\n    /**\n     * Find index of row by searching for a value in a column\n     */\n    findRowIndex(columnIndex: number, value: string | boolean | number) {\n        // returns row index of first case-insensitive string match\n        // inside the td innerText at specific column index\n        return this.dt.data.data.findIndex(\n            (row: dataRowType) => {\n                const cell = row.cells[columnIndex]\n                const cellText = cellToText(cell)\n                return cellText.toLowerCase().includes(String(value).toLowerCase())\n            }\n        )\n    }\n\n    /**\n     * Find index, row, and column data by searching for a value in a column\n     */\n    findRow(columnIndex: number, value: string | boolean | number) {\n        // get the row index\n        const index = this.findRowIndex(columnIndex, value)\n        // exit if not found\n        if (index < 0) {\n            return {\n                index: -1,\n                row: null,\n                cols: []\n            }\n        }\n        // get the row from data\n        const row = this.dt.data.data[index]\n        // return innerHTML of each td\n        const cols = row.cells.map((cell: cellType) => cell.data)\n        // return everything\n        return {\n            index,\n            row,\n            cols\n        }\n    }\n\n    /**\n     * Update a row with new data\n     */\n    updateRow(select: number, data: inputCellType[]) {\n        const row: dataRowType = {\n            cells: data.map((cell: inputCellType, index: number) => {\n                const columnSettings = this.dt.columns.settings[index]\n                return readDataCell(cell, columnSettings)\n            })\n        }\n        this.dt.data.data.splice(select, 1, row)\n        this.dt.update(true)\n    }\n}\n","import {readDataCell, readHeaderCell} from \"./read_data\"\nimport {DataTable} from \"./datatable\"\nimport {\n    cellType,\n    columnSettingsType,\n    columnsStateType,\n    dataRowType,\n    elementNodeType,\n    headerCellType,\n    inputCellType,\n    inputHeaderCellType\n} from \"./types\"\nimport {readColumnSettings} from \"./column_settings\"\nimport {cellToText} from \"./helpers\"\n\n\nexport class Columns {\n    dt: DataTable\n\n    settings: columnSettingsType[]\n\n    _state: columnsStateType\n\n    constructor(dt: DataTable) {\n        this.dt = dt\n        this.init()\n    }\n\n    init() {\n        [this.settings, this._state] = readColumnSettings(this.dt.options.columns, this.dt.options.type, this.dt.options.format)\n    }\n\n    get(column: number) {\n        if (column < 0 || column >= this.size()) {\n            return null\n        }\n        return {...this.settings[column]}\n    }\n\n    size() {\n        return this.settings.length\n    }\n\n    /**\n     * Swap two columns\n     */\n    swap(columns: [number, number]) {\n        if (columns.length === 2) {\n            // Get the current column indexes\n            const cols = this.dt.data.headings.map((_node: headerCellType, index: number) => index)\n\n            const x = columns[0]\n            const y = columns[1]\n            const b = cols[y]\n            cols[y] = cols[x]\n            cols[x] = b\n\n            return this.order(cols)\n        }\n    }\n\n    /**\n     * Reorder the columns\n     */\n    order(columns: number[]) {\n\n        this.dt.data.headings = columns.map((index: number) => this.dt.data.headings[index])\n        this.dt.data.data.forEach(\n            (row: dataRowType) => (row.cells = columns.map((index: number) => row.cells[index]))\n        )\n        this.settings = columns.map(\n            (index: number) => this.settings[index]\n        )\n\n        // Update\n        this.dt.update()\n    }\n\n    /**\n     * Hide columns\n     */\n    hide(columns: number | number[]) {\n        if (!Array.isArray(columns)) {\n            columns = [columns]\n        }\n        if (!columns.length) {\n            return\n        }\n        columns.forEach((index: number) => {\n            if (!this.settings[index]) {\n                this.settings[index] = {\n                    type: \"string\"\n                }\n            }\n            const column = this.settings[index]\n            column.hidden = true\n        })\n\n        this.dt.update()\n    }\n\n    /**\n     * Show columns\n     */\n    show(columns: number | number[]) {\n        if (!Array.isArray(columns)) {\n            columns = [columns]\n        }\n        if (!columns.length) {\n            return\n        }\n        columns.forEach((index: number) => {\n            if (!this.settings[index]) {\n                this.settings[index] = {\n                    type: \"string\",\n                    sortable: true\n                }\n            }\n            const column = this.settings[index]\n            delete column.hidden\n        })\n\n        this.dt.update()\n    }\n\n    /**\n     * Check column(s) visibility\n     */\n    visible(columns: number | number[] | undefined) {\n\n        if (columns === undefined) {\n            columns = [...Array(this.dt.data.headings.length).keys()]\n        }\n        if (Array.isArray(columns)) {\n            return columns.map(index => !this.settings[index]?.hidden)\n        }\n        return !this.settings[columns]?.hidden\n\n    }\n\n    /**\n     * Add a new column\n     */\n    add(data: {data: inputCellType[], heading: inputHeaderCellType} & columnSettingsType) {\n        const newColumnSelector = this.dt.data.headings.length\n        this.dt.data.headings = this.dt.data.headings.concat([readHeaderCell(data.heading)])\n        this.dt.data.data.forEach((row: dataRowType, index: number) => {\n            row.cells = row.cells.concat([readDataCell(data.data[index], data)])\n        })\n        this.settings[newColumnSelector] = {\n            type: data.type || \"string\",\n            sortable: true,\n            searchable: true\n        }\n        if (data.type || data.format || data.sortable || data.render || data.filter) {\n            const column = this.settings[newColumnSelector]\n\n            if (data.render) {\n                column.render = data.render\n            }\n\n            if (data.format) {\n                column.format = data.format\n            }\n\n            if (data.cellClass) {\n                column.cellClass = data.cellClass\n            }\n\n            if (data.headerClass) {\n                column.headerClass = data.headerClass\n            }\n\n            if (data.locale) {\n                column.locale = data.locale\n            }\n\n            if (data.sortable === false) {\n                column.sortable = false\n            } else {\n                if (data.numeric) {\n                    column.numeric = data.numeric\n                }\n                if (data.caseFirst) {\n                    column.caseFirst = data.caseFirst\n                }\n            }\n\n            if (data.searchable === false) {\n                column.searchable = false\n            } else {\n                if (data.sensitivity) {\n                    column.sensitivity = data.sensitivity\n                }\n            }\n\n            if (column.searchable || column.sortable) {\n                if (data.ignorePunctuation) {\n                    column.ignorePunctuation = data.ignorePunctuation\n                }\n            }\n\n            if (data.hidden) {\n                column.hidden = true\n            }\n\n            if (data.filter) {\n                column.filter = data.filter\n            }\n\n            if (data.sortSequence) {\n                column.sortSequence = data.sortSequence\n            }\n        }\n        this.dt.update(true)\n    }\n\n    /**\n     * Remove column(s)\n     */\n    remove(columns: number | number[]) {\n        if (!Array.isArray(columns)) {\n            columns = [columns]\n        }\n\n        this.dt.data.headings = this.dt.data.headings.filter((_heading: headerCellType, index: number) => !columns.includes(index))\n        this.dt.data.data.forEach(\n            (row: dataRowType) => (row.cells = row.cells.filter((_cell: cellType, index: number) => !columns.includes(index)))\n        )\n        this.dt.update(true)\n    }\n\n    /**\n     * Filter by column\n     */\n    filter(column: number, init = false) {\n\n        if (!this.settings[column]?.filter?.length) {\n            // There is no filter to apply.\n            return\n        }\n\n        const currentFilter = this._state.filters[column]\n        let newFilterState\n        if (currentFilter) {\n            let returnNext = false\n            newFilterState = this.settings[column].filter.find((filter: (string | number | boolean | elementNodeType[] | object | ((arg: (string | number | boolean | elementNodeType[] | object)) => boolean))) => {\n                if (returnNext) {\n                    return true\n                }\n                if (filter === currentFilter) {\n                    returnNext = true\n                }\n                return false\n            })\n        } else {\n            const filter = this.settings[column].filter\n            newFilterState = filter ? filter[0] : undefined\n        }\n\n        if (newFilterState) {\n            this._state.filters[column] = newFilterState\n        } else if (currentFilter) {\n            this._state.filters[column] = undefined\n        }\n        this.dt._currentPage = 1\n        this.dt.update()\n\n        if (!init) {\n            this.dt.emit(\"datatable.filter\", column, newFilterState)\n        }\n    }\n\n    /**\n     * Sort by column\n     */\n    sort(index: number, dir: (\"asc\" | \"desc\" | undefined) = undefined, init = false) {\n        const column = this.settings[index]\n\n        if (!init) {\n            this.dt.emit(\"datatable.sorting\", index, dir)\n        }\n\n        if (!dir) {\n            const currentDir = this._state.sort && this._state.sort.column === index ? this._state.sort?.dir : false\n            const sortSequence = column?.sortSequence || [\"asc\", \"desc\"]\n            if (!currentDir) {\n                dir = sortSequence.length ? sortSequence[0] : \"asc\"\n            } else {\n                const currentDirIndex = sortSequence.indexOf(currentDir)\n                if (currentDirIndex === -1) {\n                    dir = sortSequence[0] || \"asc\"\n                } else if (currentDirIndex === sortSequence.length -1) {\n                    dir = sortSequence[0]\n                } else {\n                    dir = sortSequence[currentDirIndex + 1]\n                }\n            }\n\n        }\n\n        const collator = column && [\"string\", \"html\"].includes(column.type) ?\n            new Intl.Collator(column.locale || this.dt.options.locale, {\n                usage: \"sort\",\n                numeric: column.numeric || this.dt.options.numeric,\n                caseFirst: column.caseFirst || this.dt.options.caseFirst,\n                ignorePunctuation: column.ignorePunctuation|| this.dt.options.ignorePunctuation\n            }) :\n            false\n\n        // Group rows that are connected by rowspan\n        // A row with any rowspan placeholder must stay with its parent row\n        const rowGroups: number[][] = []\n        const rowToGroup: Map<number, number> = new Map()\n\n        this.dt.data.data.forEach((row, rowIndex) => {\n            // Check if this row has any rowspan placeholders\n            const hasPlaceholder = row.cells.some(cell => cell.attributes?.[\"data-rowspan-placeholder\"] === \"true\")\n\n            if (hasPlaceholder) {\n                // This row belongs to the same group as the previous row\n                // Find the most recent row that's already in a group\n                for (let i = rowIndex - 1; i >= 0; i--) {\n                    if (rowToGroup.has(i)) {\n                        const groupIndex = rowToGroup.get(i)\n                        rowGroups[groupIndex].push(rowIndex)\n                        rowToGroup.set(rowIndex, groupIndex)\n                        return\n                    }\n                }\n                // If we didn't find a group, this shouldn't happen in valid data\n                // but create a new group anyway\n                const groupIndex = rowGroups.length\n                rowGroups.push([rowIndex])\n                rowToGroup.set(rowIndex, groupIndex)\n            } else {\n                // Check if any cell in this row has rowspan > 1\n                const hasRowspan = row.cells.some(cell => cell.attributes?.rowspan && parseInt(cell.attributes.rowspan, 10) > 1)\n\n                if (hasRowspan) {\n                    // Start a new group with this row as the parent\n                    const groupIndex = rowGroups.length\n                    rowGroups.push([rowIndex])\n                    rowToGroup.set(rowIndex, groupIndex)\n                } else {\n                    // This is an independent row, create a single-row group\n                    const groupIndex = rowGroups.length\n                    rowGroups.push([rowIndex])\n                    rowToGroup.set(rowIndex, groupIndex)\n                }\n            }\n        })\n\n\n        // Sort groups by their first (parent) row's value\n        rowGroups.sort((group1, group2) => {\n\n\n            // Helper function to get actual cell value for sorting, resolving rowspan placeholders\n            const getActualCellValue = (rowIndex: number, cellIndex: number) => {\n                const cell = this.dt.data.data[rowIndex].cells[cellIndex]\n\n                if (cell.attributes?.[\"data-rowspan-placeholder\"] === \"true\") {\n                    // Find the actual rowspan cell by looking backward\n                    for (let i = rowIndex - 1; i >= 0; i--) {\n                        const prevCell = this.dt.data.data[i].cells[cellIndex]\n                        if (prevCell.attributes?.[\"data-rowspan-placeholder\"] !== \"true\") {\n                            return prevCell.order ?? cellToText(prevCell)\n                        }\n                    }\n                    // Fallback if no rowspan cell found\n                    return \"\"\n                }\n\n                return cell.order ?? cellToText(cell)\n            }\n\n            let order1 = getActualCellValue(group1[0], index)\n            let order2 = getActualCellValue(group2[0], index)\n\n            if (dir === \"desc\") {\n                const temp = order1\n                order1 = order2\n                order2 = temp\n            }\n            if (collator && (typeof order1 !== \"number\") && (typeof order2 !== \"number\")) {\n                return collator.compare(String(order1), String(order2))\n            }\n            if (order1 < order2) {\n                return -1\n            } else if (order1 > order2) {\n                return 1\n            }\n            return 0\n        })\n\n        // Rebuild the data array in the new sorted order\n        const sortedData: dataRowType[] = []\n        rowGroups.forEach(group => {\n            group.forEach(rowIndex => {\n                sortedData.push(this.dt.data.data[rowIndex])\n            })\n        })\n        this.dt.data.data = sortedData\n\n\n        this._state.sort = {column: index,\n            dir}\n        if (this.dt._searchQueries.length) {\n            this.dt.multiSearch(this.dt._searchQueries)\n            this.dt.emit(\"datatable.sort\", index, dir)\n        } else if (!init) {\n            this.dt._currentPage = 1\n            this.dt.update()\n            this.dt.emit(\"datatable.sort\", index, dir)\n        }\n    }\n\n    /**\n     * Measure the actual width of cell content by rendering the entire table with all contents.\n     * Note: Destroys current DOM and therefore requires subsequent dt.update()\n     */\n    _measureWidths() {\n        const activeHeadings = this.dt.data.headings.filter((heading: headerCellType, index: number) => !this.settings[index]?.hidden)\n        if ((this.dt.options.scrollY.length || this.dt.options.fixedColumns) && activeHeadings?.length) {\n\n            this._state.widths = []\n            const renderOptions: {noPaging?: true, noColumnWidths?: true, unhideHeader?: true, renderHeader?: true} = {\n                noPaging: true\n            }\n            // If we have headings we need only set the widths on them\n            // otherwise we need a temp header and the widths need applying to all cells\n            if (this.dt.options.header || this.dt.options.footer) {\n\n                if (this.dt.options.scrollY.length) {\n                    renderOptions.unhideHeader = true\n                }\n                if (this.dt.headerDOM) {\n                    // Remove headerDOM for accurate measurements\n                    this.dt.headerDOM.parentElement.removeChild(this.dt.headerDOM)\n                }\n\n                // Reset widths\n                renderOptions.noColumnWidths = true\n                this.dt._renderTable(renderOptions)\n\n                const activeDOMHeadings : HTMLTableCellElement[] = Array.from(this.dt.dom.querySelector(\"thead, tfoot\")?.firstElementChild?.querySelectorAll(\"th\") || [])\n                let domCounter = 0\n                const absoluteColumnWidths = this.dt.data.headings.map((_heading: headerCellType, index: number) => {\n                    if (this.settings[index]?.hidden) {\n                        return 0\n                    }\n                    const width = activeDOMHeadings[domCounter].offsetWidth\n                    domCounter += 1\n                    return width\n\n                })\n                const totalOffsetWidth = absoluteColumnWidths.reduce(\n                    (total, cellWidth) => total + cellWidth,\n                    0\n                )\n                this._state.widths = absoluteColumnWidths.map(cellWidth => cellWidth / totalOffsetWidth * 100)\n\n            } else {\n                renderOptions.renderHeader = true\n                this.dt._renderTable(renderOptions)\n\n                const activeDOMHeadings: HTMLTableCellElement[] = Array.from(this.dt.dom.querySelector(\"thead, tfoot\")?.firstElementChild?.querySelectorAll(\"th\") || [])\n                let domCounter = 0\n                const absoluteColumnWidths = this.dt.data.headings.map((_heading: headerCellType, index: number) => {\n                    if (this.settings[index]?.hidden) {\n                        return 0\n                    }\n                    const width = activeDOMHeadings[domCounter].offsetWidth\n                    domCounter += 1\n                    return width\n\n                })\n                const totalOffsetWidth = absoluteColumnWidths.reduce(\n                    (total, cellWidth) => total + cellWidth,\n                    0\n                )\n                this._state.widths = absoluteColumnWidths.map(cellWidth => cellWidth / totalOffsetWidth * 100)\n            }\n            // render table without options for measurements\n            this.dt._renderTable()\n        }\n    }\n}\n","import {\n    columnsStateType,\n    filterStateType,\n    columnSettingsType\n} from \"./types\"\n\nexport const readColumnSettings = (columnOptions = [], defaultType, defaultFormat) : [columnSettingsType[], columnsStateType] => {\n\n    let columns: (columnSettingsType | undefined)[] = []\n    let sort: (false | {column: number, dir: \"asc\" | \"desc\"}) = false\n    const filters: (filterStateType | undefined )[] = []\n\n    // Check for the columns option\n\n    columnOptions.forEach(data => {\n\n        // convert single column selection to array\n        const columnSelectors = Array.isArray(data.select) ? data.select : [data.select]\n\n        columnSelectors.forEach((selector: number) => {\n            if (columns[selector]) {\n                if (data.type) {\n                    columns[selector].type = data.type\n                }\n            } else {\n                columns[selector] = {\n                    type: data.type || defaultType,\n                    sortable: true,\n                    searchable: true\n                }\n            }\n            const column = columns[selector]\n\n\n            if (data.render) {\n                column.render = data.render\n            }\n\n            if (data.format) {\n                column.format = data.format\n            } else if (data.type === \"date\") {\n                column.format = defaultFormat\n            }\n\n            if (data.cellClass) {\n                column.cellClass = data.cellClass\n            }\n\n            if (data.headerClass) {\n                column.headerClass = data.headerClass\n            }\n\n            if (data.locale) {\n                column.locale = data.locale\n            }\n\n            if (data.sortable === false) {\n                column.sortable = false\n            } else {\n                if (data.numeric) {\n                    column.numeric = data.numeric\n                }\n                if (data.caseFirst) {\n                    column.caseFirst = data.caseFirst\n                }\n            }\n\n            if (data.searchable === false) {\n                column.searchable = false\n            } else {\n                if (data.sensitivity) {\n                    column.sensitivity = data.sensitivity\n                }\n            }\n\n            if (column.searchable || column.sortable) {\n                if (typeof data.ignorePunctuation !== \"undefined\") {\n                    column.ignorePunctuation = data.ignorePunctuation\n                }\n            }\n\n            if (data.searchMethod) {\n                column.searchMethod = data.searchMethod\n            }\n\n            if (data.hidden) {\n                column.hidden = true\n            }\n\n            if (data.filter) {\n                column.filter = data.filter\n            }\n\n            if (data.sortSequence) {\n                column.sortSequence = data.sortSequence\n            }\n\n            if (data.sort) {\n                if (data.filter) {\n                    filters[selector] = data.sort\n                } else {\n                    // We only allow one. The last one will overwrite all other options\n                    sort = {column: selector,\n                        dir: data.sort}\n                }\n            }\n\n            if (typeof data.searchItemSeparator !== \"undefined\") {\n                column.searchItemSeparator = data.searchItemSeparator\n            }\n\n        })\n\n\n    })\n\n    columns = columns.map(column => column ?\n        column :\n        {type: defaultType,\n            format: defaultType === \"date\" ? defaultFormat : undefined,\n            sortable: true,\n            searchable: true})\n\n    const widths = [] // Width are determined later on by measuring on screen.\n\n    return [\n        columns, {filters,\n            sort,\n            widths}\n    ]\n\n}\n","// Template for custom layouts\nexport const layoutTemplate = (options, dom) => `<div class='${options.classes.top}'>\n    ${\n    options.paging && options.perPageSelect ?\n        `<div class='${options.classes.dropdown}'>\n            <label>\n                <select class='${options.classes.selector}' name=\"per-page\"></select> ${options.labels.perPage}\n            </label>\n        </div>` :\n        \"\"\n}\n    ${\n    options.searchable ?\n        `<div class='${options.classes.search}'>\n            <input class='${options.classes.input}' placeholder='${options.labels.placeholder}' type='search' name=\"search\" title='${options.labels.searchTitle}'${dom.id ? ` aria-controls=\"${dom.id}\"` : \"\"}>\n        </div>` :\n        \"\"\n}\n</div>\n<div class='${options.classes.container}'${options.scrollY.length ? ` style='height: ${options.scrollY}; overflow-Y: auto;'` : \"\"}></div>\n<div class='${options.classes.bottom}'>\n    ${\n    options.paging ?\n        `<div class='${options.classes.info}'></div>` :\n        \"\"\n}\n    <nav class='${options.classes.pagination}'></nav>\n</div>`\n","import {DataTableConfiguration} from \"./types\"\nimport {layoutTemplate} from \"./templates\"\n/**\n * Default configuration\n */\nexport const defaultConfig: DataTableConfiguration = {\n    // for sorting\n    sortable: true,\n    locale: \"en\",\n    numeric: true,\n    caseFirst: \"false\",\n\n    // for searching\n    searchable: true,\n    sensitivity: \"base\",\n    ignorePunctuation: true,\n    destroyable: true,\n    searchItemSeparator: \"\", // If specified, splits the content of cells up using this separator before performing search.\n    searchQuerySeparator: \" \",\n    searchAnd: false,\n    searchMethod: false, // Custom search method to use. If not false, this will override built-in search methods.\n\n    // data\n    data: {},\n    type: \"html\", // Default data type for columns.\n    format: \"YYYY-MM-DD\",\n    columns: [],\n\n    // Pagination\n    paging: true,\n    perPage: 10,\n    perPageSelect: [5, 10, 15, 20, 25],\n    nextPrev: true,\n    firstLast: false,\n    prevText: \"‹\",\n    nextText: \"›\",\n    firstText: \"«\",\n    lastText: \"»\",\n    ellipsisText: \"…\",\n    truncatePager: true,\n    pagerDelta: 2,\n\n    scrollY: \"\",\n\n    fixedColumns: true,\n    fixedHeight: false,\n\n    footer: false,\n    header: true,\n    hiddenHeader: false,\n    caption: undefined,\n\n    // for keyboard navigation\n    rowNavigation: false,\n    rowSelectionKeys: [\"Enter\", \" \"],\n    tabIndex: false,\n\n    // for overriding rendering\n    pagerRender: false,\n    rowRender: false,\n    tableRender: false,\n    diffDomOptions: {\n        valueDiffing: false,\n        simplifiedElementCheck: false\n    },\n\n    // Customise the display text\n    labels: {\n        placeholder: \"Search...\", // The search input placeholder\n        searchTitle: \"Search within table\", // The search input title\n        perPage: \"entries per page\", // per-page dropdown label\n        pageTitle: \"Page {page}\", // page label used in Aria-label\n        noRows: \"No entries found\", // Message shown when there are no records to show\n        noResults: \"No results match your search query\", // Message shown when there are no search results\n        info: \"Showing {start} to {end} of {rows} entries\" //\n    },\n\n    // Customise the layout\n    template: layoutTemplate,\n\n    // Customize the class names used by datatable for different parts\n    classes: {\n        active: \"datatable-active\",\n        ascending: \"datatable-ascending\",\n        bottom: \"datatable-bottom\",\n        container: \"datatable-container\",\n        cursor: \"datatable-cursor\",\n        descending: \"datatable-descending\",\n        disabled: \"datatable-disabled\",\n        dropdown: \"datatable-dropdown\",\n        ellipsis: \"datatable-ellipsis\",\n        filter: \"datatable-filter\",\n        filterActive: \"datatable-filter-active\",\n        empty: \"datatable-empty\",\n        headercontainer: \"datatable-headercontainer\",\n        hidden: \"datatable-hidden\",\n        info: \"datatable-info\",\n        input: \"datatable-input\",\n        loading: \"datatable-loading\",\n        pagination: \"datatable-pagination\",\n        paginationList: \"datatable-pagination-list\",\n        paginationListItem: \"datatable-pagination-list-item\",\n        paginationListItemLink: \"datatable-pagination-list-item-link\",\n        search: \"datatable-search\",\n        selector: \"datatable-selector\",\n        sorter: \"datatable-sorter\",\n        table: \"datatable-table\",\n        top: \"datatable-top\",\n        wrapper: \"datatable-wrapper\"\n    }\n}\n","import {DataTableConfiguration, elementNodeType} from \"./types\"\n\n/**\n * Pager truncation algorithm\n */\nconst truncate = (paginationListItems: elementNodeType[], currentPage: number, pagesLength: number, options: DataTableConfiguration) : elementNodeType[] => {\n    const pagerDelta = options.pagerDelta\n    const classes = options.classes\n    const ellipsisText = options.ellipsisText\n\n    const doublePagerDelta = 2 * pagerDelta\n    let previousPage = currentPage - pagerDelta\n    let nextPage = currentPage + pagerDelta\n\n    if (currentPage < 4 - pagerDelta + doublePagerDelta) {\n        nextPage = 3 + doublePagerDelta\n    } else if (currentPage > pagesLength - (3 - pagerDelta + doublePagerDelta)) {\n        previousPage = pagesLength - (2 + doublePagerDelta)\n    }\n    const paginationListItemsToModify: elementNodeType[] = []\n    for (let k = 1; k <= pagesLength; k++) {\n        if (1 == k || k == pagesLength || (k >= previousPage && k <= nextPage)) {\n            const li = paginationListItems[k - 1]\n            paginationListItemsToModify.push(li)\n        }\n    }\n    let previousLi: elementNodeType\n    const modifiedLis: elementNodeType[] = []\n    paginationListItemsToModify.forEach(li => {\n        const pageNumber = parseInt((li.childNodes[0] as elementNodeType).attributes[\"data-page\"], 10)\n        if (previousLi) {\n            const previousPageNumber = parseInt((previousLi.childNodes[0] as elementNodeType).attributes[\"data-page\"], 10)\n            if (pageNumber - previousPageNumber == 2) {\n                modifiedLis.push(paginationListItems[previousPageNumber])\n            } else if (pageNumber - previousPageNumber != 1) {\n                const newLi: elementNodeType = {\n                    nodeName: \"LI\",\n                    attributes: {\n                        class: `${classes.paginationListItem} ${classes.ellipsis} ${classes.disabled}`\n                    },\n                    childNodes: [\n                        {\n                            nodeName: \"BUTTON\",\n                            attributes: {\n                                class: classes.paginationListItemLink\n                            },\n                            childNodes: [\n                                {\n                                    nodeName: \"#text\",\n                                    data: ellipsisText\n                                }\n                            ]\n                        }\n                    ]\n                }\n                modifiedLis.push(newLi)\n            }\n        }\n        modifiedLis.push(li)\n        previousLi = li\n    })\n\n    return modifiedLis\n}\n\n\nconst paginationListItem = (page: number, label: string, options: DataTableConfiguration, state: {active?: boolean, hidden?: boolean} = {}) : elementNodeType => ({\n    nodeName: \"LI\",\n    attributes: {\n        class:\n        (state.active && !state.hidden) ?\n            `${options.classes.paginationListItem} ${options.classes.active}` :\n            state.hidden ?\n                `${options.classes.paginationListItem} ${options.classes.hidden} ${options.classes.disabled}` :\n                options.classes.paginationListItem\n    },\n    childNodes: [\n        {\n            nodeName: \"BUTTON\",\n            attributes: {\n                \"data-page\": String(page),\n                class: options.classes.paginationListItemLink,\n                \"aria-label\": options.labels.pageTitle.replace(\"{page}\", String(page))\n            },\n            childNodes: [\n                {\n                    nodeName: \"#text\",\n                    data: label\n                }\n            ]\n        }\n    ]\n})\n\nexport const createVirtualPagerDOM = (onFirstPage: boolean, onLastPage: boolean, currentPage: number, totalPages: number, options) => {\n\n    let pagerListItems : elementNodeType[] = []\n\n    // first button\n    if (options.firstLast) {\n        pagerListItems.push(paginationListItem(1, options.firstText, options))\n    }\n\n    // prev button\n    if (options.nextPrev) {\n        const prev = onFirstPage ? 1 : currentPage - 1\n        pagerListItems.push(paginationListItem(prev, options.prevText, options, {hidden: onFirstPage}))\n    }\n\n    let pages = [...Array(totalPages).keys()].map(index => paginationListItem(index+1, String(index+1), options, {active: (index === (currentPage-1))}))\n\n    if (options.truncatePager) {\n        // truncate the paginationListItems\n        pages = truncate(\n            pages,\n            currentPage,\n            totalPages,\n            options\n        )\n\n    }\n\n    // append the paginationListItems\n    pagerListItems = pagerListItems.concat(pages)\n\n    // next button\n    if (options.nextPrev) {\n        const next = onLastPage ? totalPages : currentPage + 1\n        pagerListItems.push(paginationListItem(next, options.nextText, options, {hidden: onLastPage}))\n    }\n\n    // last button\n    if (options.firstLast) {\n        pagerListItems.push(paginationListItem(totalPages, options.lastText, options))\n    }\n\n    const pager : elementNodeType = {\n        nodeName: \"UL\",\n        attributes: {\n            class: options.classes.paginationList\n        },\n        childNodes: pages.length > 1 ? pagerListItems : [] // Don't show single page\n    }\n\n    return pager\n\n}\n","import {\n    cellToText,\n    classNamesToSelector,\n    containsClass,\n    createElement,\n    debounce,\n    isObject,\n    joinWithSpaces,\n    visibleToColumnIndex\n} from \"./helpers\"\nimport {\n    cellType,\n    DataTableConfiguration,\n    DataTableOptions,\n    dataRowType,\n    filterStateType,\n    headerCellType,\n    inputCellType,\n    inputRowType,\n    elementNodeType,\n    renderOptions,\n    rowType,\n    TableDataType\n} from \"./types\"\nimport {DiffDOM, nodeToObj} from \"diff-dom\"\n\nimport {dataToVirtualDOM, headingsToVirtualHeaderRowDOM} from \"./virtual_dom\"\nimport {readTableData, readDataCell, readHeaderCell} from \"./read_data\"\nimport {Rows} from \"./rows\"\nimport {Columns} from \"./columns\"\nimport {defaultConfig} from \"./config\"\nimport {createVirtualPagerDOM} from \"./virtual_pager_dom\"\n\n\nexport class DataTable {\n\n    columns: Columns\n\n    containerDOM: HTMLDivElement\n\n    _currentPage: number\n\n    data: TableDataType\n\n    _dd: DiffDOM\n\n    dom: HTMLTableElement\n\n    _events: { [key: string]: ((...args) => void)[]}\n\n    hasHeadings: boolean\n\n    hasRows: boolean\n\n    headerDOM: HTMLDivElement\n\n    _initialHTML: string\n\n    initialized: boolean\n\n    _label: HTMLElement\n\n    lastPage: number\n\n    _listeners: { [key: string]: () => void}\n\n    onFirstPage: boolean\n\n    onLastPage: boolean\n\n    options: DataTableConfiguration\n\n    _pagerDOMs: HTMLElement[]\n\n    _virtualPagerDOM: elementNodeType\n\n    pages: rowType[][]\n\n    _rect: {width: number, height: number}\n\n    rows: Rows\n\n    _searchData: number[]\n\n    _searchQueries: {source: string, terms: string[], columns: (number[] | undefined)}[]\n\n    _tableAttributes: {[key: string]: string}\n\n    _tableFooters: elementNodeType[]\n\n    _tableCaptions: elementNodeType[]\n\n    totalPages: number\n\n    _virtualDOM: elementNodeType\n\n    _virtualHeaderDOM: elementNodeType\n\n    wrapperDOM: HTMLElement\n\n    constructor(table: HTMLTableElement | string, options: DataTableOptions = {}) {\n\n        const dom = typeof table === \"string\" ?\n            document.querySelector(table) :\n            table\n        if (dom instanceof HTMLTableElement) {\n            this.dom = dom\n        } else {\n            this.dom = document.createElement(\"table\")\n            dom.appendChild(this.dom)\n        }\n\n        const diffDomOptions = {\n            ...defaultConfig.diffDomOptions,\n            ...options.diffDomOptions\n        }\n\n        const labels = {\n            ...defaultConfig.labels,\n            ...options.labels\n        }\n\n        const classes = {\n            ...defaultConfig.classes,\n            ...options.classes\n        }\n\n        // user options\n        this.options = {\n            ...defaultConfig,\n            ...options,\n            diffDomOptions,\n            labels,\n            classes\n        }\n\n        this._initialHTML = this.options.destroyable ? dom.outerHTML : \"\" // preserve in case of later destruction\n\n        if (this.options.tabIndex) {\n            this.dom.tabIndex = this.options.tabIndex\n        } else if (this.options.rowNavigation && this.dom.tabIndex === -1) {\n            this.dom.tabIndex = 0\n        }\n\n        this._listeners = {\n            onResize: () => this._onResize()\n        }\n\n        this._dd = new DiffDOM(this.options.diffDomOptions || {})\n\n        this.initialized = false\n        this._events = {}\n\n        this._currentPage = 0\n        this.onFirstPage = true\n        this.hasHeadings = false\n        this.hasRows = false\n        this._searchQueries = []\n\n        this.init()\n    }\n\n    /**\n     * Initialize the instance\n     */\n    init() {\n        if (this.initialized || containsClass(this.dom, this.options.classes.table)) {\n            return false\n        }\n\n        this._virtualDOM = nodeToObj(this.dom, this.options.diffDomOptions || {})\n\n        this._tableAttributes = {...this._virtualDOM.attributes}\n        this._tableFooters = this._virtualDOM.childNodes?.filter(node => node.nodeName === \"TFOOT\") ?? []\n        this._tableCaptions = this._virtualDOM.childNodes?.filter(node => node.nodeName === \"CAPTION\") ?? []\n        if (this.options.caption !== undefined) {\n            this._tableCaptions.push({\n                nodeName: \"CAPTION\",\n                childNodes: [\n                    {\n                        nodeName: \"#text\",\n                        data: this.options.caption\n                    }\n                ]\n            })\n        }\n\n        this.rows = new Rows(this)\n        this.columns = new Columns(this)\n\n        this.data = readTableData(this.options.data, this.dom, this.columns.settings, this.options.type, this.options.format)\n\n        this._render()\n\n        setTimeout(() => {\n            this.emit(\"datatable.init\")\n            this.initialized = true\n        }, 10)\n    }\n\n\n    /**\n     * Render the instance\n     */\n    _render() {\n\n        // Build\n        this.wrapperDOM = createElement(\"div\", {\n            class: `${this.options.classes.wrapper} ${this.options.classes.loading}`\n        })\n\n        this.wrapperDOM.innerHTML = this.options.template(this.options, this.dom)\n\n        const selectorClassSelector = classNamesToSelector(this.options.classes.selector)\n        const selector = this.wrapperDOM.querySelector(`select${selectorClassSelector}`)\n\n        // Per Page Select\n        if (selector && this.options.paging && this.options.perPageSelect) {\n\n            // Create the options\n            this.options.perPageSelect.forEach((choice: number | [string, number]) => {\n                const [lab, val] = Array.isArray(choice) ? [choice[0], choice[1]] : [String(choice), choice]\n                const selected = val === this.options.perPage\n                const option = new Option(lab, String(val), selected, selected)\n                selector.appendChild(option)\n            })\n\n        } else if (selector) {\n            selector.parentElement.removeChild(selector)\n        }\n\n        const containerSelector = classNamesToSelector(this.options.classes.container)\n        this.containerDOM = this.wrapperDOM.querySelector(containerSelector)\n\n        this._pagerDOMs = []\n        const paginationSelector = classNamesToSelector(this.options.classes.pagination)\n        Array.from(this.wrapperDOM.querySelectorAll(paginationSelector)).forEach(el => {\n            if (!(el instanceof HTMLElement)) {\n                return\n            }\n            // We remove the inner part of the pager containers to ensure they are all the same.\n            el.innerHTML = `<ul class=\"${this.options.classes.paginationList}\"></ul>`\n            this._pagerDOMs.push(el.firstElementChild as HTMLElement)\n        })\n\n        this._virtualPagerDOM = {\n            nodeName: \"UL\",\n            attributes: {\n                class: this.options.classes.paginationList\n            }\n        }\n\n\n        const infoSelector = classNamesToSelector(this.options.classes.info)\n        this._label = this.wrapperDOM.querySelector(infoSelector)\n\n        // Insert in to DOM tree\n        this.dom.parentElement.replaceChild(this.wrapperDOM, this.dom)\n        this.containerDOM.appendChild(this.dom)\n\n        // Store the table dimensions\n        this._rect = this.dom.getBoundingClientRect()\n\n        // Fix height\n        this._fixHeight()\n\n        // Class names\n        if (!this.options.header) {\n            this.wrapperDOM.classList.add(\"no-header\")\n        }\n\n        if (!this.options.footer) {\n            this.wrapperDOM.classList.add(\"no-footer\")\n        }\n\n        if (this.options.sortable) {\n            this.wrapperDOM.classList.add(\"sortable\")\n        }\n\n        if (this.options.searchable) {\n            this.wrapperDOM.classList.add(\"searchable\")\n        }\n\n        if (this.options.fixedHeight) {\n            this.wrapperDOM.classList.add(\"fixed-height\")\n        }\n\n        if (this.options.fixedColumns) {\n            this.wrapperDOM.classList.add(\"fixed-columns\")\n        }\n\n        this._bindEvents()\n\n        if (this.columns._state.sort) {\n            this.columns.sort(this.columns._state.sort.column, this.columns._state.sort.dir, true)\n        }\n\n        this.update(true)\n    }\n\n    _renderTable(renderOptions: renderOptions = {}) {\n        let rows: rowType[]\n        const isPaged = (this.options.paging || this._searchQueries.length || this.columns._state.filters.length) && this._currentPage && this.pages.length && !renderOptions.noPaging\n        if (isPaged) {\n            rows = this.pages[this._currentPage - 1]\n        } else {\n            rows = this.data.data.map((row, index) => ({\n                row,\n                index\n            }))\n        }\n\n        let newVirtualDOM = dataToVirtualDOM(\n            this._tableAttributes,\n            this.data.headings,\n            rows,\n            this.columns.settings,\n            this.columns._state,\n            this.rows.cursor,\n            this.options,\n            renderOptions,\n            this._tableFooters,\n            this._tableCaptions\n        )\n\n        if (this.options.tableRender) {\n            const renderedTableVirtualDOM : (elementNodeType | void) = this.options.tableRender(this.data, newVirtualDOM, \"main\")\n            if (renderedTableVirtualDOM) {\n                newVirtualDOM = renderedTableVirtualDOM\n            }\n        }\n        const diff = this._dd.diff(this._virtualDOM, newVirtualDOM)\n        this._dd.apply(this.dom, diff)\n        this._virtualDOM = newVirtualDOM\n    }\n\n    /**\n     * Render the page\n     * @return {Void}\n     */\n    _renderPage(lastRowCursor=false) {\n        if (this.hasRows && this.totalPages) {\n            if (this._currentPage > this.totalPages) {\n                this._currentPage = 1\n            }\n\n            // Use a fragment to limit touching the DOM\n            this._renderTable()\n\n            this.onFirstPage = this._currentPage === 1\n            this.onLastPage = this._currentPage === this.lastPage\n        } else {\n            this.setMessage(this.options.labels.noRows)\n        }\n\n        // Update the info\n        let current = 0\n\n        let f = 0\n        let t = 0\n        let items\n\n        if (this.totalPages) {\n            current = this._currentPage - 1\n            f = current * this.options.perPage\n            t = f + this.pages[current].length\n            f = f + 1\n            items = this._searchQueries.length ? this._searchData.length : this.data.data.length\n        }\n\n        if (this._label && this.options.labels.info.length) {\n            // CUSTOM LABELS\n            const string = this.options.labels.info\n                .replace(\"{start}\", String(f))\n                .replace(\"{end}\", String(t))\n                .replace(\"{page}\", String(this._currentPage))\n                .replace(\"{pages}\", String(this.totalPages))\n                .replace(\"{rows}\", String(items))\n\n            this._label.innerHTML = items ? string : \"\"\n        }\n\n        if (this._currentPage == 1) {\n            this._fixHeight()\n        }\n\n        if (this.options.rowNavigation && this._currentPage) {\n            if (!this.rows.cursor || !this.pages[this._currentPage-1].find(\n                row => row.index === this.rows.cursor)\n            ) {\n                const rows = this.pages[this._currentPage-1]\n                if (rows.length) {\n                    if (lastRowCursor) {\n                        this.rows.setCursor(rows[rows.length-1].index)\n                    } else {\n                        this.rows.setCursor(rows[0].index)\n                    }\n                }\n            }\n        }\n    }\n\n    /** Render the pager(s)\n     *\n     */\n    _renderPagers() {\n        if (!this.options.paging) {\n            return\n        }\n        let newPagerVirtualDOM = createVirtualPagerDOM(this.onFirstPage, this.onLastPage, this._currentPage, this.totalPages, this.options)\n\n        if (this.options.pagerRender) {\n            const renderedPagerVirtualDOM : (elementNodeType | void) = this.options.pagerRender([this.onFirstPage, this.onLastPage, this._currentPage, this.totalPages], newPagerVirtualDOM)\n            if (renderedPagerVirtualDOM) {\n                newPagerVirtualDOM = renderedPagerVirtualDOM\n            }\n        }\n\n        const diffs = this._dd.diff(this._virtualPagerDOM, newPagerVirtualDOM)\n        // We may have more than one pager\n        this._pagerDOMs.forEach((pagerDOM: HTMLElement) => {\n            this._dd.apply(pagerDOM, diffs)\n        })\n\n        this._virtualPagerDOM = newPagerVirtualDOM\n    }\n\n    // Render header that is not in the same table element as the remainder\n    // of the table. Used for tables with scrollY.\n    _renderSeparateHeader() {\n        const container = this.dom.parentElement\n        if (!this.headerDOM) {\n            this.headerDOM = document.createElement(\"div\")\n            this._virtualHeaderDOM = {\n                nodeName: \"DIV\"\n            }\n\n        }\n        container.parentElement.insertBefore(this.headerDOM, container)\n        let tableVirtualDOM : elementNodeType = {\n            nodeName: \"TABLE\",\n            attributes: this._tableAttributes,\n            childNodes: [\n                {\n                    nodeName: \"THEAD\",\n                    childNodes: [\n                        headingsToVirtualHeaderRowDOM(\n                            this.data.headings, this.columns.settings, this.columns._state, this.options, {unhideHeader: true})\n                    ]\n\n                }\n\n            ]\n        }\n        if (!tableVirtualDOM.attributes.class?.includes(this.options.classes.table)) {\n            tableVirtualDOM.attributes.class = joinWithSpaces(tableVirtualDOM.attributes.class, this.options.classes.table)\n        }\n        if (this.options.tableRender) {\n            const renderedTableVirtualDOM : (elementNodeType | void) = this.options.tableRender(this.data, tableVirtualDOM, \"header\")\n            if (renderedTableVirtualDOM) {\n                tableVirtualDOM = renderedTableVirtualDOM\n            }\n        }\n\n        const newVirtualHeaderDOM = {\n            nodeName: \"DIV\",\n            attributes: {\n                class: this.options.classes.headercontainer\n            },\n            childNodes: [tableVirtualDOM]\n        }\n\n        const diff = this._dd.diff(this._virtualHeaderDOM, newVirtualHeaderDOM)\n        this._dd.apply(this.headerDOM, diff)\n        this._virtualHeaderDOM = newVirtualHeaderDOM\n\n        // Compensate for scrollbars\n        const paddingRight = this.headerDOM.firstElementChild.clientWidth - this.dom.clientWidth\n        if (paddingRight) {\n            const paddedVirtualHeaderDOM = structuredClone(this._virtualHeaderDOM)\n            paddedVirtualHeaderDOM.attributes.style = `padding-right: ${paddingRight}px;`\n            const diff = this._dd.diff(this._virtualHeaderDOM, paddedVirtualHeaderDOM)\n            this._dd.apply(this.headerDOM, diff)\n            this._virtualHeaderDOM = paddedVirtualHeaderDOM\n        }\n\n        if (container.scrollHeight > container.clientHeight) {\n            // scrollbars on one page means scrollbars on all pages.\n            container.style.overflowY = \"scroll\"\n        }\n    }\n\n    /**\n     * Bind event listeners\n     * @return {[type]} [description]\n     */\n    _bindEvents() {\n        // Per page selector\n        if (this.options.perPageSelect) {\n            const selectorClassSelector = classNamesToSelector(this.options.classes.selector)\n            const selector = this.wrapperDOM.querySelector(selectorClassSelector)\n            if (selector && selector instanceof HTMLSelectElement) {\n                // Change per page\n                selector.addEventListener(\"change\", () => {\n                    this.emit(\"datatable.perpage:before\", this.options.perPage)\n                    this.options.perPage = parseInt(selector.value, 10)\n                    this.update()\n\n                    this._fixHeight()\n\n                    this.emit(\"datatable.perpage\", this.options.perPage)\n                }, false)\n            }\n        }\n\n        // Search input\n        if (this.options.searchable) {\n            this.wrapperDOM.addEventListener(\"input\", (event: InputEvent) => {\n                const inputSelector = classNamesToSelector(this.options.classes.input)\n                const target = event.target\n                if (!(target instanceof HTMLInputElement) || !target.matches(inputSelector)) {\n                    return\n                }\n                event.preventDefault()\n\n                const searches: { terms: string[], columns: (number[] | undefined) }[] = []\n                const searchFields: HTMLInputElement[] = Array.from(this.wrapperDOM.querySelectorAll(inputSelector))\n                searchFields.filter(\n                    el => el.value.length\n                ).forEach(\n                    el => {\n                        const andSearch = el.dataset.and || this.options.searchAnd\n                        const querySeparator = el.dataset.querySeparator || this.options.searchQuerySeparator\n                        const terms = querySeparator ? el.value.split(this.options.searchQuerySeparator) : [el.value]\n                        if (andSearch) {\n                            terms.forEach(term => {\n                                if (el.dataset.columns) {\n                                    searches.push({\n                                        terms: [term],\n                                        columns: (JSON.parse(el.dataset.columns) as number[])\n                                    })\n                                } else {\n                                    searches.push({terms: [term],\n                                        columns: undefined})\n                                }\n                            })\n                        } else {\n                            if (el.dataset.columns) {\n                                searches.push({\n                                    terms,\n                                    columns: (JSON.parse(el.dataset.columns) as number[])\n                                })\n                            } else {\n                                searches.push({terms,\n                                    columns: undefined})\n                            }\n                        }\n\n                    }\n                )\n                if (searches.length === 1 && searches[0].terms.length === 1) {\n                    const search = searches[0]\n                    this.search(search.terms[0], search.columns)\n                } else {\n                    this.multiSearch(searches)\n                }\n            })\n        }\n\n        // Pager(s) / sorting\n        this.wrapperDOM.addEventListener(\"click\", (event: Event) => {\n            const target = event.target as Element\n            const hyperlink = target.closest(\"a, button\")\n            if (!hyperlink) {\n                return\n            }\n\n            if (hyperlink.hasAttribute(\"data-page\")) {\n                this.page(parseInt(hyperlink.getAttribute(\"data-page\"), 10))\n                event.preventDefault()\n            } else if (containsClass(hyperlink, this.options.classes.sorter)) {\n                const visibleIndex = Array.from(hyperlink.parentElement.parentElement.children).indexOf(hyperlink.parentElement)\n                const columnIndex = visibleToColumnIndex(visibleIndex, this.columns.settings)\n                this.columns.sort(columnIndex)\n                event.preventDefault()\n            } else if (containsClass(hyperlink, this.options.classes.filter)) {\n                const visibleIndex = Array.from(hyperlink.parentElement.parentElement.children).indexOf(hyperlink.parentElement)\n                const columnIndex = visibleToColumnIndex(visibleIndex, this.columns.settings)\n                this.columns.filter(columnIndex)\n                event.preventDefault()\n            }\n        }, false)\n\n        if (this.options.rowNavigation) {\n            this.dom.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n                if (event.key === \"ArrowUp\") {\n                    event.preventDefault()\n                    event.stopPropagation()\n                    let lastRow: rowType\n                    this.pages[this._currentPage-1].find((row: rowType) => {\n                        if (row.index===this.rows.cursor) {\n                            return true\n                        }\n                        lastRow = row\n                        return false\n                    })\n                    if (lastRow) {\n                        this.rows.setCursor(lastRow.index)\n                    } else if (!this.onFirstPage) {\n                        this.page(this._currentPage-1, true)\n                    }\n                } else if (event.key === \"ArrowDown\") {\n                    event.preventDefault()\n                    event.stopPropagation()\n                    let foundRow: boolean\n                    const nextRow = this.pages[this._currentPage-1].find((row: rowType) => {\n                        if (foundRow) {\n                            return true\n                        }\n                        if (row.index===this.rows.cursor) {\n                            foundRow = true\n                        }\n                        return false\n                    })\n                    if (nextRow) {\n                        this.rows.setCursor(nextRow.index)\n                    } else if (!this.onLastPage) {\n                        this.page(this._currentPage+1)\n                    }\n                } else if (this.options.rowSelectionKeys.includes(event.key)) {\n                    this.emit(\"datatable.selectrow\", this.rows.cursor, event, true)\n                }\n            })\n        }\n\n        this.dom.addEventListener(\"mousedown\", (event: Event) => {\n            const target = event.target\n            if (!(target instanceof Element)) {\n                return\n            }\n            const row = Array.from(this.dom.querySelectorAll(\"tbody > tr\")).find(row => row.contains(target))\n            if (row && row instanceof HTMLElement) {\n                this.emit(\"datatable.selectrow\", parseInt(row.dataset.index, 10), event, this.dom.matches(\":focus\"))\n            }\n        })\n\n        window.addEventListener(\"resize\", this._listeners.onResize)\n    }\n\n    /**\n     * execute on resize and debounce to avoid multiple calls\n     */\n    _onResize = debounce(() => {\n        this._rect = this.containerDOM.getBoundingClientRect()\n        if (!this._rect.width) {\n            return\n        }\n        this.update(true)\n    }, 250)\n\n    /**\n     * Destroy the instance\n     * @return {void}\n     */\n    destroy() {\n        if (!this.options.destroyable) {\n            return\n        }\n        this.emit(\"datatable.destroy:before\")\n\n        if (this.wrapperDOM) {\n            const parentElement = this.wrapperDOM.parentElement\n            if (parentElement) {\n                // Restore the initial HTML\n                const oldDOM = createElement(\"div\")\n                oldDOM.innerHTML = this._initialHTML\n                const oldTable = oldDOM.firstElementChild as HTMLTableElement\n                parentElement.replaceChild(oldTable, this.wrapperDOM)\n                this.dom = oldTable\n            } else {\n                // Remove the className\n                this.options.classes.table?.split(\" \").forEach(className => this.wrapperDOM.classList.remove(className))\n            }\n        }\n\n        window.removeEventListener(\"resize\", this._listeners.onResize)\n\n        this.initialized = false\n\n        this.emit(\"datatable.destroy\")\n    }\n\n    /**\n     * Update the instance\n     * @return {Void}\n     */\n    update(measureWidths = false) {\n        this.emit(\"datatable.update:before\")\n\n        if (measureWidths) {\n            this.columns._measureWidths()\n            this.hasRows = Boolean(this.data.data.length)\n            this.hasHeadings = Boolean(this.data.headings.length)\n        }\n        this.options.classes.empty?.split(\" \").forEach(className => this.wrapperDOM.classList.remove(className))\n\n        this._paginate()\n        this._renderPage()\n\n        this._renderPagers()\n\n        if (this.options.scrollY.length) {\n            this._renderSeparateHeader()\n        }\n\n        this.emit(\"datatable.update\")\n    }\n\n    _paginate() {\n        let rows: rowType[] = this.data.data.map((row, index) => ({\n            row,\n            index\n        }))\n\n        if (this._searchQueries.length) {\n            rows = []\n\n            this._searchData.forEach((index: number) => rows.push({index,\n                row: this.data.data[index]}))\n        }\n\n        if (this.columns._state.filters.length) {\n            this.columns._state.filters.forEach(\n                (filterState: (filterStateType | undefined), column: number) => {\n                    if (!filterState) {\n                        return\n                    }\n                    rows = rows.filter(\n                        (row: {index: number, row: dataRowType}) => {\n                            const cell = row.row.cells[column]\n                            return typeof filterState === \"function\" ? filterState(cell.data) : cellToText(cell) === filterState\n                        }\n                    )\n                }\n            )\n        }\n\n        if (this.options.paging && this.options.perPage > 0) {\n            // Check for hidden columns\n            this.pages = rows\n                .map((_row, i: number) => i % this.options.perPage === 0 ? rows.slice(i, i + this.options.perPage) : null)\n                .filter((page: {row: dataRowType, index: number}[]) => page)\n        } else {\n            this.pages = [rows]\n        }\n\n        this.totalPages = this.lastPage = this.pages.length\n\n        if (!this._currentPage) {\n            this._currentPage = 1\n        }\n        return this.totalPages\n    }\n\n    /**\n     * Fix the container height\n     */\n    _fixHeight() {\n        if (this.options.fixedHeight) {\n            this.containerDOM.style.height = null\n            this._rect = this.containerDOM.getBoundingClientRect()\n            this.containerDOM.style.height = `${this._rect.height}px`\n        }\n    }\n\n    /**\n     * Perform a simple search of the data set\n     */\n    search(term: string, columns: (number[] | undefined ) = undefined, source: string = \"search\") {\n        this.emit(\"datatable.search:before\", term, this._searchData)\n\n        if (!term.length) {\n            this._currentPage = 1\n            this._searchQueries = []\n            this._searchData = []\n            this.update()\n            this.emit(\"datatable.search\", \"\", [])\n            this.wrapperDOM.classList.remove(\"search-results\")\n            return false\n        }\n\n        this.multiSearch([\n            {terms: [term],\n                columns: columns ? columns : undefined}\n        ], source)\n\n        this.emit(\"datatable.search\", term, this._searchData)\n\n    }\n\n    /**\n     * Perform a search of the data set searching for up to multiple strings in various columns\n     */\n    multiSearch(rawQueries: { terms: string[], columns: (number[] | undefined) }[], source: string = \"search\") {\n        if (!this.hasRows) return false\n\n        this._currentPage = 1\n        this._searchData = []\n        // Remove empty queries\n        let queries = rawQueries.map(query => ({\n            columns: query.columns,\n            terms: query.terms.map(term => term.trim()).filter(term => term),\n            source\n        })).filter(query => query.terms.length)\n\n        this.emit(\"datatable.multisearch:before\", queries, this._searchData)\n\n        if (source.length) {\n            // Add any existing queries from different source\n            queries = queries.concat(this._searchQueries.filter(query => query.source !== source))\n        }\n        this._searchQueries = queries\n\n        if (!queries.length) {\n            this.update()\n            this.emit(\"datatable.multisearch\", queries, this._searchData)\n            this.wrapperDOM.classList.remove(\"search-results\")\n            return false\n        }\n        const queryWords = queries.map(query => this.columns.settings.map(\n            (column, index) => {\n                if (!column || column.hidden || !column.searchable || (query.columns && !query.columns.includes(index))) {\n                    return false\n                }\n                let columnQueries = query.terms\n                const sensitivity = column.sensitivity || this.options.sensitivity\n                if ([\"base\", \"accent\"].includes(sensitivity)) {\n                    columnQueries = columnQueries.map(query => query.toLowerCase())\n                }\n                if ([\"base\", \"case\"].includes(sensitivity)) {\n                    columnQueries = columnQueries.map(query => query.normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\"))\n                }\n                const ignorePunctuation = column.ignorePunctuation ?? this.options.ignorePunctuation\n                if (ignorePunctuation) {\n                    columnQueries = columnQueries.map(query => query.replace(/[.,/#!$%^&*;:{}=-_`~()]/g, \"\"))\n                }\n                return columnQueries\n            }\n        ))\n        this.data.data.forEach((row: dataRowType, idx: number) => {\n            const searchRow = row.cells.map((cell, i) => {\n                const column = this.columns.settings[i]\n                const customSearchMethod = column?.searchMethod || this.options.searchMethod\n\n                // Handle rowspan placeholders - find the actual cell value\n                let actualCell = cell\n                if (cell.attributes?.[\"data-rowspan-placeholder\"] === \"true\") {\n                    // Look backward through rows to find the actual cell with rowspan\n                    for (let j = idx - 1; j >= 0; j--) {\n                        const prevCell = this.data.data[j].cells[i]\n                        if (prevCell.attributes?.[\"data-rowspan-placeholder\"] !== \"true\") {\n                            actualCell = prevCell\n                            break\n                        }\n                    }\n                }\n\n                if (customSearchMethod) {\n                    return actualCell\n                }\n                let content = cellToText(actualCell).trim()\n                if (content.length) {\n                    const sensitivity = column?.sensitivity || this.options.sensitivity\n                    if ([\"base\", \"accent\"].includes(sensitivity)) {\n                        content = content.toLowerCase()\n                    }\n                    if ([\"base\", \"case\"].includes(sensitivity)) {\n                        content = content.normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\")\n                    }\n                    const ignorePunctuation = column?.ignorePunctuation ?? this.options.ignorePunctuation\n                    if (ignorePunctuation) {\n                        content = content.replace(/[.,/#!$%^&*;:{}=-_`~()]/g, \"\")\n                    }\n                }\n                const searchItemSeparator = column?.searchItemSeparator || this.options.searchItemSeparator\n                return searchItemSeparator ? content.split(searchItemSeparator) : [content]\n            })\n            if (\n                queryWords.every(\n                    (queryColumn, queryIndex) => queryColumn.find(\n                        (queryColumnWord, index) => {\n                            if (!queryColumnWord) {\n                                return false\n                            }\n                            const column = this.columns.settings[index]\n                            const customSearchMethod = column?.searchMethod || this.options.searchMethod\n                            if (customSearchMethod) {\n                                // For custom search methods, use the actual cell (which may have been resolved from rowspan)\n                                return customSearchMethod(queryColumnWord, (searchRow[index] as cellType), row, index, queries[queryIndex].source)\n                            }\n                            return queryColumnWord.find(queryWord => (searchRow[index] as string[])?.find(searchItem => searchItem?.includes(queryWord)))\n                        }\n                    )\n                )\n            ) {\n                this._searchData.push(idx)\n            }\n\n        })\n\n        this.wrapperDOM.classList.add(\"search-results\")\n        if (this._searchData.length) {\n            this.update()\n        } else {\n            this.wrapperDOM.classList.remove(\"search-results\")\n\n            this.setMessage(this.options.labels.noResults)\n        }\n\n        this.emit(\"datatable.multisearch\", queries, this._searchData)\n    }\n\n    /**\n     * Change page\n     */\n    page(page: number, lastRowCursor = false) {\n        this.emit(\"datatable.page:before\", page)\n\n        // We don't want to load the current page again.\n        if (page === this._currentPage) {\n            return false\n        }\n\n        if (!isNaN(page)) {\n            this._currentPage = page\n        }\n\n        if (page > this.pages.length || page < 0) {\n            return false\n        }\n\n        this._renderPage(lastRowCursor)\n        this._renderPagers()\n\n        this.emit(\"datatable.page\", page)\n    }\n\n    /**\n     * Add new row data\n     */\n    insert(data: (\n        {headings?: string[], data?: (inputRowType | inputCellType[])[]} | { [key: string]: inputCellType}[])) {\n        let rows: dataRowType[] = []\n        if (Array.isArray(data)) {\n            const headings = this.data.headings.map((heading: headerCellType) => heading.data ? String(heading.data) : heading.text)\n            data.forEach((row, rIndex) => {\n                const r: cellType[] = []\n                Object.entries(row).forEach(([heading, cell]) => {\n\n                    const index = headings.indexOf(heading)\n\n                    if (index > -1) {\n                        r[index] = readDataCell(cell as inputCellType, this.columns.settings[index])\n                    } else if (!this.hasHeadings && !this.hasRows && rIndex === 0) {\n                        r[headings.length] = readDataCell(cell as inputCellType, this.columns.settings[headings.length])\n                        headings.push(heading)\n                        this.data.headings.push(readHeaderCell(heading))\n                    }\n                })\n                rows.push({\n                    cells: r\n                })\n            })\n        } else if (isObject(data)) {\n            if (data.headings && !this.hasHeadings && !this.hasRows) {\n                this.data = readTableData(data, undefined, this.columns.settings, this.options.type, this.options.format)\n            } else if (data.data && Array.isArray(data.data)) {\n                rows = data.data.map(row => {\n                    let attributes: { [key: string]: string }\n                    let cells: inputCellType[]\n                    if (Array.isArray(row)) {\n                        attributes = {}\n                        cells = row\n                    } else {\n                        attributes = row.attributes\n                        cells = row.cells\n                    }\n                    return {\n                        attributes,\n                        cells: cells.map((cell, index) => readDataCell(cell as inputCellType, this.columns.settings[index]))\n                    } as dataRowType\n                })\n            }\n        }\n        if (rows.length) {\n            rows.forEach((row: dataRowType) => this.data.data.push(row))\n        }\n        this.hasHeadings = Boolean(this.data.headings.length)\n\n        if (this.columns._state.sort) {\n            this.columns.sort(this.columns._state.sort.column, this.columns._state.sort.dir, true)\n        }\n\n        this.update(true)\n    }\n\n    /**\n     * Refresh the instance\n     */\n    refresh() {\n        this.emit(\"datatable.refresh:before\")\n\n        if (this.options.searchable) {\n            const inputSelector = classNamesToSelector(this.options.classes.input)\n            const inputs: HTMLInputElement[] = Array.from(this.wrapperDOM.querySelectorAll(inputSelector))\n            inputs.forEach(el => (el.value = \"\"))\n            this._searchQueries = []\n        }\n        this._currentPage = 1\n        this.onFirstPage = true\n        this.update(true)\n\n        this.emit(\"datatable.refresh\")\n    }\n\n    /**\n     * Print the table\n     */\n    print() {\n        const tableDOM = createElement(\"table\")\n        const tableVirtualDOM = {nodeName: \"TABLE\"}\n        let newTableVirtualDOM = dataToVirtualDOM(\n            this._tableAttributes,\n            this.data.headings,\n            this.data.data.map((row, index) => ({\n                row,\n                index\n            })),\n            this.columns.settings,\n            this.columns._state,\n            false, // No row cursor\n            this.options,\n            {\n                noColumnWidths: true,\n                unhideHeader: true\n            },\n            this._tableFooters,\n            this._tableCaptions\n        )\n\n        if (this.options.tableRender) {\n            const renderedTableVirtualDOM : (elementNodeType | void) = this.options.tableRender(this.data, newTableVirtualDOM, \"print\")\n            if (renderedTableVirtualDOM) {\n                newTableVirtualDOM = renderedTableVirtualDOM\n            }\n        }\n\n        const diff = this._dd.diff(tableVirtualDOM, newTableVirtualDOM)\n        this._dd.apply(tableDOM, diff)\n\n        // Open new window\n        const w = window.open()\n\n        // Append the table to the body\n        w.document.body.appendChild(tableDOM)\n\n        // Print\n        w.print()\n    }\n\n    /**\n     * Show a message in the table\n     */\n    setMessage(message: string) {\n        const activeHeadings = this.data.headings.filter((heading: headerCellType, index: number) => !this.columns.settings[index]?.hidden)\n        const colspan = activeHeadings.length || 1\n\n        this.options.classes.empty?.split(\" \").forEach(className => this.wrapperDOM.classList.add(className))\n\n        if (this._label) {\n            this._label.innerHTML = \"\"\n        }\n        this.totalPages = 0\n        this._renderPagers()\n\n        let newVirtualDOM : elementNodeType = {\n            nodeName: \"TABLE\",\n            attributes: this._tableAttributes,\n            childNodes: [\n                {\n                    nodeName: \"THEAD\",\n                    childNodes: [\n                        headingsToVirtualHeaderRowDOM(\n                            this.data.headings, this.columns.settings, this.columns._state, this.options, {})\n                    ]\n                },\n                {\n                    nodeName: \"TBODY\",\n                    childNodes: [\n                        {\n                            nodeName: \"TR\",\n                            childNodes: [\n                                {\n                                    nodeName: \"TD\",\n                                    attributes: {\n                                        class: this.options.classes.empty,\n                                        colspan: String(colspan)\n                                    },\n                                    childNodes: [\n                                        {\n                                            nodeName: \"#text\",\n                                            data: message\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n\n            ]\n        }\n\n        this._tableFooters.forEach(footer => newVirtualDOM.childNodes.push(footer))\n        this._tableCaptions.forEach(caption => newVirtualDOM.childNodes.push(caption))\n\n        if (!newVirtualDOM.attributes.class?.includes(this.options.classes.table)) {\n            newVirtualDOM.attributes.class = joinWithSpaces(newVirtualDOM.attributes.class, this.options.classes.table)\n        }\n\n        if (this.options.tableRender) {\n            const renderedTableVirtualDOM : (elementNodeType | void) = this.options.tableRender(this.data, newVirtualDOM, \"message\")\n            if (renderedTableVirtualDOM) {\n                newVirtualDOM = renderedTableVirtualDOM\n            }\n        }\n\n        const diff = this._dd.diff(this._virtualDOM, newVirtualDOM)\n        this._dd.apply(this.dom, diff)\n        this._virtualDOM = newVirtualDOM\n\n    }\n\n    /**\n     * Add custom event listener\n     */\n    on(event: string, callback: (...args: any[]) => void) {\n        this._events[event] = this._events[event] || []\n        this._events[event].push(callback)\n    }\n\n    /**\n     * Remove custom event listener\n     */\n    off(event: string, callback: (...args: any[]) => void) {\n        if (event in this._events === false) return\n        this._events[event].splice(this._events[event].indexOf(callback), 1)\n    }\n\n    /**\n     * Fire custom event\n     */\n    emit(event: string, ...args) {\n        if (event in this._events === false) return\n        for (let i = 0; i < this._events[event].length; i++) {\n            this._events[event][i](...args)\n        }\n    }\n}\n","import {\n    isObject\n} from \"../helpers\"\n\ninterface csvConvertUserOptions {\n  lineDelimiter?: string,\n  columnDelimiter?: string\n  removeDoubleQuotes?: boolean\n  data: string,\n  headings?: string[],\n}\n\n\n/**\n * Convert CSV data to fit the format used in the table.\n */\nexport const convertCSV = function(userOptions : csvConvertUserOptions) {\n    let obj\n    const defaults = {\n        lineDelimiter: \"\\n\",\n        columnDelimiter: \",\",\n        removeDoubleQuotes: false\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n\n    if (options.data.length) {\n        // Import CSV\n        obj = {\n            data: []\n        }\n\n        // Split the string into rows\n        const rows : string[] = options.data.split(options.lineDelimiter)\n\n        if (rows.length) {\n\n            if (options.headings) {\n                obj.headings = rows[0].split(options.columnDelimiter)\n                if (options.removeDoubleQuotes) {\n                    obj.headings = obj.headings.map((e: string) => e.trim().replace(/(^\"|\"$)/g, \"\"))\n                }\n                rows.shift()\n            }\n\n            rows.forEach((row: string, i: number) => {\n                obj.data[i] = []\n\n                // Split the rows into values\n                const values = row.split(options.columnDelimiter)\n\n                if (values.length) {\n                    values.forEach((value: string) => {\n                        if (options.removeDoubleQuotes) {\n                            value = value.trim().replace(/(^\"|\"$)/g, \"\")\n                        }\n                        obj.data[i].push(value)\n                    })\n                }\n            })\n        }\n\n        if (obj) {\n            return obj\n        }\n    }\n\n    return false\n}\n","import {\n    isJson,\n    isObject\n} from \"../helpers\"\n\ninterface jsonConvertUserOptions {\n  lineDelimiter?: string,\n  columnDelimiter?: string\n  removeDoubleQuotes?: boolean\n  data: string,\n  headings?: string[],\n}\n\n/**\n * Convert JSON data to fit the format used in the table.\n */\nexport const convertJSON = function(userOptions : jsonConvertUserOptions) {\n    let obj\n    const defaults = {\n        data: \"\"\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n\n    if (options.data.length || isObject(options.data)) {\n        // Import JSON\n        const json = isJson(options.data) ? JSON.parse(options.data) : false\n\n        // Valid JSON string\n        if (json) {\n            obj = {\n                headings: [],\n                data: []\n            }\n\n            json.forEach((data: { [key: string]: string | number | boolean | null | undefined}, i: number) => {\n                obj.data[i] = []\n                Object.entries(data).forEach(([column, value]) => {\n                    if (!obj.headings.includes(column)) {\n                        obj.headings.push(column)\n                    }\n                    obj.data[i].push(value)\n                })\n            })\n        } else {\n            console.warn(\"That's not valid JSON!\")\n        }\n\n        if (obj) {\n            return obj\n        }\n    }\n\n    return false\n}\n","import {\n    cellToText,\n    isObject\n} from \"../helpers\"\nimport {DataTable} from \"../datatable\"\nimport {\n    cellDataType,\n\n    dataRowType,\n    headerCellType\n} from \"../types\"\n\n/**\n * Export table to CSV\n */\n\ninterface csvUserOptions {\n  download?: boolean,\n  skipColumn?: number[],\n  lineDelimiter?: string,\n  columnDelimiter?: string,\n  selection?: number | number[],\n  filename?: string,\n}\n\n\nexport const exportCSV = function(dt: DataTable, userOptions: csvUserOptions = {}) {\n    if (!dt.hasHeadings && !dt.hasRows) return false\n\n    const defaults = {\n        download: true,\n        skipColumn: [],\n        lineDelimiter: \"\\n\",\n        columnDelimiter: \",\"\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n    const columnShown = (index: number) => !options.skipColumn.includes(index) && !dt.columns.settings[index]?.hidden\n    // Handle colspan in headers by adding empty columns\n    const headers = dt.data.headings\n        .filter((_heading: headerCellType, index: number) => columnShown(index))\n        .map((header: headerCellType) => {\n            const colspan = Number(header.attributes?.colspan || 1)\n            const headerText = header.text ?? header.data\n            return [headerText, ...Array(colspan - 1).fill(\"\")]\n        })\n        .flat()\n\n    // Track rowspan for cells: column index -> {remainingRows, cellText}\n    const rowspanCarryover: Map<number, {remainingRows: number, cellText: string}> = new Map()\n\n    // Selection or whole table\n    let selectedRows: dataRowType[]\n    if (options.selection) {\n        // Page number\n        if (Array.isArray(options.selection)) {\n            // Array of page numbers\n            selectedRows = []\n            for (let i = 0; i < options.selection.length; i++) {\n                selectedRows = selectedRows.concat(dt.pages[options.selection[i] - 1].map(row => row.row))\n            }\n\n        } else {\n            selectedRows = dt.pages[options.selection - 1].map(row => row.row)\n        }\n    } else {\n        selectedRows = dt.data.data\n    }\n\n    let rows : cellDataType[][] = []\n    // Include headings\n    rows[0] = headers\n    rows = rows.concat(selectedRows.map((row: dataRowType) => {\n        const csvRow: cellDataType[] = []\n        let csvColumnIndex = 0\n        let dataColumnIndex = 0\n\n        while (dataColumnIndex < row.cells.length) {\n            const cell = row.cells[dataColumnIndex]\n\n\n            if (columnShown(dataColumnIndex)) {\n\n\n                // Check if this column is occupied by a rowspan from a previous row\n                if (rowspanCarryover.has(csvColumnIndex)) {\n                    const carryover = rowspanCarryover.get(csvColumnIndex)\n                    // Use the carried over text\n                    csvRow.push(carryover.cellText)\n\n                    // Decrement remaining rows\n                    carryover.remainingRows--\n                    if (carryover.remainingRows <= 0) {\n                        rowspanCarryover.delete(csvColumnIndex)\n                    }\n\n                    csvColumnIndex++\n                    dataColumnIndex++\n                } else if (cell.attributes?.[\"data-rowspan-placeholder\"] === \"true\") {\n                // This is a placeholder, should have been handled by carryover\n                    dataColumnIndex++\n                } else if (cell.attributes?.[\"data-colspan-placeholder\"] === \"true\") {\n                // Colspan placeholder - add empty cell\n                    csvRow.push(\"\")\n                    csvColumnIndex++\n                    dataColumnIndex++\n                } else {\n                // Regular cell or cell with colspan/rowspan\n                    const colspan = Number(cell.attributes?.colspan || 1)\n                    const rowspan = Number(cell.attributes?.rowspan || 1)\n                    const cellText = cellToText(cell)\n\n                    // Add the cell and colspan placeholders\n                    csvRow.push(cellText)\n                    for (let i = 1; i < colspan; i++) {\n                        csvRow.push(\"\")\n                    }\n\n                    // Track rowspan for future rows\n                    if (rowspan > 1) {\n                        rowspanCarryover.set(csvColumnIndex, {\n                            remainingRows: rowspan - 1,\n                            cellText\n                        })\n                    }\n\n                    csvColumnIndex++\n                    dataColumnIndex++\n                }\n\n            } else {\n                // Skip hidden columns and placeholder cells\n                dataColumnIndex++\n            }\n        }\n\n        return csvRow\n    }))\n\n    // Only proceed if we have data\n    if (rows.length) {\n        let str = \"\"\n        rows.forEach(row => {\n            row.forEach((cell: cellDataType) => {\n                if (typeof cell === \"string\") {\n                    cell = cell.trim()\n                    cell = cell.replace(/\\s{2,}/g, \" \")\n                    cell = cell.replace(/\\n/g, \"  \")\n                    cell = cell.replace(/\"/g, \"\\\"\\\"\")\n                    //have to manually encode \"#\" as encodeURI leaves it as is.\n                    cell = cell.replace(/#/g, \"%23\")\n                    if (cell.includes(\",\")) {\n                        cell = `\"${cell}\"`\n                    }\n                }\n                str += cell + options.columnDelimiter\n            })\n            // Remove trailing column delimiter\n            str = str.trim().substring(0, str.length - 1)\n\n            // Apply line delimiter\n            str += options.lineDelimiter\n        })\n\n        // Remove trailing line delimiter\n        str = str.trim().substring(0, str.length - 1)\n\n        // Download\n        if (options.download) {\n            // Create a link to trigger the download\n            const link = document.createElement(\"a\")\n            link.href = encodeURI(`data:text/csv;charset=utf-8,${str}`)\n            link.download = `${options.filename || \"datatable_export\"}.csv`\n\n            // Append the link\n            document.body.appendChild(link)\n\n            // Trigger the download\n            link.click()\n\n            // Remove the link\n            document.body.removeChild(link)\n        }\n\n        return str\n    }\n\n    return false\n}\n","import {\n    cellToText,\n    isObject\n} from \"../helpers\"\nimport {DataTable} from \"../datatable\"\nimport {\n    cellDataType,\n    cellType,\n    dataRowType,\n    headerCellType\n} from \"../types\"\n/**\n * Export table to JSON\n */\n\n interface jsonUserOptions {\n   download?: boolean,\n   skipColumn?: number[],\n   replacer?: null | ((key, value) => string) | (string | number)[],\n   space?: number,\n   selection?: number | number[],\n   filename?: string,\n }\n\n\nexport const exportJSON = function(dt: DataTable, userOptions: jsonUserOptions = {}) {\n    if (!dt.hasHeadings && !dt.hasRows) return false\n\n\n    const defaults = {\n        download: true,\n        skipColumn: [],\n        replacer: null,\n        space: 4\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n\n    const columnShown = (index: number) => !options.skipColumn.includes(index) && !dt.columns.settings[index]?.hidden\n\n    // Selection or whole table\n    let selectedRows: dataRowType[]\n    if (options.selection) {\n        // Page number\n        if (Array.isArray(options.selection)) {\n            // Array of page numbers\n            selectedRows = []\n            for (let i = 0; i < options.selection.length; i++) {\n                selectedRows = selectedRows.concat(dt.pages[options.selection[i] - 1].map(row => row.row))\n            }\n        } else {\n            selectedRows = dt.pages[options.selection - 1].map(row => row.row)\n        }\n    } else {\n        selectedRows = dt.data.data\n    }\n\n    const rows: cellDataType[][] = selectedRows.map((row: dataRowType) => {\n        const shownCells = row.cells.filter((_cell: cellType, index: number) => columnShown(index))\n        return shownCells.map((cell: cellType) => cellToText(cell))\n    })\n\n    const headers = dt.data.headings.filter((_heading: headerCellType, index: number) => columnShown(index)).map((header: headerCellType) => header.text ?? String(header.data))\n\n    // Only proceed if we have data\n    if (rows.length) {\n        const arr: (void | { [key: string]: cellDataType})[] = []\n        rows.forEach((row: cellDataType[], x: number) => {\n            arr[x] = arr[x] || {}\n            row.forEach((cell: cellDataType, i: number) => {\n                arr[x][headers[i]] = cell\n            })\n        })\n\n        // Convert the array of objects to JSON string\n        const str = JSON.stringify(arr, options.replacer, options.space)\n\n        // Download\n        if (options.download) {\n            // Create a link to trigger the download\n\n            const blob = new Blob(\n                [str],\n                {\n                    type: \"data:application/json;charset=utf-8\"\n                }\n            )\n            const url = URL.createObjectURL(blob)\n\n\n            const link = document.createElement(\"a\")\n            link.href = url\n            link.download = `${options.filename || \"datatable_export\"}.json`\n\n            // Append the link\n            document.body.appendChild(link)\n\n            // Trigger the download\n            link.click()\n\n            // Remove the link\n            document.body.removeChild(link)\n            URL.revokeObjectURL(url)\n        }\n\n        return str\n    }\n\n    return false\n}\n","import {\n    cellToText,\n    isObject\n} from \"../helpers\"\nimport {DataTable} from \"../datatable\"\nimport {\n    cellDataType,\n    cellType,\n    dataRowType,\n    headerCellType\n} from \"../types\"\n/**\n * Export table to SQL\n */\n\n interface sqlUserOptions {\n   download?: boolean,\n   skipColumn?: number[],\n   tableName?: string,\n   selection?: number | number[],\n   filename?: string,\n }\n\nexport const exportSQL = function(dt: DataTable, userOptions : sqlUserOptions = {}) {\n    if (!dt.hasHeadings && !dt.hasRows) return false\n\n    const defaults = {\n        download: true,\n        skipColumn: [],\n        tableName: \"myTable\"\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n    const columnShown = (index: number) => !options.skipColumn.includes(index) && !dt.columns.settings[index]?.hidden\n\n    // Selection or whole table\n    let selectedRows: dataRowType[] = []\n    if (options.selection) {\n        // Page number\n        if (Array.isArray(options.selection)) {\n            // Array of page numbers\n            for (let i = 0; i < options.selection.length; i++) {\n                selectedRows = selectedRows.concat(dt.pages[options.selection[i] - 1].map(row => row.row))\n            }\n\n        } else {\n            selectedRows = dt.pages[options.selection - 1].map(row => row.row)\n        }\n    } else {\n        selectedRows = dt.data.data\n    }\n\n    const rows: cellDataType[][] = selectedRows.map((row: dataRowType) => {\n        const shownCells = row.cells.filter((_cell: cellType, index: number) => columnShown(index))\n        return shownCells.map((cell: cellType) => cellToText(cell))\n    })\n\n    const headers = dt.data.headings.filter((_heading: headerCellType, index: number) => columnShown(index)).map((header: headerCellType) => header.text ?? String(header.data))\n    // Only proceed if we have data\n    if (rows.length) {\n        // Begin INSERT statement\n        let str = `INSERT INTO \\`${options.tableName}\\` (`\n\n        // Convert table headings to column names\n        headers.forEach((header: string) => {\n            str += `\\`${header}\\`,`\n        })\n\n        // Remove trailing comma\n        str = str.trim().substring(0, str.length - 1)\n\n        // Begin VALUES\n        str += \") VALUES \"\n\n        // Iterate rows and convert cell data to column values\n\n        rows.forEach((row: cellDataType[]) => {\n            str += \"(\"\n            row.forEach((cell: cellDataType) => {\n                if (typeof cell === \"string\") {\n                    str += `\"${cell}\",`\n                } else {\n                    str += `${cell},`\n                }\n            })\n            // Remove trailing comma\n            str = str.trim().substring(0, str.length - 1)\n\n            // end VALUES\n            str += \"),\"\n\n        })\n\n        // Remove trailing comma\n        str = str.trim().substring(0, str.length - 1)\n\n        // Add trailing colon\n        str += \";\"\n\n        if (options.download) {\n            str = `data:application/sql;charset=utf-8,${str}`\n        }\n\n        // Download\n        if (options.download) {\n            // Create a link to trigger the download\n            const link = document.createElement(\"a\")\n            link.href = encodeURI(str)\n            link.download = `${options.filename || \"datatable_export\"}.sql`\n\n            // Append the link\n            document.body.appendChild(link)\n\n            // Trigger the download\n            link.click()\n\n            // Remove the link\n            document.body.removeChild(link)\n        }\n\n        return str\n    }\n\n    return false\n}\n","import {\n    cellToText,\n    isObject\n} from \"../helpers\"\nimport {DataTable} from \"../datatable\"\nimport {\n    cellDataType,\n    cellType,\n    dataRowType,\n    headerCellType\n} from \"../types\"\n/**\n * Export table to TXT\n */\n interface txtUserOptions {\n   download?: boolean,\n   skipColumn?: number[],\n   lineDelimiter?: string,\n   columnDelimiter?: string,\n   selection?: number | number[],\n   filename?: string,\n }\n\n\nexport const exportTXT = function(dt: DataTable, userOptions : txtUserOptions = {}) {\n    if (!dt.hasHeadings && !dt.hasRows) return false\n\n    const defaults = {\n        download: true,\n        skipColumn: [],\n        lineDelimiter: \"\\n\",\n        columnDelimiter: \",\"\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n\n    const columnShown = (index: number) => !options.skipColumn.includes(index) && !dt.columns.settings[index]?.hidden\n\n    const headers = dt.data.headings.filter((_heading: headerCellType, index: number) => columnShown(index)).map((header: headerCellType) => header.text ?? header.data)\n\n    // Selection or whole table\n    let selectedRows: dataRowType[]\n    if (options.selection) {\n        // Page number\n        if (Array.isArray(options.selection)) {\n            // Array of page numbers\n            selectedRows = []\n            for (let i = 0; i < options.selection.length; i++) {\n                selectedRows = selectedRows.concat(dt.pages[options.selection[i] - 1].map(row => row.row))\n            }\n        } else {\n            selectedRows = dt.pages[options.selection - 1].map(row => row.row)\n        }\n    } else {\n        selectedRows = dt.data.data\n    }\n\n    let rows : cellDataType[][] = []\n    // Include headings\n    rows[0] = headers\n    rows = rows.concat(selectedRows.map((row: dataRowType) => {\n        const shownCells = row.cells.filter((_cell: cellType, index: number) => columnShown(index))\n        return shownCells.map((cell: cellType) => cellToText(cell))\n    }))\n\n    // Only proceed if we have data\n    if (rows.length) {\n        let str = \"\"\n\n        rows.forEach(row => {\n            row.forEach((cell: cellDataType) => {\n                if (typeof cell === \"string\") {\n                    cell = cell.trim()\n                    cell = cell.replace(/\\s{2,}/g, \" \")\n                    cell = cell.replace(/\\n/g, \"  \")\n                    cell = cell.replace(/\"/g, \"\\\"\\\"\")\n                    //have to manually encode \"#\" as encodeURI leaves it as is.\n                    cell = cell.replace(/#/g, \"%23\")\n                    if (cell.includes(\",\")) {\n                        cell = `\"${cell}\"`\n                    }\n                }\n                str += cell + options.columnDelimiter\n            })\n            // Remove trailing column delimiter\n            str = str.trim().substring(0, str.length - 1)\n\n            // Apply line delimiter\n            str += options.lineDelimiter\n\n        })\n\n        // Remove trailing line delimiter\n        str = str.trim().substring(0, str.length - 1)\n\n        if (options.download) {\n            str = `data:text/csv;charset=utf-8,${str}`\n        }\n        // Download\n        if (options.download) {\n            // Create a link to trigger the download\n            const link = document.createElement(\"a\")\n            link.href = encodeURI(str)\n            link.download = `${options.filename || \"datatable_export\"}.txt`\n\n            // Append the link\n            document.body.appendChild(link)\n\n            // Trigger the download\n            link.click()\n\n            // Remove the link\n            document.body.removeChild(link)\n        }\n\n        return str\n    }\n\n    return false\n}\n","/**\n* Default config\n* @type {Object}\n*/\nimport {Editor} from \"./editor\"\n\nexport const defaultConfig = {\n    classes: {\n        row: \"datatable-editor-row\",\n        form: \"datatable-editor-form\",\n        item: \"datatable-editor-item\",\n        menu: \"datatable-editor-menu\",\n        save: \"datatable-editor-save\",\n        block: \"datatable-editor-block\",\n        cancel: \"datatable-editor-cancel\",\n        close: \"datatable-editor-close\",\n        inner: \"datatable-editor-inner\",\n        input: \"datatable-editor-input\",\n        label: \"datatable-editor-label\",\n        modal: \"datatable-editor-modal\",\n        action: \"datatable-editor-action\",\n        header: \"datatable-editor-header\",\n        wrapper: \"datatable-editor-wrapper\",\n        editable: \"datatable-editor-editable\",\n        container: \"datatable-editor-container\",\n        separator: \"datatable-editor-separator\"\n    },\n\n    labels: {\n        closeX: \"x\",\n        editCell: \"Edit Cell\",\n        editRow: \"Edit Row\",\n        removeRow: \"Remove Row\",\n        reallyRemove: \"Are you sure?\",\n        reallyCancel: \"Do you really want to cancel?\",\n        save: \"Save\",\n        cancel: \"Cancel\"\n    },\n\n    cancelModal: editor => confirm(editor.options.labels.reallyCancel),\n\n    // edit inline instead of using a modal lay-over for editing content\n    inline: true,\n\n    // include hidden columns in the editor\n    hiddenColumns: false,\n\n    // enable the context menu\n    contextMenu: true,\n\n    // event to start editing\n    clickEvent: \"dblclick\",\n\n    // indexes of columns not to be edited\n    excludeColumns: [],\n\n    // set the context menu items\n    menuItems: [\n        {\n            text: (editor: Editor) => editor.options.labels.editCell,\n            action: (editor: Editor, _event: Event) => {\n                if (!(editor.event.target instanceof Element)) {\n                    return\n                }\n                const cell = editor.event.target.closest(\"td\")\n                return editor.editCell(cell)\n            }\n        },\n        {\n            text: (editor: Editor) => editor.options.labels.editRow,\n            action: (editor: Editor, _event: Event) => {\n                if (!(editor.event.target instanceof Element)) {\n                    return\n                }\n                const row = editor.event.target.closest(\"tr\")\n                return editor.editRow(row)\n            }\n        },\n        {\n            separator: true\n        },\n        {\n            text: (editor: Editor) => editor.options.labels.removeRow,\n            action: (editor: Editor, _event: Event) => {\n                if (!(editor.event.target instanceof Element)) {\n                    return\n                }\n                if (confirm(editor.options.labels.reallyRemove)) {\n                    const row = editor.event.target.closest(\"tr\")\n                    editor.removeRow(row)\n                }\n            }\n        }\n    ]\n}\n","import {\n    classNamesToSelector,\n    cellToText,\n    columnToVisibleIndex,\n    createElement,\n    debounce,\n    escapeText,\n    visibleToColumnIndex\n} from \"../helpers\"\nimport {\n    cellType,\n    rowRenderType,\n    elementNodeType\n} from \"../types\"\nimport {DataTable} from \"../datatable\"\nimport {parseDate} from \"../date\"\n\nimport {\n    defaultConfig\n} from \"./config\"\n\nimport {menuItemType, dataType, EditorOptions} from \"./types\"\n\n\n/**\n * Main lib\n * @param {Object} dataTable Target dataTable\n * @param {Object} options User config\n */\nexport class Editor {\n    menuOpen: boolean\n\n    containerDOM: HTMLElement\n\n    data: dataType\n\n    disabled: boolean\n\n    dt: DataTable\n\n    editing: boolean\n\n    editingCell: boolean\n\n    editingRow: boolean\n\n    event: Event\n\n    events: { [key: string]: () => void}\n\n    initialized: boolean\n\n    limits: {x: number, y: number}\n\n    menuDOM: HTMLElement\n\n    modalDOM: HTMLElement | false\n\n    options: EditorOptions\n\n    originalRowRender: rowRenderType | false\n\n    rect: {width: number, height: number}\n\n    wrapperDOM: HTMLElement\n\n    constructor(dataTable: DataTable, options = {}) {\n        this.dt = dataTable\n        this.options = {\n            ...defaultConfig,\n            ...options\n        }\n    }\n\n    /**\n     * Init instance\n     * @return {Void}\n     */\n    init() {\n        if (this.initialized) {\n            return\n        }\n        this.options.classes.editable?.split(\" \").forEach(className => this.dt.wrapperDOM.classList.add(className))\n        if (this.options.inline) {\n            this.originalRowRender = this.dt.options.rowRender\n            this.dt.options.rowRender = (row, tr, index) => {\n                let newTr = this.rowRender(row, tr, index)\n                if (this.originalRowRender) {\n                    newTr = this.originalRowRender(row, newTr, index)\n                }\n                return newTr\n            }\n        }\n        if (this.options.contextMenu) {\n            this.containerDOM = createElement(\"div\", {\n                id: this.options.classes.container\n            })\n            this.wrapperDOM = createElement(\"div\", {\n                class: this.options.classes.wrapper\n            })\n            this.menuDOM = createElement(\"ul\", {\n                class: this.options.classes.menu\n            })\n            if (this.options.menuItems && this.options.menuItems.length) {\n                this.options.menuItems.forEach((item: menuItemType) => {\n                    const li = createElement(\"li\", {\n                        class: item.separator ? this.options.classes.separator : this.options.classes.item\n                    })\n                    if (!item.separator) {\n                        const a = createElement(\"a\", {\n                            class: this.options.classes.action,\n                            href: item.url || \"#\",\n                            html: typeof item.text === \"function\" ? item.text(this) : item.text\n                        })\n                        li.appendChild(a)\n                        if (item.action && typeof item.action === \"function\") {\n                            a.addEventListener(\"click\", (event: Event) => {\n                                event.preventDefault()\n                                item.action(this, event)\n                            })\n                        }\n                    }\n                    this.menuDOM.appendChild(li)\n                })\n            }\n            this.wrapperDOM.appendChild(this.menuDOM)\n            this.containerDOM.appendChild(this.wrapperDOM)\n            this.updateMenu()\n        }\n        this.data = {}\n        this.menuOpen = false\n        this.editing = false\n        this.editingRow = false\n        this.editingCell = false\n        this.bindEvents()\n        setTimeout(() => {\n            this.initialized = true\n            this.dt.emit(\"editable.init\")\n        }, 10)\n    }\n\n    /**\n     * Bind events to DOM\n     * @return {Void}\n     */\n    bindEvents() {\n        this.events = {\n            keydown: this.keydown.bind(this),\n            click: this.click.bind(this)\n        }\n        // listen for click / double-click\n        this.dt.dom.addEventListener(this.options.clickEvent, this.events.click)\n        // listen for right-click\n        document.addEventListener(\"keydown\", this.events.keydown)\n\n        if (this.options.contextMenu) {\n            this.events.context = this.context.bind(this)\n            this.events.updateMenu = this.updateMenu.bind(this)\n            this.events.dismissMenu = this.dismissMenu.bind(this)\n            this.events.reset = debounce(() => this.events.updateMenu(), 50)\n\n            // listen for right-click\n            this.dt.dom.addEventListener(\"contextmenu\", this.events.context)\n            // listen for click everywhere except the menu\n            document.addEventListener(\"click\", this.events.dismissMenu)\n            // Reset contextmenu on browser window changes\n            window.addEventListener(\"resize\", this.events.reset)\n            window.addEventListener(\"scroll\", this.events.reset)\n        }\n    }\n\n    /**\n     * contextmenu listener\n     * @param  {Object} event Event\n     * @return {Void}\n     */\n    context(event: MouseEvent) {\n        const target = event.target\n        if (!(target instanceof Element)) {\n            return\n        }\n        this.event = event\n\n        const cell = target.closest(\"tbody td\")\n        if (!this.disabled && cell) {\n            event.preventDefault()\n            // get the mouse position\n            let x = event.pageX\n            let y = event.pageY\n            // check if we're near the right edge of window\n            if (x > this.limits.x) {\n                x -= this.rect.width\n            }\n            // check if we're near the bottom edge of window\n            if (y > this.limits.y) {\n                y -= this.rect.height\n            }\n            this.wrapperDOM.style.top = `${y}px`\n            this.wrapperDOM.style.left = `${x}px`\n            this.openMenu()\n            this.updateMenu()\n        }\n    }\n\n    /**\n     * dblclick listener\n     * @param  {Object} event Event\n     * @return {Void}\n     */\n    click(event: MouseEvent) {\n        const target = event.target\n        if (!(target instanceof Element)) {\n            return\n        }\n        if (this.editing && this.data && this.editingCell) {\n            const inputSelector = classNamesToSelector(this.options.classes.input)\n            const input = this.modalDOM ?\n                (this.modalDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement) :\n                (this.dt.wrapperDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement)\n            this.saveCell(input.value)\n        } else if (!this.editing) {\n            const cell = target.closest(\"tbody td\") as HTMLTableCellElement\n            if (cell) {\n                this.editCell(cell)\n                event.preventDefault()\n            }\n        }\n    }\n\n    /**\n     * keydown listener\n     * @param  {Object} event Event\n     * @return {Void}\n     */\n    keydown(event: KeyboardEvent) {\n        const inputSelector = classNamesToSelector(this.options.classes.input)\n        if (this.modalDOM) {\n            if (event.key === \"Escape\") { // close button\n                if (this.options.cancelModal(this)) {\n                    this.closeModal()\n                }\n            } else if (event.key === \"Enter\") { // save button\n                // Save\n                if (this.editingCell) {\n                    const input = (this.modalDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement)\n                    this.saveCell(input.value)\n                } else {\n                    const values = (Array.from(this.modalDOM.querySelectorAll(`input${inputSelector}[type=text]`)) as HTMLInputElement[]).map(input => input.value.trim())\n                    this.saveRow(values, this.data.row)\n                }\n            }\n        } else if (this.editing && this.data) {\n            if (event.key === \"Enter\") {\n                // Enter key saves\n                if (this.editingCell) {\n                    const input = (this.dt.wrapperDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement)\n                    this.saveCell(input.value)\n                } else if (this.editingRow) {\n                    const values = (Array.from(this.dt.wrapperDOM.querySelectorAll(`input${inputSelector}[type=text]`)) as HTMLInputElement[]).map(input => input.value.trim())\n                    this.saveRow(values, this.data.row)\n                }\n            } else if (event.key === \"Escape\") {\n                // Escape key reverts\n                if (this.editingCell) {\n                    this.saveCell(this.data.content)\n                } else if (this.editingRow) {\n                    this.saveRow(null, this.data.row)\n                }\n            }\n        }\n    }\n\n    /**\n     * Edit cell\n     * @param  {Object} td    The HTMLTableCellElement\n     * @return {Void}\n     */\n    editCell(td: HTMLTableCellElement) {\n        const columnIndex = visibleToColumnIndex(td.cellIndex, this.dt.columns.settings)\n        if (this.options.excludeColumns.includes(columnIndex)) {\n            this.closeMenu()\n            return\n        }\n        const rowIndex = parseInt(td.parentElement.dataset.index, 10)\n        const row = this.dt.data.data[rowIndex]\n        const cell = row.cells[columnIndex]\n\n        this.data = {\n            cell,\n            rowIndex,\n            columnIndex,\n            content: cellToText(cell)\n        }\n        this.editing = true\n        this.editingCell = true\n        if (this.options.inline) {\n            this.dt.update()\n        } else {\n            this.editCellModal()\n        }\n        this.closeMenu()\n    }\n\n    editCellModal() {\n        const cell = this.data.cell\n        const columnIndex = this.data.columnIndex\n        const label = this.dt.data.headings[columnIndex].text || String(this.dt.data.headings[columnIndex].data)\n        const template = [\n            `<div class='${this.options.classes.inner}'>`,\n            `<div class='${this.options.classes.header}'>`,\n            `<h4>${this.options.labels.editCell}</h4>`,\n            `<button class='${this.options.classes.close}' type='button' data-editor-cancel>${this.options.labels.closeX}</button>`,\n            \" </div>\",\n            `<div class='${this.options.classes.block}'>`,\n            `<form class='${this.options.classes.form}'>`,\n            `<div class='${this.options.classes.row}'>`,\n            `<label class='${this.options.classes.label}'>${escapeText(label)}</label>`,\n            `<input class='${this.options.classes.input}' value='${escapeText(cellToText(cell))}' type='text'>`,\n            \"</div>\",\n            `<div class='${this.options.classes.row}'>`,\n            `<button class='${this.options.classes.cancel}' type='button' data-editor-cancel>${this.options.labels.cancel}</button>`,\n            `<button class='${this.options.classes.save}' type='button' data-editor-save>${this.options.labels.save}</button>`,\n            \"</div>\",\n            \"</form>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n        const modalDOM = createElement(\"div\", {\n            class: this.options.classes.modal,\n            html: template\n        })\n        this.modalDOM = modalDOM\n        this.openModal()\n        const inputSelector = classNamesToSelector(this.options.classes.input)\n        const input = (modalDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement)\n        input.focus()\n        input.selectionStart = input.selectionEnd = input.value.length\n        // Close / save\n        modalDOM.addEventListener(\"click\", (event: Event) => {\n            const target = event.target\n            if (!(target instanceof Element)) {\n                return\n            }\n            if (target.hasAttribute(\"data-editor-cancel\")) { // cancel button\n                event.preventDefault()\n                if (this.options.cancelModal(this)) {\n                    this.closeModal()\n                }\n            } else if (target.hasAttribute(\"data-editor-save\")) { // save button\n                event.preventDefault()\n                // Save\n                this.saveCell(input.value)\n            }\n        })\n    }\n\n    /**\n     * Save edited cell\n     * @param  {Object} row    The HTMLTableCellElement\n     * @param  {String} value   Cell content\n     * @return {Void}\n     */\n    saveCell(value: string) {\n        const oldData = this.data.content\n        // Get the type of that column\n        const type = this.dt.columns.settings[this.data.columnIndex].type || this.dt.options.type\n        const stringValue = value.trim()\n        let cell\n        if (type === \"number\") {\n            cell = {data: parseFloat(stringValue)}\n        } else if (type === \"boolean\") {\n            if ([\"\", \"false\", \"0\"].includes(stringValue)) {\n                cell = {data: false,\n                    text: \"false\",\n                    order: 0}\n            } else {\n                cell = {data: true,\n                    text: \"true\",\n                    order: 1}\n            }\n        } else if (type === \"html\") {\n            cell = {data: [\n                {nodeName: \"#text\",\n                    data: value}\n            ],\n            text: value,\n            order: value}\n        } else if (type === \"string\") {\n            cell = {data: value}\n        } else if (type === \"date\") {\n            const format = this.dt.columns.settings[this.data.columnIndex].format || this.dt.options.format\n            cell = {data: value,\n                order: parseDate(String(value), format)}\n        } else {\n            cell = {data: value}\n        }\n        // Set the cell content\n        const row = this.dt.data.data[this.data.rowIndex]\n        row.cells[this.data.columnIndex] = cell\n        this.closeModal()\n        const rowIndex = this.data.rowIndex\n        const columnIndex = this.data.columnIndex\n        this.data = {}\n        this.dt.update(true)\n        this.editing = false\n        this.editingCell = false\n        this.dt.emit(\"editable.save.cell\", value, oldData, rowIndex, columnIndex)\n    }\n\n    /**\n     * Edit row\n     * @param  {Object} row    The HTMLTableRowElement\n     * @return {Void}\n     */\n    editRow(tr: HTMLElement) {\n        if (!tr || tr.nodeName !== \"TR\" || this.editing) return\n        const rowIndex = parseInt(tr.dataset.index, 10)\n        const row = this.dt.data.data[rowIndex]\n        this.data = {\n            row: row.cells,\n            rowIndex\n        }\n        this.editing = true\n        this.editingRow = true\n        if (this.options.inline) {\n            this.dt.update()\n        } else {\n            this.editRowModal()\n        }\n        this.closeMenu()\n    }\n\n    editRowModal() {\n        const row = this.data.row\n\n        const template = [\n            `<div class='${this.options.classes.inner}'>`,\n            `<div class='${this.options.classes.header}'>`,\n            `<h4>${this.options.labels.editRow}</h4>`,\n            `<button class='${this.options.classes.close}' type='button' data-editor-cancel>${this.options.labels.closeX}</button>`,\n            \" </div>\",\n            `<div class='${this.options.classes.block}'>`,\n            `<form class='${this.options.classes.form}'>`,\n            `<div class='${this.options.classes.row}'>`,\n            `<button class='${this.options.classes.cancel}' type='button' data-editor-cancel>${this.options.labels.cancel}</button>`,\n            `<button class='${this.options.classes.save}' type='button' data-editor-save>${this.options.labels.save}</button>`,\n            \"</div>\",\n            \"</form>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n        const modalDOM = createElement(\"div\", {\n            class: this.options.classes.modal,\n            html: template\n        })\n        const inner = modalDOM.firstElementChild\n        if (!inner) {\n            return\n        }\n        const form = inner.lastElementChild?.firstElementChild\n        if (!form) {\n            return\n        }\n        // Add the inputs for each cell\n        row.forEach((cell: cellType, i: number) => {\n            const columnSettings = this.dt.columns.settings[i]\n            if ((!columnSettings.hidden || (columnSettings.hidden && this.options.hiddenColumns)) && !this.options.excludeColumns.includes(i)) {\n                const label = this.dt.data.headings[i].text || String(this.dt.data.headings[i].data)\n                form.insertBefore(createElement(\"div\", {\n                    class: this.options.classes.row,\n                    html: [\n                        `<div class='${this.options.classes.row}'>`,\n                        `<label class='${this.options.classes.label}'>${escapeText(label)}</label>`,\n                        `<input class='${this.options.classes.input}' value='${escapeText(cellToText(cell))}' type='text'>`,\n                        \"</div>\"\n                    ].join(\"\")\n                }), form.lastElementChild)\n            }\n        })\n        this.modalDOM = modalDOM\n        this.openModal()\n        // Grab the inputs\n        const inputSelector = classNamesToSelector(this.options.classes.input)\n        const inputs = Array.from(form.querySelectorAll(`input${inputSelector}[type=text]`)) as HTMLInputElement[]\n\n        // Close / save\n        modalDOM.addEventListener(\"click\", (event: MouseEvent) => {\n            const target = event.target\n            if (!(target instanceof Element)) {\n                return\n            }\n            if (target.hasAttribute(\"data-editor-cancel\")) { // cancel button\n                if (this.options.cancelModal(this)) {\n                    this.closeModal()\n                }\n            } else if (target.hasAttribute(\"data-editor-save\")) { // save button\n                // Save\n                const values = inputs.map((input: HTMLInputElement) => input.value.trim())\n                this.saveRow(values, this.data.row)\n            }\n        })\n    }\n\n    /**\n     * Save edited row\n     * @param  {Object} row    The HTMLTableRowElement\n     * @param  {Array} data   Cell data\n     * @return {Void}\n     */\n    saveRow(data: string[], row: cellType[]) {\n        // Store the old data for the emitter\n        const oldData = row.map((cell: cellType) => cellToText(cell))\n        const updatedRow = this.dt.data.data[this.data.rowIndex]\n\n        if (data) {\n            let valueCounter = 0\n            updatedRow.cells = row.map((oldItem, colIndex) => {\n                if (this.options.excludeColumns.includes(colIndex) || this.dt.columns.settings[colIndex].hidden) {\n                    return oldItem\n                }\n                const type = this.dt.columns.settings[colIndex].type || this.dt.options.type\n                const value = data[valueCounter++]\n                let cell\n                if (type === \"number\") {\n                    cell = {data: parseFloat(value)}\n                } else if (type === \"boolean\") {\n                    if ([\"\", \"false\", \"0\"].includes(value)) {\n                        cell = {data: false,\n                            text: \"false\",\n                            order: 0}\n                    } else {\n                        cell = {data: true,\n                            text: \"true\",\n                            order: 1}\n                    }\n                } else if (type === \"html\") {\n                    cell = {\n                        data: [\n                            {nodeName: \"#text\",\n                                data: value}\n                        ],\n                        text: value,\n                        order: value\n                    }\n                } else if (type === \"string\") {\n                    cell = {data: value}\n                } else if (type === \"date\") {\n                    const format = this.dt.columns.settings[colIndex].format || this.dt.options.format\n                    cell = {data: value,\n                        order: parseDate(String(value), format)}\n                } else {\n                    cell = {data: value}\n                }\n                return cell\n\n            })\n        }\n\n        const newData = updatedRow.cells.map(cell => cellToText(cell))\n\n        this.data = {}\n        this.dt.update(true)\n        this.closeModal()\n        this.editing = false\n        this.dt.emit(\"editable.save.row\", newData, oldData, row)\n    }\n\n    /**\n     * Open the row editor modal\n     * @return {Void}\n     */\n    openModal() {\n        if (this.modalDOM) {\n            document.body.appendChild(this.modalDOM)\n        }\n    }\n\n    /**\n     * Close the row editor modal\n     * @return {Void}\n     */\n    closeModal() {\n        if (this.editing && this.modalDOM) {\n            document.body.removeChild(this.modalDOM)\n            this.modalDOM = this.editing = this.editingRow = this.editingCell = false\n        }\n    }\n\n    /**\n     * Remove a row\n     * @param  {Object} tr The HTMLTableRowElement\n     * @return {Void}\n     */\n    removeRow(tr: HTMLElement) {\n        if (!tr || tr.nodeName !== \"TR\" || this.editing) return\n        const index = parseInt(tr.dataset.index, 10)\n        this.dt.rows.remove(index)\n        this.closeMenu()\n    }\n\n    /**\n     * Update context menu position\n     * @return {Void}\n     */\n    updateMenu() {\n        const scrollX = window.scrollX || window.pageXOffset\n        const scrollY = window.scrollY || window.pageYOffset\n        this.rect = this.wrapperDOM.getBoundingClientRect()\n        this.limits = {\n            x: window.innerWidth + scrollX - this.rect.width,\n            y: window.innerHeight + scrollY - this.rect.height\n        }\n    }\n\n    /**\n     * Dismiss the context menu\n     * @param  {Object} event Event\n     * @return {Void}\n     */\n    dismissMenu(event: Event) {\n        const target = event.target\n        if (!(target instanceof Element) || this.wrapperDOM.contains(target)) {\n            return\n        }\n        let valid = true\n        if (this.editing) {\n            const inputSelector = classNamesToSelector(this.options.classes.input)\n            valid = !(target.matches(`input${inputSelector}[type=text]`))\n        }\n        if (valid) {\n            this.closeMenu()\n        }\n    }\n\n    /**\n     * Open the context menu\n     * @return {Void}\n     */\n    openMenu() {\n        if (this.editing && this.data && this.editingCell) {\n            const inputSelector = classNamesToSelector(this.options.classes.input)\n            const input = this.modalDOM ?\n                (this.modalDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement) :\n                (this.dt.wrapperDOM.querySelector(`input${inputSelector}[type=text]`) as HTMLInputElement)\n\n            this.saveCell(input.value)\n        }\n        document.body.appendChild(this.containerDOM)\n        this.menuOpen = true\n        this.dt.emit(\"editable.context.open\")\n    }\n\n    /**\n     * Close the context menu\n     * @return {Void}\n     */\n    closeMenu() {\n        if (this.menuOpen) {\n            this.menuOpen = false\n            document.body.removeChild(this.containerDOM)\n            this.dt.emit(\"editable.context.close\")\n        }\n    }\n\n    /**\n     * Destroy the instance\n     * @return {Void}\n     */\n    destroy() {\n        this.dt.dom.removeEventListener(this.options.clickEvent, this.events.click)\n        this.dt.dom.removeEventListener(\"contextmenu\", this.events.context)\n        document.removeEventListener(\"click\", this.events.dismissMenu)\n        document.removeEventListener(\"keydown\", this.events.keydown)\n        window.removeEventListener(\"resize\", this.events.reset)\n        window.removeEventListener(\"scroll\", this.events.reset)\n        if (document.body.contains(this.containerDOM)) {\n            document.body.removeChild(this.containerDOM)\n        }\n        if (this.options.inline) {\n            this.dt.options.rowRender = this.originalRowRender\n        }\n        this.initialized = false\n    }\n\n    rowRender(row, tr, index) {\n        if (!this.data || this.data.rowIndex !== index) {\n            return tr\n        }\n\n        if (this.editingCell) {\n            // cell editing\n            const cell = tr.childNodes[columnToVisibleIndex(this.data.columnIndex, this.dt.columns.settings)]\n            cell.childNodes = [\n                {\n                    nodeName: \"INPUT\",\n                    attributes: {\n                        type: \"text\",\n                        value: this.data.content,\n                        class: this.options.classes.input\n                    }\n                }\n            ]\n        } else {\n            // row editing\n\n            // Add the inputs for each cell\n            tr.childNodes.forEach((cell: elementNodeType, i: number) => {\n                const index = visibleToColumnIndex(i, this.dt.columns.settings)\n                const dataCell = row[index]\n                if (!this.options.excludeColumns.includes(index)) {\n                    const cell = tr.childNodes[i]\n                    cell.childNodes = [\n                        {\n                            nodeName: \"INPUT\",\n                            attributes: {\n                                type: \"text\",\n                                value: escapeText(dataCell.text || String(dataCell.data) || \"\"),\n                                class: this.options.classes.input\n                            }\n                        }\n                    ]\n                }\n            })\n\n        }\n        return tr\n\n    }\n}\n\nexport const makeEditable = function(dataTable: DataTable, options = {}) {\n    const editor = new Editor(dataTable, options)\n    if (dataTable.initialized) {\n        editor.init()\n    } else {\n        dataTable.on(\"datatable.init\", () => editor.init())\n    }\n\n    return editor\n}\n","/**\n* Default config\n* @type {Object}\n*/\n//import {ColumnFilter} from \"./column_filter\"\n\nexport const defaultConfig = {\n    classes: {\n        button: \"datatable-column-filter-button\",\n        menu: \"datatable-column-filter-menu\",\n        container: \"datatable-column-filter-container\",\n        wrapper: \"datatable-column-filter-wrapper\"\n    },\n    labels: {\n        button: \"Filter columns within the table\" // The filter button title\n    },\n    hiddenColumns: []\n}\n","import {DataTable} from \"../datatable\"\nimport {classNamesToSelector, createElement} from \"../helpers\"\n\nimport {\n    defaultConfig\n} from \"./config\"\n\nimport {ColumnFilterOptions} from \"./types\"\n\nclass ColumnFilter {\n\n    addedButtonDOM: boolean\n\n    menuOpen: boolean\n\n    buttonDOM: HTMLElement\n\n    dt: DataTable\n\n    events: { [key: string]: () => void}\n\n    initialized: boolean\n\n    options: ColumnFilterOptions\n\n    menuDOM: HTMLElement\n\n    containerDOM: HTMLElement\n\n    wrapperDOM: HTMLElement\n\n    limits: {x: number, y: number}\n\n    rect: {width: number, height: number}\n\n    event: Event\n\n    constructor(dataTable: DataTable, options = {}) {\n        this.dt = dataTable\n        this.options = {\n            ...defaultConfig,\n            ...options\n        }\n    }\n\n    init() {\n\n        if (this.initialized) {\n            return\n        }\n\n        const buttonSelector = classNamesToSelector(this.options.classes.button)\n        let buttonDOM : (HTMLElement | null) = this.dt.wrapperDOM.querySelector(buttonSelector)\n        if (!buttonDOM) {\n            buttonDOM = createElement(\n                \"button\",\n                {\n                    class: this.options.classes.button,\n                    html: \"▦\"\n                }\n            )\n            // filter button not part of template (could be default template. We add it to search.)\n            const searchSelector = classNamesToSelector(this.dt.options.classes.search)\n            const searchWrapper = this.dt.wrapperDOM.querySelector(searchSelector)\n            if (searchWrapper) {\n                searchWrapper.appendChild(buttonDOM)\n            } else {\n                this.dt.wrapperDOM.appendChild(buttonDOM)\n            }\n            this.addedButtonDOM = true\n        }\n        this.buttonDOM = buttonDOM\n\n\n        this.containerDOM = createElement(\"div\", {\n            id: this.options.classes.container\n        })\n        this.wrapperDOM = createElement(\"div\", {\n            class: this.options.classes.wrapper\n        })\n        this.menuDOM = createElement(\"ul\", {\n            class: this.options.classes.menu,\n            html: this.dt.data.headings.map(\n                (heading, index) => {\n                    const settings = this.dt.columns.settings[index]\n                    if (this.options.hiddenColumns.includes(index)) {\n                        return \"\"\n                    }\n                    return `<li data-column=\"${index}\">\n                        <input type=\"checkbox\" value=\"${heading.text || heading.data}\" ${settings.hidden ? \"\" : \"checked=''\"}>\n                        <label>\n                            ${heading.text || heading.data}\n                        </label>\n                    </li>`\n                }\n            ).join(\"\")\n        })\n        this.wrapperDOM.appendChild(this.menuDOM)\n        this.containerDOM.appendChild(this.wrapperDOM)\n        this._measureSpace()\n\n        this._bind()\n\n        this.initialized = true\n\n    }\n\n    dismiss() {\n        if (this.addedButtonDOM && this.buttonDOM.parentElement) {\n            this.buttonDOM.parentElement.removeChild(this.buttonDOM)\n        }\n        document.removeEventListener(\"click\", this.events.click)\n    }\n\n    _bind() {\n        this.events = {\n            click: this._click.bind(this)\n        }\n        document.addEventListener(\"click\", this.events.click)\n    }\n\n    _openMenu() {\n        document.body.appendChild(this.containerDOM)\n        this._measureSpace()\n        this.menuOpen = true\n        this.dt.emit(\"columnFilter.menu.open\")\n    }\n\n    _closeMenu() {\n        if (this.menuOpen) {\n            this.menuOpen = false\n            document.body.removeChild(this.containerDOM)\n            this.dt.emit(\"columnFilter.menu.close\")\n        }\n    }\n\n    _measureSpace() {\n        const scrollX = window.scrollX || window.pageXOffset\n        const scrollY = window.scrollY || window.pageYOffset\n        this.rect = this.wrapperDOM.getBoundingClientRect()\n        this.limits = {\n            x: window.innerWidth + scrollX - this.rect.width,\n            y: window.innerHeight + scrollY - this.rect.height\n        }\n    }\n\n    _click(event: MouseEvent) {\n        const target = event.target\n        if (!(target instanceof Element)) {\n            return\n        }\n        this.event = event\n\n        if (this.buttonDOM.contains(target)) {\n            event.preventDefault()\n            if (this.menuOpen) {\n                this._closeMenu()\n                return\n            }\n            this._openMenu()\n            // get the mouse position\n            let x = event.pageX\n            let y = event.pageY\n            // check if we're near the right edge of window\n            if (x > this.limits.x) {\n                x -= this.rect.width\n            }\n            // check if we're near the bottom edge of window\n            if (y > this.limits.y) {\n                y -= this.rect.height\n            }\n            this.wrapperDOM.style.top = `${y}px`\n            this.wrapperDOM.style.left = `${x}px`\n        } else if (this.menuDOM.contains(target)) {\n            const menuSelector = classNamesToSelector(this.options.classes.menu)\n            const li = target.closest(`${menuSelector} > li`) as HTMLElement\n            if (!li) {\n                return\n            }\n            const checkbox = li.querySelector(\"input[type=checkbox]\") as HTMLInputElement\n            if (!checkbox.contains(target)) {\n                checkbox.checked = !checkbox.checked\n            }\n            const column = Number(li.dataset.column)\n            if (checkbox.checked) {\n                this.dt.columns.show([column])\n            } else {\n                this.dt.columns.hide([column])\n            }\n        } else if (this.menuOpen) {\n            this._closeMenu()\n        }\n    }\n\n}\n\n\nexport const addColumnFilter = function(dataTable: DataTable, options = {}) {\n    const columnFilter = new ColumnFilter(dataTable, options)\n    if (dataTable.initialized) {\n        columnFilter.init()\n    } else {\n        dataTable.on(\"datatable.init\", () => columnFilter.init())\n    }\n\n    return columnFilter\n}\n"],"names":["isObject","val","Object","prototype","toString","call","isJson","str","t","JSON","parse","Array","isArray","createElement","nodeName","attrs","dom","document","attr","innerHTML","setAttribute","objToText","obj","includes","data","childNodes","map","childNode","join","cellToText","hasOwnProperty","cell","text","String","escapeText","replace","visibleToColumnIndex","visibleIndex","columns","counter","columnIndex","hidden","namedNodeMapToObject","name","value","classNamesToSelector","classNames","trim","split","className","containsClass","element","classes","hasMissingClass","some","classList","contains","joinWithSpaces","first","second","debounce","func","timeout","timer","_args","clearTimeout","window","setTimeout","__assign","assign","s","arguments$1","arguments","i","n","length","p","apply","this","__spreadArray","to","from","pack","ar","l","slice","concat","SuppressedError","Diff","options","_this","entries","forEach","_a","key","stringify","setValue","aKey","aValue","checkElementType","simplifiedCheck","elementTypeNames","_i","elementTypeName","nodeType","tagName","startsWith","endsWith","toLowerCase","ownerDocument","_b","defaultView","objToNode","objNode","insideSvg","node","createTextNode","createComment","createElementNS","attributes","appendChild","valueDiffing","simplifiedElementCheck","checked","selected","getFromRoute","route","c","splice","applyDiff","tree","diff","newNode","reference","action","_const","addElement","addTextElement","info","preDiffApply","addAttribute","modifyAttribute","newValue","removeAttribute","modifyTextElement","textDiff","oldValue","parentNode","modifyValue","modifyComment","modifyChecked","modifySelected","replaceElement","namespaceURI","replaceChild","relocateGroup","groupLength","removeChild","index","insertBefore","removeElement","parentRoute","removeTextElement","console","log","postDiffApply","swap","p1","p2","tmp","undoDOM","diffs","reverse","undoDiff","elementDescriptors","el","output","push","id","findUniqueDescriptors","li","uniqueDescriptors","duplicateDescriptors","descriptor","inUnique","uniqueInBoth","l1","l2","l1Unique","l2Unique","inBoth","keys","removeDone","outerDone","innerDone","valueDone","every","cleanNode","diffNode","elementNode","diffChildNode","isEqual","e1","e2","Boolean","e1Attributes","e2Attributes","attribute","roughlyEqual","sameSiblings","preventRecursion","nodeList1","nodeList2","childUniqueDescriptors_1","makeBooleanArray","v","markSubTrees","oldTree","newTree","oldChildren","newChildren","marked1","marked2","subsets","returnIndex","foundAllSubsets","_loop_1","subset","c1","c2","lcsSize","c1Length","c2Length","matches","subsetsSame","c1Desc","c2Desc","description","c1Index","c1Element","c2Index","c2Element","findCommonSubsets","item","markBoth","subsetsAge","DiffTracker","list","add","fn","getFromVirtualRoute","nodeIndex","undefined","applyVirtual","routeInfo","newSubsets","preVirtualDiffApply","movedNode","splitLength","c_1","c_2","filter","postVirtualDiffApply","applyVirtualDiff","nodeToObj","aNode","type","tagRE","attrRE","unescape","string","lookup","area","base","br","col","embed","hr","img","input","keygen","link","menuItem","meta","param","source","track","wbr","parseTag","tag","caseSensitive","res","voidElement","tagMatch","match","toUpperCase","charAt","endIndex","indexOf","reg","RegExp","result","done","exec","arr","lastIndex","substring","stringToObj","html","current","level","end","isOpen","isComment","start","nextChar","comment","parent_1","parent_2","DiffFinder","t1Node","t2Node","t1","Element","t2","diffcount","foundAll","debug","t1Orig","t2Orig","tracker","init","findDiffs","diffcap","Error","findNextDiff","error","fdiffs","maxDepth","findOuterDiff","filterOuterDiff","findInnerDiff","findValueDiff","attr1","attr2","attrLength","pos","Math","abs","sort","t1ChildNodes","t2ChildNodes","last","max","childNodesLengthDifference","maxChildCount","cachedSubtrees","subtrees","attemptGroupRelocation","destinationDifferent","toGroup","group","similarNode","gapInformation","stable","gaps1","gaps2","endOld","endNew","j","getGapInformation","shortest","min","index2","index1","testI","DEFAULT_OPTIONS","currentValue","expectedValue","compress","components","DiffDOM","varNames","constNames_1","varName","applyDOM","undo","headingsToVirtualHeaderRowDOM","headings","columnSettings","columnsState","format","hiddenHeader","sortable","scrollY","noColumnWidths","unhideHeader","heading","column","headerClass","class","directionClass","dir","ascending","descending","filters","filterActive","widths","style","headerNodes","sorter","dataToVirtualDOM","tableAttributes","rows","rowCursor","header","footer","rowRender","tabIndex","renderHeader","footers","captions","table","row","tr","cells","cIndex","searchable","td","cellClass","render","renderedCell","cursor","renderedRow","headerRow","thead","unshift","tfoot","structuredClone","foot","caption","tabindex","e","r","u","a","o","f","h","d","$","y","M","weekdays","months","ordinal","m","z","utcOffset","floor","date","year","month","clone","ceil","w","D","ms","Q","g","S","_","O","args","b","locale","$L","utc","$u","x","$x","$offset","$d","Date","NaN","test","UTC","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","toDate","$locale","weekStart","$set","daysInMonth","get","Number","round","subtract","invalidDate","meridiem","monthsShort","weekdaysMin","weekdaysShort","getTimezoneOffset","toJSON","toISOString","toUTCString","k","extend","$i","isDayjs","en","Ls","exports","LTS","LT","L","LL","LLL","LLLL","zone","offset","A","afternoon","milliseconds","SS","SSS","ss","mm","H","HH","hh","DD","Do","day","ww","MM","MMM","MMMM","Y","YY","YYYY","Z","ZZ","formats","regex","parser","hours","customParseFormat","parseTwoDigitYear","minutes","seconds","week","dayjs","parseDate","content","readDataCell","cellData","inputData","constructor","find","cellObj","order","parseFloat","readDOMDataCell","innerText","readHeaderCell","headerCell","readTableData","dataOption","defaultType","defaultFormat","processedHeadings","colspan","parseInt","tHead","querySelectorAll","th","getAttribute","readDOMHeaderCell","settings","dataset","firstRow","firstRowCells","_cell","tBodies","rowspanCarryover","Map","_rowIndex","processedCells","cellIndex","inputCellIndex","has","carryover","remainingRows","delete","rowspan","domCellIndex","domCells","isNaN","Rows","dt","setCursor","oldCursor","_renderTable","cursorSelector","cursorDOM","querySelector","scrollIntoView","block","emit","hasRows","update","remove","select","_row","findRowIndex","findIndex","findRow","cols","updateRow","Columns","_state","columnOptions","selector","numeric","caseFirst","sensitivity","ignorePunctuation","searchMethod","sortSequence","searchItemSeparator","readColumnSettings","size","_node","hide","show","visible","newColumnSelector","_heading","currentFilter","newFilterState","returnNext","_currentPage","currentDir","currentDirIndex","collator","Intl","Collator","usage","rowGroups","rowToGroup","rowIndex","groupIndex","group1","group2","getActualCellValue","prevCell","order1","order2","temp","compare","sortedData","_searchQueries","multiSearch","_measureWidths","activeHeadings","fixedColumns","renderOptions","noPaging","headerDOM","parentElement","activeDOMHeadings","firstElementChild","domCounter","absoluteColumnWidths","width","offsetWidth","totalOffsetWidth","reduce","total","cellWidth","defaultConfig","destroyable","searchQuerySeparator","searchAnd","paging","perPage","perPageSelect","nextPrev","firstLast","prevText","nextText","firstText","lastText","ellipsisText","truncatePager","pagerDelta","fixedHeight","rowNavigation","rowSelectionKeys","pagerRender","tableRender","diffDomOptions","labels","placeholder","searchTitle","pageTitle","noRows","noResults","template","top","dropdown","search","container","bottom","pagination","active","disabled","ellipsis","empty","headercontainer","loading","paginationList","paginationListItem","paginationListItemLink","wrapper","page","label","state","createVirtualPagerDOM","onFirstPage","onLastPage","currentPage","totalPages","pagerListItems","prev","pages","paginationListItems","pagesLength","doublePagerDelta","previousPage","nextPage","paginationListItemsToModify","previousLi","modifiedLis","pageNumber","previousPageNumber","newLi","truncate","next","DataTable","containerDOM","_dd","_events","hasHeadings","_initialHTML","initialized","_label","lastPage","_listeners","_pagerDOMs","_virtualPagerDOM","_rect","_searchData","_tableAttributes","_tableFooters","_tableCaptions","_virtualDOM","_virtualHeaderDOM","wrapperDOM","HTMLTableElement","outerHTML","onResize","_onResize","_render","selectorClassSelector","choice","lab","option","Option","containerSelector","paginationSelector","HTMLElement","infoSelector","getBoundingClientRect","_fixHeight","_bindEvents","newVirtualDOM","renderedTableVirtualDOM","_renderPage","lastRowCursor","setMessage","items","_renderPagers","newPagerVirtualDOM","renderedPagerVirtualDOM","pagerDOM","_renderSeparateHeader","tableVirtualDOM","newVirtualHeaderDOM","paddingRight","clientWidth","paddedVirtualHeaderDOM","scrollHeight","clientHeight","overflowY","HTMLSelectElement","addEventListener","event","inputSelector","target","HTMLInputElement","preventDefault","searches","andSearch","and","terms","querySeparator","term","hyperlink","closest","hasAttribute","children","lastRow","stopPropagation","foundRow","nextRow","destroy","oldDOM","oldTable","removeEventListener","measureWidths","_paginate","filterState","height","rawQueries","queries","query","queryWords","columnQueries","normalize","idx","searchRow","customSearchMethod","actualCell","queryColumn","queryIndex","queryColumnWord","queryWord","searchItem","insert","rIndex","refresh","print","tableDOM","newTableVirtualDOM","open","body","message","on","callback","off","convertCSV","userOptions","lineDelimiter","columnDelimiter","removeDoubleQuotes","shift","values","convertJSON","json","warn","exportCSV","download","skipColumn","columnShown","headers","fill","flat","selectedRows","selection","csvRow","csvColumnIndex","dataColumnIndex","cellText","href","encodeURI","filename","click","exportJSON","replacer","space","blob","Blob","url","URL","createObjectURL","revokeObjectURL","exportSQL","tableName","exportTXT","form","menu","save","cancel","close","inner","modal","editable","separator","closeX","editCell","editRow","removeRow","reallyRemove","reallyCancel","cancelModal","editor","confirm","inline","hiddenColumns","contextMenu","clickEvent","excludeColumns","menuItems","_event","Editor","menuOpen","editing","editingCell","editingRow","events","limits","menuDOM","modalDOM","originalRowRender","rect","dataTable","newTr","updateMenu","bindEvents","keydown","bind","context","dismissMenu","reset","pageX","pageY","left","openMenu","saveCell","closeModal","saveRow","closeMenu","editCellModal","openModal","focus","selectionStart","selectionEnd","oldData","stringValue","editRowModal","lastElementChild","inputs","updatedRow","valueCounter","oldItem","colIndex","newData","scrollX","pageXOffset","pageYOffset","innerWidth","innerHeight","valid","columnToVisibleIndex","dataCell","makeEditable","button","ColumnFilter","addedButtonDOM","buttonDOM","buttonSelector","searchSelector","searchWrapper","_measureSpace","_bind","dismiss","_click","_openMenu","_closeMenu","menuSelector","checkbox","addColumnFilter","columnFilter"],"mappings":"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","x_google_ignoreList":[1,3,4]}